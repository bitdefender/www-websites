import"../../../../dex-utils/dist/src/index.js";import{PageLoadedEvent as i}from"../events/page-loaded-event/index.js";import{ProductLoadedEvent as o}from"../events/product-loaded-event/index.js";import s from"../../../../../../_virtual/cjs.js";class y{static _dataLayer={};static{window.adobeDataLayer=window.adobeDataLayer||[]}static combineMerge(t,a){const e=new Set;return a.length&&a.forEach(r=>{e.add(JSON.stringify(r))}),t.length&&t.forEach(r=>{e.add(JSON.stringify(r))}),[...e].map(r=>JSON.parse(r))}static pushEventsToDataLayer(){const t=this._dataLayer["product loaded"];if(t){const a=t.product;a.all=a.all?.filter(e=>!a.info?.some(r=>JSON.stringify(e)===JSON.stringify(r))),Object.keys(a).forEach(e=>{(!a[e]||!a[e].length)&&delete a[e]})}Object.keys(this._dataLayer).forEach(a=>{window.adobeDataLayer.push({...this._dataLayer[a]}),delete this._dataLayer[a]})}static get dataLayer(){return this._dataLayer}static push(t){if(t instanceof o){const a={[t.event]:t};this._dataLayer=s(this._dataLayer,a,{arrayMerge:this.combineMerge});return}else t instanceof i&&this.pushEventsToDataLayer();window.adobeDataLayer.push({...t})}}export{y as AdobeDataLayerService};
//# sourceMappingURL=index.js.map
