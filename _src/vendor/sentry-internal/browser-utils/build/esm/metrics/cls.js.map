{"version":3,"file":"cls.js","sources":["../../../../../../../node_modules/@sentry-internal/browser-utils/build/esm/metrics/cls.js"],"sourcesContent":["import { getClient, getActiveSpan, getRootSpan, spanToJSON, logger, browserPerformanceTimeOrigin, getCurrentScope, htmlTreeAsString, SEMANTIC_ATTRIBUTE_EXCLUSIVE_TIME, SEMANTIC_ATTRIBUTE_SENTRY_MEASUREMENT_VALUE, SEMANTIC_ATTRIBUTE_SENTRY_MEASUREMENT_UNIT, SEMANTIC_ATTRIBUTE_SENTRY_OP, SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN } from '@sentry/core';\nimport { DEBUG_BUILD } from '../debug-build.js';\nimport { addClsInstrumentationHandler } from './instrument.js';\nimport { msToSec, startStandaloneWebVitalSpan } from './utils.js';\nimport { onHidden } from './web-vitals/lib/onHidden.js';\n\n/**\n * Starts tracking the Cumulative Layout Shift on the current page and collects the value once\n *\n * - the page visibility is hidden\n * - a navigation span is started (to stop CLS measurement for SPA soft navigations)\n *\n * Once either of these events triggers, the CLS value is sent as a standalone span and we stop\n * measuring CLS.\n */\nfunction trackClsAsStandaloneSpan() {\n  let standaloneCLsValue = 0;\n  let standaloneClsEntry;\n  let pageloadSpanId;\n\n  if (!supportsLayoutShift()) {\n    return;\n  }\n\n  let sentSpan = false;\n  function _collectClsOnce() {\n    if (sentSpan) {\n      return;\n    }\n    sentSpan = true;\n    if (pageloadSpanId) {\n      sendStandaloneClsSpan(standaloneCLsValue, standaloneClsEntry, pageloadSpanId);\n    }\n    cleanupClsHandler();\n  }\n\n  const cleanupClsHandler = addClsInstrumentationHandler(({ metric }) => {\n    const entry = metric.entries[metric.entries.length - 1] ;\n    if (!entry) {\n      return;\n    }\n    standaloneCLsValue = metric.value;\n    standaloneClsEntry = entry;\n  }, true);\n\n  // use pagehide event from web-vitals\n  onHidden(() => {\n    _collectClsOnce();\n  });\n\n  // Since the call chain of this function is synchronous and evaluates before the SDK client is created,\n  // we need to wait with subscribing to a client hook until the client is created. Therefore, we defer\n  // to the next tick after the SDK setup.\n  setTimeout(() => {\n    const client = getClient();\n\n    if (!client) {\n      return;\n    }\n\n    const unsubscribeStartNavigation = client.on('startNavigationSpan', () => {\n      _collectClsOnce();\n      unsubscribeStartNavigation?.();\n    });\n\n    const activeSpan = getActiveSpan();\n    if (activeSpan) {\n      const rootSpan = getRootSpan(activeSpan);\n      const spanJSON = spanToJSON(rootSpan);\n      if (spanJSON.op === 'pageload') {\n        pageloadSpanId = rootSpan.spanContext().spanId;\n      }\n    }\n  }, 0);\n}\n\nfunction sendStandaloneClsSpan(clsValue, entry, pageloadSpanId) {\n  DEBUG_BUILD && logger.log(`Sending CLS span (${clsValue})`);\n\n  const startTime = msToSec((browserPerformanceTimeOrigin() || 0) + (entry?.startTime || 0));\n  const routeName = getCurrentScope().getScopeData().transactionName;\n\n  const name = entry ? htmlTreeAsString(entry.sources[0]?.node) : 'Layout shift';\n\n  const attributes = {\n    [SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN]: 'auto.http.browser.cls',\n    [SEMANTIC_ATTRIBUTE_SENTRY_OP]: 'ui.webvital.cls',\n    [SEMANTIC_ATTRIBUTE_EXCLUSIVE_TIME]: entry?.duration || 0,\n    // attach the pageload span id to the CLS span so that we can link them in the UI\n    'sentry.pageload.span_id': pageloadSpanId,\n  };\n\n  const span = startStandaloneWebVitalSpan({\n    name,\n    transaction: routeName,\n    attributes,\n    startTime,\n  });\n\n  if (span) {\n    span.addEvent('cls', {\n      [SEMANTIC_ATTRIBUTE_SENTRY_MEASUREMENT_UNIT]: '',\n      [SEMANTIC_ATTRIBUTE_SENTRY_MEASUREMENT_VALUE]: clsValue,\n    });\n\n    // LayoutShift performance entries always have a duration of 0, so we don't need to add `entry.duration` here\n    // see: https://developer.mozilla.org/en-US/docs/Web/API/PerformanceEntry/duration\n    span.end(startTime);\n  }\n}\n\nfunction supportsLayoutShift() {\n  try {\n    return PerformanceObserver.supportedEntryTypes.includes('layout-shift');\n  } catch {\n    return false;\n  }\n}\n\nexport { trackClsAsStandaloneSpan };\n//# sourceMappingURL=cls.js.map\n"],"names":["trackClsAsStandaloneSpan","standaloneCLsValue","standaloneClsEntry","pageloadSpanId","supportsLayoutShift","sentSpan","_collectClsOnce","sendStandaloneClsSpan","cleanupClsHandler","addClsInstrumentationHandler","metric","entry","onHidden","client","getClient","unsubscribeStartNavigation","activeSpan","getActiveSpan","rootSpan","getRootSpan","spanToJSON","clsValue","DEBUG_BUILD","logger","startTime","msToSec","browserPerformanceTimeOrigin","routeName","getCurrentScope","name","htmlTreeAsString","attributes","SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN","SEMANTIC_ATTRIBUTE_SENTRY_OP","SEMANTIC_ATTRIBUTE_EXCLUSIVE_TIME","span","startStandaloneWebVitalSpan","SEMANTIC_ATTRIBUTE_SENTRY_MEASUREMENT_UNIT","SEMANTIC_ATTRIBUTE_SENTRY_MEASUREMENT_VALUE"],"mappings":"sgCAeA,SAASA,GAA2B,CAClC,IAAIC,EAAqB,EACrBC,EACAC,EAEJ,GAAI,CAACC,EAAmB,EACtB,OAGF,IAAIC,EAAW,GACf,SAASC,GAAkB,CACrBD,IAGJA,EAAW,GACPF,GACFI,EAAsBN,EAAoBC,EAAoBC,CAAc,EAE9EK,EAAmB,EACvB,CAEE,MAAMA,EAAoBC,EAA6B,CAAC,CAAE,OAAAC,CAAM,IAAO,CACrE,MAAMC,EAAQD,EAAO,QAAQA,EAAO,QAAQ,OAAS,CAAC,EACjDC,IAGLV,EAAqBS,EAAO,MAC5BR,EAAqBS,EACtB,EAAE,EAAI,EAGPC,EAAS,IAAM,CACbN,EAAiB,CACrB,CAAG,EAKD,WAAW,IAAM,CACf,MAAMO,EAASC,EAAW,EAE1B,GAAI,CAACD,EACH,OAGF,MAAME,EAA6BF,EAAO,GAAG,sBAAuB,IAAM,CACxEP,EAAiB,EACjBS,IAA8B,CACpC,CAAK,EAEKC,EAAaC,EAAe,EAClC,GAAID,EAAY,CACd,MAAME,EAAWC,EAAYH,CAAU,EACtBI,EAAWF,CAAQ,EACvB,KAAO,aAClBf,EAAiBe,EAAS,YAAW,EAAG,OAEhD,CACG,EAAE,CAAC,CACN,CAEA,SAASX,EAAsBc,EAAUV,EAAOR,EAAgB,CAC9DmB,GAAeC,EAAO,IAAI,qBAAqBF,CAAQ,GAAG,EAE1D,MAAMG,EAAYC,GAASC,EAA4B,GAAM,IAAMf,GAAO,WAAa,EAAE,EACnFgB,EAAYC,IAAkB,aAAc,EAAC,gBAE7CC,EAAOlB,EAAQmB,EAAiBnB,EAAM,QAAQ,CAAC,GAAG,IAAI,EAAI,eAE1DoB,EAAa,CACjB,CAACC,CAAgC,EAAG,wBACpC,CAACC,CAA4B,EAAG,kBAChC,CAACC,CAAiC,EAAGvB,GAAO,UAAY,EAExD,0BAA2BR,CAC5B,EAEKgC,EAAOC,EAA4B,CACvC,KAAAP,EACA,YAAaF,EACb,WAAAI,EACA,UAAAP,CACJ,CAAG,EAEGW,IACFA,EAAK,SAAS,MAAO,CACnB,CAACE,CAA0C,EAAG,GAC9C,CAACC,CAA2C,EAAGjB,CACrD,CAAK,EAIDc,EAAK,IAAIX,CAAS,EAEtB,CAEA,SAASpB,GAAsB,CAC7B,GAAI,CACF,OAAO,oBAAoB,oBAAoB,SAAS,cAAc,CAC1E,MAAU,CACN,MAAO,EACX,CACA","x_google_ignoreList":[0]}