import{WINDOW as k}from"../types.js";import{trackClsAsStandaloneSpan as L}from"./cls.js";import{addPerformanceInstrumentationHandler as M,addFidInstrumentationHandler as R,addLcpInstrumentationHandler as B,addTtfbInstrumentationHandler as H,addClsInstrumentationHandler as x}from"./instrument.js";import{getBrowserPerformanceAPI as P,msToSec as u,startAndEndSpan as p,extractNetworkProtocol as z,isMeasurementValue as E}from"./utils.js";import{getActivationStart as $}from"./web-vitals/lib/getActivationStart.js";import{getNavigationEntry as q}from"./web-vitals/lib/getNavigationEntry.js";import{getVisibilityWatcher as F}from"./web-vitals/lib/getVisibilityWatcher.js";import{browserPerformanceTimeOrigin as v}from"../../../../../sentry/core/build/esm/utils-hoist/time.js";import{getActiveSpan as A,spanToJSON as y}from"../../../../../sentry/core/build/esm/utils/spanUtils.js";import{SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN as T}from"../../../../../sentry/core/build/esm/semanticAttributes.js";import{setMeasurement as O}from"../../../../../sentry/core/build/esm/tracing/measurement.js";import{parseUrl as V}from"../../../../../sentry/core/build/esm/utils-hoist/url.js";import{htmlTreeAsString as C,getComponentName as W}from"../../../../../sentry/core/build/esm/utils-hoist/browser.js";const D=2147483647;let I=0,m={},f,h;function bt({recordClsStandaloneSpans:e}){const t=P();if(t&&v()){t.mark&&k.performance.mark("sentry-tracing-init");const r=Y(),n=G(),o=j(),s=e?L():U();return()=>{r(),n(),o(),s?.()}}return()=>{}}function vt(){M("longtask",({entries:e})=>{const t=A();if(!t)return;const{op:r,start_timestamp:n}=y(t);for(const o of e){const s=u(v()+o.startTime),c=u(o.duration);r==="navigation"&&n&&s<n||p(t,s,s+c,{name:"Main UI thread blocked",op:"ui.long-task",attributes:{[T]:"auto.ui.browser.metrics"}})}})}function gt(){new PerformanceObserver(t=>{const r=A();if(r)for(const n of t.getEntries()){if(!n.scripts[0])continue;const o=u(v()+n.startTime),{start_timestamp:s,op:c}=y(r);if(c==="navigation"&&s&&o<s)continue;const a=u(n.duration),i={[T]:"auto.ui.browser.metrics"},l=n.scripts[0],{invoker:d,invokerType:g,sourceURL:b,sourceFunctionName:_,sourceCharPosition:N}=l;i["browser.script.invoker"]=d,i["browser.script.invoker_type"]=g,b&&(i["code.filepath"]=b),_&&(i["code.function"]=_),N!==-1&&(i["browser.script.source_char_position"]=N),p(r,o,o+a,{name:"Main UI thread blocked",op:"ui.long-animation-frame",attributes:i})}}).observe({type:"long-animation-frame",buffered:!0})}function _t(){M("event",({entries:e})=>{const t=A();if(t){for(const r of e)if(r.name==="click"){const n=u(v()+r.startTime),o=u(r.duration),s={name:C(r.target),op:`ui.interaction.${r.name}`,startTime:n,attributes:{[T]:"auto.ui.browser.metrics"}},c=W(r.target);c&&(s.attributes["ui.component_name"]=c),p(t,n,n+o,s)}}})}function U(){return x(({metric:e})=>{const t=e.entries[e.entries.length-1];t&&(m.cls={value:e.value,unit:""},h=t)},!0)}function G(){return B(({metric:e})=>{const t=e.entries[e.entries.length-1];t&&(m.lcp={value:e.value,unit:"millisecond"},f=t)},!0)}function Y(){return R(({metric:e})=>{const t=e.entries[e.entries.length-1];if(!t)return;const r=u(v()),n=u(t.startTime);m.fid={value:e.value,unit:"millisecond"},m["mark.fid"]={value:r+n,unit:"second"}})}function j(){return H(({metric:e})=>{e.entries[e.entries.length-1]&&(m.ttfb={value:e.value,unit:"millisecond"})})}function St(e,t){const r=P(),n=v();if(!r?.getEntries||!n)return;const o=u(n),s=r.getEntries(),{op:c,start_timestamp:a}=y(e);if(s.slice(I).forEach(i=>{const l=u(i.startTime),d=u(Math.max(0,i.duration));if(!(c==="navigation"&&a&&o+l<a))switch(i.entryType){case"navigation":{X(e,i,o);break}case"mark":case"paint":case"measure":{J(e,i,l,d,o);const g=F(),b=i.startTime<g.firstHiddenTime;i.name==="first-paint"&&b&&(m.fp={value:i.startTime,unit:"millisecond"}),i.name==="first-contentful-paint"&&b&&(m.fcp={value:i.startTime,unit:"millisecond"});break}case"resource":{Z(e,i,i.name,l,d,o);break}}}),I=Math.max(s.length-1,0),tt(e),c==="pageload"){rt(m);const i=m["mark.fid"];i&&m.fid&&(p(e,i.value,i.value+u(m.fid.value),{name:"first input delay",op:"ui.action",attributes:{[T]:"auto.ui.browser.metrics"}}),delete m["mark.fid"]),(!("fcp"in m)||!t.recordClsOnPageloadSpan)&&delete m.cls,Object.entries(m).forEach(([l,d])=>{O(l,d.value,d.unit)}),e.setAttribute("performance.timeOrigin",o),e.setAttribute("performance.activationStart",$()),et(e)}f=void 0,h=void 0,m={}}function J(e,t,r,n,o){const s=q(!1),c=u(s?s.requestStart:0),a=o+Math.max(r,c),i=o+r,l=i+n,d={[T]:"auto.resource.browser.metrics"};a!==i&&(d["sentry.browser.measure_happened_before_request"]=!0,d["sentry.browser.measure_start_time"]=a),a<=l&&p(e,a,l,{name:t.name,op:t.entryType,attributes:d})}function X(e,t,r){["unloadEvent","redirect","domContentLoadedEvent","loadEvent","connect"].forEach(n=>{S(e,t,n,r)}),S(e,t,"secureConnection",r,"TLS/SSL"),S(e,t,"fetch",r,"cache"),S(e,t,"domainLookup",r,"DNS"),Q(e,t,r)}function S(e,t,r,n,o=r){const s=K(r),c=t[s],a=t[`${r}Start`];!a||!c||p(e,n+u(a),n+u(c),{op:`browser.${o}`,name:t.name,attributes:{[T]:"auto.ui.browser.metrics",...r==="redirect"&&t.redirectCount!=null?{"http.redirect_count":t.redirectCount}:{}}})}function K(e){return e==="secureConnection"?"connectEnd":e==="fetch"?"domainLookupStart":`${e}End`}function Q(e,t,r){const n=r+u(t.requestStart),o=r+u(t.responseEnd),s=r+u(t.responseStart);t.responseEnd&&(p(e,n,o,{op:"browser.request",name:t.name,attributes:{[T]:"auto.ui.browser.metrics"}}),p(e,s,o,{op:"browser.response",name:t.name,attributes:{[T]:"auto.ui.browser.metrics"}}))}function Z(e,t,r,n,o,s){if(t.initiatorType==="xmlhttprequest"||t.initiatorType==="fetch")return;const c=V(r),a={[T]:"auto.resource.browser.metrics"};w(a,t,"transferSize","http.response_transfer_size"),w(a,t,"encodedBodySize","http.response_content_length"),w(a,t,"decodedBodySize","http.decoded_response_content_length");const i=t.deliveryType;i!=null&&(a["http.response_delivery_type"]=i);const l=t.renderBlockingStatus;l&&(a["resource.render_blocking_status"]=l),c.protocol&&(a["url.scheme"]=c.protocol.split(":").pop()),c.host&&(a["server.address"]=c.host),a["url.same_origin"]=r.includes(k.location.origin);const{name:d,version:g}=z(t.nextHopProtocol);a["network.protocol.name"]=d,a["network.protocol.version"]=g;const b=s+n,_=b+o;p(e,b,_,{name:r.replace(k.location.origin,""),op:t.initiatorType?`resource.${t.initiatorType}`:"resource.other",attributes:a})}function tt(e){const t=k.navigator;if(!t)return;const r=t.connection;r&&(r.effectiveType&&e.setAttribute("effectiveConnectionType",r.effectiveType),r.type&&e.setAttribute("connectionType",r.type),E(r.rtt)&&(m["connection.rtt"]={value:r.rtt,unit:"millisecond"})),E(t.deviceMemory)&&e.setAttribute("deviceMemory",`${t.deviceMemory} GB`),E(t.hardwareConcurrency)&&e.setAttribute("hardwareConcurrency",String(t.hardwareConcurrency))}function et(e){f&&(f.element&&e.setAttribute("lcp.element",C(f.element)),f.id&&e.setAttribute("lcp.id",f.id),f.url&&e.setAttribute("lcp.url",f.url.trim().slice(0,200)),f.loadTime!=null&&e.setAttribute("lcp.loadTime",f.loadTime),f.renderTime!=null&&e.setAttribute("lcp.renderTime",f.renderTime),e.setAttribute("lcp.size",f.size)),h?.sources&&h.sources.forEach((t,r)=>e.setAttribute(`cls.source.${r+1}`,C(t.node)))}function w(e,t,r,n){const o=t[r];o!=null&&o<D&&(e[n]=o)}function rt(e){const t=q(!1);if(!t)return;const{responseStart:r,requestStart:n}=t;n<=r&&(e["ttfb.requestTime"]={value:r-n,unit:"millisecond"})}export{J as _addMeasureSpans,X as _addNavigationSpans,Z as _addResourceSpans,St as addPerformanceEntries,_t as startTrackingInteractions,gt as startTrackingLongAnimationFrames,vt as startTrackingLongTasks,bt as startTrackingWebVitals};
//# sourceMappingURL=browserMetrics.js.map
