import{parseSampleRate as d}from"../utils/parseSampleRate.js";import{baggageHeaderToDynamicSamplingContext as c}from"./baggage.js";import{generateTraceId as p,generateSpanId as f}from"./propagationContext.js";const s=new RegExp("^[ \\t]*([0-9a-f]{32})?-?([0-9a-f]{16})?-?([01])?[ \\t]*$");function l(t){if(!t)return;const a=t.match(s);if(!a)return;let e;return a[3]==="1"?e=!0:a[3]==="0"&&(e=!1),{traceId:a[1],parentSampled:e,parentSpanId:a[2]}}function I(t,a){const e=l(t),n=c(a);if(!e?.traceId)return{traceId:p(),sampleRand:Math.random()};const r=u(e,n);n&&(n.sample_rand=r.toString());const{traceId:m,parentSpanId:o,parentSampled:i}=e;return{traceId:m,parentSpanId:o,sampled:i,dsc:n||{},sampleRand:r}}function T(t=p(),a=f(),e){let n="";return e!==void 0&&(n=e?"-1":"-0"),`${t}-${a}${n}`}function u(t,a){const e=d(a?.sample_rand);if(e!==void 0)return e;const n=d(a?.sample_rate);return n&&t?.parentSampled!==void 0?t.parentSampled?Math.random()*n:n+Math.random()*(1-n):Math.random()}export{s as TRACEPARENT_REGEXP,l as extractTraceparentData,T as generateSentryTraceHeader,I as propagationContextFromHeaders};
//# sourceMappingURL=tracing.js.map
