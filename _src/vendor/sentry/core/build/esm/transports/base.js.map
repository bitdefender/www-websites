{"version":3,"file":"base.js","sources":["../../../../../../../node_modules/@sentry/core/build/esm/transports/base.js"],"sourcesContent":["import { DEBUG_BUILD } from '../debug-build.js';\nimport { forEachEnvelopeItem, envelopeItemTypeToDataCategory, createEnvelope, serializeEnvelope } from '../utils-hoist/envelope.js';\nimport { logger } from '../utils-hoist/logger.js';\nimport { makePromiseBuffer, SENTRY_BUFFER_FULL_ERROR } from '../utils-hoist/promisebuffer.js';\nimport { isRateLimited, updateRateLimits } from '../utils-hoist/ratelimit.js';\nimport { resolvedSyncPromise } from '../utils-hoist/syncpromise.js';\n\nconst DEFAULT_TRANSPORT_BUFFER_SIZE = 64;\n\n/**\n * Creates an instance of a Sentry `Transport`\n *\n * @param options\n * @param makeRequest\n */\nfunction createTransport(\n  options,\n  makeRequest,\n  buffer = makePromiseBuffer(\n    options.bufferSize || DEFAULT_TRANSPORT_BUFFER_SIZE,\n  ),\n) {\n  let rateLimits = {};\n  const flush = (timeout) => buffer.drain(timeout);\n\n  function send(envelope) {\n    const filteredEnvelopeItems = [];\n\n    // Drop rate limited items from envelope\n    forEachEnvelopeItem(envelope, (item, type) => {\n      const dataCategory = envelopeItemTypeToDataCategory(type);\n      if (isRateLimited(rateLimits, dataCategory)) {\n        options.recordDroppedEvent('ratelimit_backoff', dataCategory);\n      } else {\n        filteredEnvelopeItems.push(item);\n      }\n    });\n\n    // Skip sending if envelope is empty after filtering out rate limited events\n    if (filteredEnvelopeItems.length === 0) {\n      return resolvedSyncPromise({});\n    }\n\n    const filteredEnvelope = createEnvelope(envelope[0], filteredEnvelopeItems );\n\n    // Creates client report for each item in an envelope\n    const recordEnvelopeLoss = (reason) => {\n      forEachEnvelopeItem(filteredEnvelope, (item, type) => {\n        options.recordDroppedEvent(reason, envelopeItemTypeToDataCategory(type));\n      });\n    };\n\n    const requestTask = () =>\n      makeRequest({ body: serializeEnvelope(filteredEnvelope) }).then(\n        response => {\n          // We don't want to throw on NOK responses, but we want to at least log them\n          if (response.statusCode !== undefined && (response.statusCode < 200 || response.statusCode >= 300)) {\n            DEBUG_BUILD && logger.warn(`Sentry responded with status code ${response.statusCode} to sent event.`);\n          }\n\n          rateLimits = updateRateLimits(rateLimits, response);\n          return response;\n        },\n        error => {\n          recordEnvelopeLoss('network_error');\n          DEBUG_BUILD && logger.error('Encountered error running transport request:', error);\n          throw error;\n        },\n      );\n\n    return buffer.add(requestTask).then(\n      result => result,\n      error => {\n        if (error === SENTRY_BUFFER_FULL_ERROR) {\n          DEBUG_BUILD && logger.error('Skipped sending event because buffer is full.');\n          recordEnvelopeLoss('queue_overflow');\n          return resolvedSyncPromise({});\n        } else {\n          throw error;\n        }\n      },\n    );\n  }\n\n  return {\n    send,\n    flush,\n  };\n}\n\nexport { DEFAULT_TRANSPORT_BUFFER_SIZE, createTransport };\n//# sourceMappingURL=base.js.map\n"],"names":["DEFAULT_TRANSPORT_BUFFER_SIZE","createTransport","options","makeRequest","buffer","makePromiseBuffer","rateLimits","flush","timeout","send","envelope","filteredEnvelopeItems","forEachEnvelopeItem","item","type","dataCategory","envelopeItemTypeToDataCategory","isRateLimited","resolvedSyncPromise","filteredEnvelope","createEnvelope","recordEnvelopeLoss","reason","requestTask","serializeEnvelope","response","DEBUG_BUILD","logger","updateRateLimits","error","result","SENTRY_BUFFER_FULL_ERROR"],"mappings":"0eAOK,MAACA,EAAgC,GAQtC,SAASC,EACPC,EACAC,EACAC,EAASC,EACPH,EAAQ,YAAcF,CACvB,EACD,CACA,IAAIM,EAAa,CAAE,EACnB,MAAMC,EAASC,GAAYJ,EAAO,MAAMI,CAAO,EAE/C,SAASC,EAAKC,EAAU,CACtB,MAAMC,EAAwB,CAAE,EAahC,GAVAC,EAAoBF,EAAU,CAACG,EAAMC,IAAS,CAC5C,MAAMC,EAAeC,EAA+BF,CAAI,EACpDG,EAAcX,EAAYS,CAAY,EACxCb,EAAQ,mBAAmB,oBAAqBa,CAAY,EAE5DJ,EAAsB,KAAKE,CAAI,CAEvC,CAAK,EAGGF,EAAsB,SAAW,EACnC,OAAOO,EAAoB,CAAA,CAAE,EAG/B,MAAMC,EAAmBC,EAAeV,EAAS,CAAC,EAAGC,CAAuB,EAGtEU,EAAsBC,GAAW,CACrCV,EAAoBO,EAAkB,CAACN,EAAMC,IAAS,CACpDZ,EAAQ,mBAAmBoB,EAAQN,EAA+BF,CAAI,CAAC,CAC/E,CAAO,CACF,EAEKS,EAAc,IAClBpB,EAAY,CAAE,KAAMqB,EAAkBL,CAAgB,CAAC,CAAE,EAAE,KACzDM,IAEMA,EAAS,aAAe,SAAcA,EAAS,WAAa,KAAOA,EAAS,YAAc,MAC5FC,GAAeC,EAAO,KAAK,qCAAqCF,EAAS,UAAU,iBAAiB,EAGtGnB,EAAasB,EAAiBtB,EAAYmB,CAAQ,EAC3CA,GAETI,GAAS,CACP,MAAAR,EAAmB,eAAe,EAClCK,GAAeC,EAAO,MAAM,+CAAgDE,CAAK,EAC3EA,CACP,CACF,EAEH,OAAOzB,EAAO,IAAImB,CAAW,EAAE,KAC7BO,GAAUA,EACVD,GAAS,CACP,GAAIA,IAAUE,EACZ,OAAAL,GAAeC,EAAO,MAAM,+CAA+C,EAC3EN,EAAmB,gBAAgB,EAC5BH,EAAoB,CAAA,CAAE,EAE7B,MAAMW,CAET,CACF,CACL,CAEE,MAAO,CACL,KAAApB,EACA,MAAAF,CACD,CACH","x_google_ignoreList":[0]}