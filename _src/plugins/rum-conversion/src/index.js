const{sampleRUM:o}=window.hlx.rum;o.always=o.always||[];o.always.on=(a,n)=>{o.always[a]=n};o.drain("convert",(a,n,r,i=[])=>{async function t(e){try{const l=JSON.parse(localStorage.getItem("unified-decisioning-experiments"));l&&Object.entries(l).map(([d,{treatment:f,date:g}])=>({experiment:d,treatment:f,date:g})).filter(({date:d})=>Date.now()-new Date(d)<2592e6).forEach(({experiment:d,treatment:f})=>{o("variant",{source:d,target:f})});const h=typeof n=="function"?await n(r):n,v={source:a,target:h,element:e};o("convert",v),o.always&&o.always.convert&&o.always.convert(v)}catch(l){console.log("error reading experiments",l)}}function s(e){Array.isArray(e)||e instanceof NodeList?e.forEach(c=>s(c)):i.forEach(c=>r.addEventListener(c,l=>t(l.target)))}r&&i.length?s(r):t(r)});function m(a){return a.title?this.toClassName(a.title):this.toClassName(a.textContent)}function u(a){const n=a.title||a.textContent;return this.getMetadata(`conversion-name--${n.toLowerCase().replace(/[^0-9a-z]/gi,"-")}-`)}function y(a,n){const r=document.getElementById(n)||a.querySelector(`[name='${n}']`);return r?r.value:Array.from(a.getElementsByTagName("label")).filter(i=>i.innerText.trim().toLowerCase()===n.toLowerCase()).map(i=>document.getElementById(i.htmlFor)).filter(i=>!!i).map(i=>i.value).pop()}async function E(a=document,n=""){const r={form:()=>{a.querySelectorAll("form").forEach(t=>{const s=t.closest("div.section");if(s.dataset.conversionValueField){const c=s.dataset.conversionValueField.trim();o.convert(void 0,l=>y(l,c),t,["submit"])}let e=s.dataset.conversionName||this.getMetadata("conversion-name");e||(e=n?this.toClassName(n):t.id),o.convert(e,void 0,t,["submit"])})},link:()=>{Array.from(a.querySelectorAll("a[href]")).map(t=>({element:t,cevent:u.call(this,t)||this.getMetadata("conversion-name")||m.call(this,t)})).forEach(({element:t,cevent:s})=>{o.convert(s,void 0,t,["click"])})},"labeled-link":()=>{const s=(this.getMetadata("conversion-link-labels")||"").split(",").map(e=>e.trim()).map(this.toClassName);Array.from(a.querySelectorAll("a[href]")).filter(e=>s.includes(m.call(this,e))).map(e=>({element:e,cevent:u.call(this,e)||this.getMetadata("conversion-name")||m.call(this,e)})).forEach(({element:e,cevent:c})=>{o.convert(c,void 0,e,["click"])})}},i=this.getMetadata("conversion-element")?this.getMetadata("conversion-element").split(",").map(t=>this.toClassName(t.trim())):[];Object.keys(r).filter(t=>i.includes(t)).forEach(t=>r[t]())}export{E as initConversionTracking};
//# sourceMappingURL=index.js.map
