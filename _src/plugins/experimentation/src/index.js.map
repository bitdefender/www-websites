{"version":3,"mappings":";;AAWA,MAAM,iBAAiB,GAAG,EAAE,CAAC;;AAEjB,MAAC,eAAe,GAAG;AAC/B;AACA,EAAE,eAAe,EAAE,iBAAiB;;AAEpC;AACA,EAAE,SAAS,EAAE,EAAE;AACf,EAAE,sBAAsB,EAAE,UAAU;AACpC,EAAE,uBAAuB,EAAE,UAAU;;AAErC;AACA,EAAE,sBAAsB,EAAE,UAAU;AACpC,EAAE,uBAAuB,EAAE,UAAU;;AAErC;AACA,EAAE,eAAe,EAAE,cAAc;AACjC,EAAE,qBAAqB,EAAE,eAAe;AACxC,EAAE,kBAAkB,EAAE,YAAY;AAClC,EAAE,yBAAyB,EAAE,YAAY;AACzC;;AAEA;AACA;AACA;AACA;AACA,SAAS,KAAK,GAAG;AACjB,EAAE,OAAO,SAAS,CAAC,SAAS,CAAC,KAAK,CAAC,mBAAmB,CAAC;AACvD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACO,eAAe,oBAAoB,CAAC,mBAAmB,EAAE,OAAO,EAAE,OAAO,EAAE;AAClF,EAAE,IAAI,CAAC,mBAAmB,CAAC,MAAM,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC,MAAM,EAAE;AAC7E,IAAI,OAAO,IAAI;AACf;AACA;AACA;AACA,EAAE,MAAM,GAAG,GAAG,IAAI,eAAe,CAAC,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAC;AACzD,EAAE,MAAM,cAAc,GAAG,GAAG,CAAC,GAAG,CAAC,OAAO,CAAC,uBAAuB;AAChE,MAAM,OAAO,CAAC,WAAW,CAAC,GAAG,CAAC,GAAG,CAAC,OAAO,CAAC,uBAAuB,CAAC;AAClE,MAAM,IAAI;AACV,EAAE,IAAI,cAAc,EAAE;AACtB,IAAI,OAAO,mBAAmB,CAAC,QAAQ,CAAC,cAAc,CAAC,GAAG,CAAC,cAAc,CAAC,GAAG,EAAE;AAC/E;;AAEA;AACA,EAAE,MAAM,OAAO,GAAG,MAAM,OAAO,CAAC,GAAG;AACnC,IAAI;AACJ,OAAO,GAAG,CAAC,CAAC,GAAG,KAAK;AACpB,QAAQ,IAAI,OAAO,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,OAAO,OAAO,CAAC,SAAS,CAAC,GAAG,CAAC,KAAK,UAAU,EAAE;AACpF,UAAU,OAAO,OAAO,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE;AACzC;AACA,QAAQ,OAAO,KAAK;AACpB,OAAO,CAAC;AACR,GAAG;AACH,EAAE,OAAO,mBAAmB,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,KAAK,OAAO,CAAC,CAAC,CAAC,CAAC;AACzD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,YAAY,CAAC,IAAI,EAAE,OAAO,EAAE;AAC3C,EAAE,MAAM,SAAS,GAAG,IAAI,CAAC,QAAQ,CAAC,GAAG;AACrC,MAAM,CAAC,EAAE,IAAI,CAAC,gBAAgB;AAC9B,MAAM,CAAC,EAAE,IAAI,CAAC,WAAW,CAAC;AAC1B,EAAE,IAAI;AACN,IAAI,MAAM,IAAI,GAAG,MAAM,KAAK,CAAC,SAAS,CAAC;AACvC,IAAI,IAAI,CAAC,IAAI,CAAC,EAAE,EAAE;AAClB;AACA,MAAM,OAAO,CAAC,GAAG,CAAC,wBAAwB,EAAE,IAAI,CAAC;AACjD,MAAM,OAAO,KAAK;AAClB;AACA,IAAI,MAAM,IAAI,GAAG,MAAM,IAAI,CAAC,IAAI,EAAE;AAClC;AACA,IAAI,OAAO,CAAC,SAAS,GAAG,IAAI;AAC5B,IAAI,OAAO,SAAS;AACpB,GAAG,CAAC,OAAO,CAAC,EAAE;AACd;AACA,IAAI,OAAO,CAAC,GAAG,CAAC,CAAC,uBAAuB,EAAE,SAAS,CAAC,CAAC,EAAE,CAAC,CAAC;AACzD;AACA,EAAE,OAAO,IAAI;AACb;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,qBAAqB,CAAC,IAAI,EAAE,OAAO,EAAE;AAC9C,EAAE,MAAM,MAAM,GAAG,EAAE;AACnB,EAAE,IAAI;AACN,IAAI,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,IAAI,KAAK;AACzC,MAAM,MAAM,GAAG,GAAG,OAAO,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC;AAChD,MAAM,IAAI,GAAG,KAAK,UAAU,IAAI,GAAG,KAAK,WAAW,EAAE;AACrD,QAAQ,MAAM,CAAC,SAAS,GAAG,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,KAAK,GAAG,CAAC,IAAI,EAAE,CAAC,GAAG,EAAE;AAC3F,OAAO,MAAM,IAAI,GAAG,KAAK,gBAAgB,EAAE;AAC3C,QAAQ,MAAM,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK;AACjC,OAAO,MAAM;AACb,QAAQ,MAAM,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,KAAK;AAChC;AACA,KAAK,CAAC;AACN,IAAI,MAAM,QAAQ,GAAG,EAAE;AACvB,IAAI,IAAI,YAAY,GAAG,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAC5D,IAAI,YAAY,CAAC,KAAK,EAAE;AACxB,IAAI,YAAY,GAAG,YAAY,CAAC,GAAG,CAAC,CAAC,EAAE,KAAK,OAAO,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC;AACpE,IAAI,YAAY,CAAC,OAAO,CAAC,CAAC,WAAW,KAAK;AAC1C,MAAM,QAAQ,CAAC,WAAW,CAAC,GAAG,EAAE;AAChC,KAAK,CAAC;AACN,IAAI,IAAI,OAAO,GAAG,SAAS;AAC3B,IAAI,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,IAAI,KAAK;AAC5C,MAAM,IAAI,GAAG,GAAG,OAAO,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC;AAC9C,MAAM,IAAI,CAAC,GAAG,EAAE,GAAG,GAAG,OAAO;AAC7B,MAAM,OAAO,GAAG,GAAG;AACnB,MAAM,MAAM,GAAG,GAAG,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC;AACnC,MAAM,GAAG,CAAC,KAAK,EAAE;AACjB,MAAM,GAAG,CAAC,OAAO,CAAC,CAAC,EAAE,KAAK;AAC1B,QAAQ,MAAM,OAAO,GAAG,OAAO,CAAC,WAAW,CAAC,EAAE,CAAC;AAC/C,QAAQ,IAAI,GAAG,KAAK,OAAO,IAAI,GAAG,KAAK,QAAQ,EAAE;AACjD,UAAU,QAAQ,CAAC,OAAO,CAAC,CAAC,GAAG,CAAC,GAAG,QAAQ,CAAC,OAAO,CAAC,CAAC,GAAG,CAAC,IAAI,EAAE;AAC/D,UAAU,IAAI,GAAG,KAAK,OAAO,EAAE,QAAQ,CAAC,OAAO,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,IAAI,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,QAAQ,CAAC;AACtF,eAAe,QAAQ,CAAC,OAAO,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;AACpD,SAAS,MAAM;AACf,UAAU,QAAQ,CAAC,OAAO,CAAC,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,EAAE,CAAC;AAC3C;AACA,OAAO,CAAC;AACR,KAAK,CAAC;AACN,IAAI,MAAM,CAAC,QAAQ,GAAG,QAAQ;AAC9B,IAAI,MAAM,CAAC,YAAY,GAAG,YAAY;AACtC,IAAI,OAAO,MAAM;AACjB,GAAG,CAAC,OAAO,CAAC,EAAE;AACd;AACA,IAAI,OAAO,CAAC,GAAG,CAAC,kCAAkC,EAAE,CAAC,EAAE,IAAI,CAAC;AAC5D;AACA,EAAE,OAAO,IAAI;AACb;;AAEA;AACA;AACA;AACA;AACA;AACO,SAAS,4BAA4B,CAAC,MAAM,EAAE;AACrD,EAAE,IAAI,CAAC,MAAM,CAAC;AACd,OAAO,CAAC,MAAM,CAAC,YAAY,CAAC;AAC5B,OAAO,CAAC,MAAM,CAAC;AACf,OAAO,CAAC,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;AACvC,OAAO,CAAC,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;AAC/C,MAAM,OAAO,CAAC,KAAK;AACnB,SAAS,CAAC,CAAC,CAAC,CAAC;AACb,SAAS,CAAC,CAAC,CAAC,CAAC;AACb,UAAU,CAAC,CAAC,eAAe,KAAK,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC,eAAe;AACzD,KAAK,CAAC,EAAE;AACR,IAAI,OAAO,KAAK;AAChB;AACA,EAAE,OAAO,IAAI;AACb;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,0BAA0B,CAAC,QAAQ,EAAE;AAC9C,EAAE,MAAM,yBAAyB,GAAG,EAAE;;AAEtC,EAAE,MAAM,mBAAmB,GAAG,QAAQ,CAAC,MAAM,CAAC,CAAC,MAAM,EAAE,OAAO,KAAK;AACnE,IAAI,IAAI,CAAC,OAAO,CAAC,eAAe,EAAE;AAClC,MAAM,yBAAyB,CAAC,IAAI,CAAC,OAAO,CAAC;AAC7C;AACA,IAAI,MAAM,SAAS,GAAG,MAAM,GAAG,UAAU,CAAC,OAAO,CAAC,eAAe,IAAI,CAAC,CAAC;AACvE,IAAI,OAAO,SAAS;AACpB,GAAG,EAAE,CAAC,CAAC;AACP,EAAE,IAAI,yBAAyB,CAAC,MAAM,EAAE;AACxC,IAAI,MAAM,iBAAiB,GAAG,mBAAmB,GAAG,yBAAyB,CAAC,MAAM;AACpF,IAAI,yBAAyB,CAAC,OAAO,CAAC,CAAC,CAAC,KAAK;AAC7C,MAAM,CAAC,CAAC,eAAe,GAAG,iBAAiB,CAAC,OAAO,CAAC,CAAC,CAAC;AACtD,KAAK,CAAC;AACN;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,6BAA6B;AACtC,EAAE,YAAY;AACd,EAAE,iBAAiB;AACnB,EAAE,aAAa;AACf,EAAE,OAAO;AACT,EAAE;AACF,EAAE,MAAM,QAAQ,GAAG,OAAO,CAAC,WAAW,CAAC,CAAC,EAAE,aAAa,CAAC,kBAAkB,CAAC,SAAS,CAAC,CAAC;AACtF,EAAE,MAAM,MAAM,GAAG;AACjB,IAAI,KAAK,EAAE,CAAC,oBAAoB,EAAE,YAAY,CAAC,CAAC;AAChD,IAAI,SAAS,EAAE,QAAQ,GAAG,QAAQ,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,OAAO,CAAC,WAAW,CAAC,GAAG,EAAE;AAC3E,IAAI,MAAM,EAAE,QAAQ;AACpB,IAAI,EAAE,EAAE,YAAY;AACpB,IAAI,QAAQ,EAAE,EAAE;AAChB,IAAI,YAAY,EAAE,EAAE;AACpB,GAAG;;AAEH,EAAE,MAAM,KAAK,GAAG,iBAAiB,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,KAAK,IAAI,GAAG,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,QAAQ,CAAC;;AAEnF,EAAE,MAAM,WAAW,GAAG,OAAO,CAAC,WAAW,CAAC,CAAC,EAAE,aAAa,CAAC,kBAAkB,CAAC,MAAM,CAAC,CAAC;AACtF,EAAE,MAAM,MAAM,GAAG;AACjB;AACA,MAAM,WAAW,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,KAAK,QAAQ,CAAC,CAAC,EAAE,EAAE,CAAC,GAAG,GAAG;AAC7D;AACA,MAAM,CAAC,GAAG,IAAI,KAAK,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,IAAI,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;;AAEpE,EAAE,MAAM,CAAC,YAAY,CAAC,IAAI,CAAC,SAAS,CAAC;AACrC,EAAE,MAAM,CAAC,QAAQ,CAAC,OAAO,GAAG;AAC5B,IAAI,eAAe,EAAE,EAAE;AACvB,IAAI,KAAK,EAAE,CAAC,MAAM,CAAC,QAAQ,CAAC,QAAQ,CAAC;AACrC,IAAI,MAAM,EAAE,EAAE;AACd,IAAI,KAAK,EAAE,SAAS;AACpB,GAAG;;AAEH,EAAE,KAAK,CAAC,OAAO,CAAC,CAAC,IAAI,EAAE,CAAC,KAAK;AAC7B,IAAI,MAAM,KAAK,GAAG,CAAC,WAAW,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC;AACvC,IAAI,MAAM,CAAC,YAAY,CAAC,IAAI,CAAC,KAAK,CAAC;AACnC,IAAI,MAAM,CAAC,QAAQ,CAAC,KAAK,CAAC,GAAG;AAC7B,MAAM,eAAe,EAAE,CAAC,EAAE,MAAM,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC;AAChD,MAAM,KAAK,EAAE,CAAC,IAAI,CAAC;AACnB,MAAM,MAAM,EAAE,EAAE;AAChB,MAAM,KAAK,EAAE,CAAC,WAAW,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC;AAClC,KAAK;AACL,GAAG,CAAC;AACJ,EAAE,0BAA0B,CAAC,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;AAC5D,EAAE,QAAQ,MAAM;AAChB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,0BAA0B,CAAC,YAAY,EAAE,aAAa,EAAE,OAAO,EAAE;AAChF,EAAE,IAAI,IAAI;AACV,EAAE,IAAI,YAAY,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAE,aAAa,CAAC,qBAAqB,CAAC,CAAC,CAAC,EAAE;AACxE,IAAI,IAAI,GAAG,IAAI,GAAG,CAAC,YAAY,EAAE,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,IAAI;AAC7D;AACA,IAAI,CAAC,YAAY,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC,EAAE,EAAE,CAAC,CAAC;AAClD,GAAG,MAAM;AACT,IAAI,IAAI,GAAG,CAAC,EAAE,aAAa,CAAC,eAAe,CAAC,CAAC,EAAE,YAAY,CAAC,CAAC,EAAE,aAAa,CAAC,qBAAqB,CAAC,CAAC;AACpG;AACA,EAAE,IAAI;AACN,IAAI,MAAM,IAAI,GAAG,MAAM,KAAK,CAAC,IAAI,CAAC;AAClC,IAAI,IAAI,CAAC,IAAI,CAAC,EAAE,EAAE;AAClB;AACA,MAAM,OAAO,CAAC,GAAG,CAAC,kCAAkC,EAAE,IAAI,CAAC;AAC3D,MAAM,OAAO,IAAI;AACjB;AACA,IAAI,MAAM,IAAI,GAAG,MAAM,IAAI,CAAC,IAAI,EAAE;AAClC,IAAI,MAAM,MAAM,GAAG,aAAa,CAAC;AACjC,QAAQ,aAAa,CAAC,MAAM,CAAC,IAAI,EAAE,OAAO;AAC1C,QAAQ,qBAAqB,CAAC,IAAI,EAAE,OAAO,CAAC;AAC5C,IAAI,IAAI,CAAC,MAAM,EAAE;AACjB,MAAM,OAAO,IAAI;AACjB;AACA,IAAI,MAAM,CAAC,EAAE,GAAG,YAAY;AAC5B,IAAI,MAAM,CAAC,QAAQ,GAAG,IAAI;AAC1B,IAAI,MAAM,CAAC,QAAQ,GAAG,CAAC,EAAE,aAAa,CAAC,eAAe,CAAC,CAAC,EAAE,YAAY,CAAC,CAAC;AACxE,IAAI,0BAA0B,CAAC,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;AAC9D,IAAI,OAAO,MAAM;AACjB,GAAG,CAAC,OAAO,CAAC,EAAE;AACd;AACA,IAAI,OAAO,CAAC,GAAG,CAAC,CAAC,mCAAmC,EAAE,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC;AAChE;AACA,EAAE,OAAO,IAAI;AACb;;AAEA,SAAS,iBAAiB,CAAC,MAAM,EAAE;AACnC,EAAE,MAAM,cAAc,GAAG;AACzB,IAAI,EAAE,EAAE,gCAAgC;AACxC,IAAI,kBAAkB,EAAE,IAAI;AAC5B,IAAI,aAAa,EAAE,CAAC;AACpB,MAAM,EAAE,EAAE,IAAI;AACd,MAAM,IAAI,EAAE,iBAAiB;AAC7B,MAAM,UAAU,EAAE;AAClB,QAAQ,EAAE,EAAE,MAAM,CAAC,EAAE;AACrB,QAAQ,iBAAiB,EAAE,MAAM;AACjC,QAAQ,iBAAiB,EAAE,QAAQ;AACnC,QAAQ,UAAU,EAAE,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,EAAE,KAAK,CAAC,MAAM;AAC3E,UAAU,EAAE,EAAE,GAAG;AACjB,UAAU,oBAAoB,EAAE,MAAM,CAAC,KAAK,CAAC,eAAe,CAAC,GAAG,GAAG;AACnE,SAAS,CAAC,CAAC;AACX,OAAO;AACP,KAAK,CAAC;AACN,GAAG;AACH,EAAE,OAAO,cAAc;AACvB;;AAEA,eAAe,SAAS,CAAC,UAAU,EAAE,iBAAiB,EAAE,aAAa,EAAE,OAAO,EAAE;AAChF,EAAE,MAAM,GAAG,GAAG,IAAI,eAAe,CAAC,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAC;AACzD,EAAE,MAAM,CAAC,gBAAgB,EAAE,aAAa,CAAC,GAAG,GAAG,CAAC,GAAG,CAAC,aAAa,CAAC,yBAAyB;AAC3F,MAAM,GAAG,CAAC,GAAG,CAAC,aAAa,CAAC,yBAAyB,CAAC,CAAC,KAAK,CAAC,GAAG;AAChE,MAAM,EAAE;;AAER,EAAE,MAAM,gBAAgB,GAAG;AAC3B,MAAM,MAAM,6BAA6B,CAAC,UAAU,EAAE,iBAAiB,EAAE,aAAa,EAAE,OAAO;AAC/F,MAAM,MAAM,0BAA0B,CAAC,UAAU,EAAE,aAAa,EAAE,OAAO,CAAC;;AAE1E;AACA,EAAE,OAAO,CAAC,KAAK,CAAC,gBAAgB,CAAC;AACjC,EAAE,IAAI,CAAC,gBAAgB,EAAE;AACzB,IAAI,OAAO,IAAI;AACf;;AAEA,EAAE,MAAM,cAAc,GAAG,GAAG,CAAC,GAAG,CAAC,aAAa,CAAC,uBAAuB;AACtE,MAAM,OAAO,CAAC,WAAW,CAAC,GAAG,CAAC,GAAG,CAAC,aAAa,CAAC,uBAAuB,CAAC;AACxE,MAAM,IAAI;;AAEV,EAAE,gBAAgB,CAAC,iBAAiB,GAAG,MAAM,oBAAoB;AACjE,IAAI,gBAAgB,CAAC,SAAS,CAAC,GAAG,CAAC,OAAO,CAAC,WAAW,CAAC;AACvD,IAAI,aAAa;AACjB,IAAI,OAAO;AACX,GAAG;AACH,EAAE,gBAAgB,CAAC,GAAG;AACtB;AACA,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,gBAAgB,CAAC,MAAM,CAAC,KAAK,QAAQ,IAAI,gBAAgB;AAClF;AACA,QAAQ,CAAC,gBAAgB,CAAC,iBAAiB,IAAI,gBAAgB,CAAC,iBAAiB,CAAC,MAAM;AACxF;AACA,QAAQ,CAAC,cAAc,IAAI,gBAAgB,CAAC,SAAS,CAAC,QAAQ,CAAC,cAAc,CAAC;AAC9E,GAAG;;AAEH,EAAE,MAAM,CAAC,GAAG,GAAG,MAAM,CAAC,GAAG,IAAI,EAAE;AAC/B,EAAE,MAAM,CAAC,GAAG,CAAC,UAAU,GAAG,gBAAgB;;AAE1C;AACA,EAAE,OAAO,CAAC,KAAK,CAAC,KAAK,EAAE,gBAAgB,CAAC,GAAG,EAAE,gBAAgB,CAAC,SAAS,CAAC;AACxE,EAAE,IAAI,aAAa,IAAI,gBAAgB,CAAC,YAAY,CAAC,QAAQ,CAAC,aAAa,CAAC,EAAE;AAC9E,IAAI,gBAAgB,CAAC,eAAe,GAAG,aAAa;AACpD,GAAG,MAAM;AACT;AACA,IAAI,MAAM,EAAE,GAAG,EAAE,GAAG,MAAK,kDAAC,OAAO,UAAU,CAAC;AAC5C,IAAI,MAAM,QAAQ,GAAG,GAAG,CAAC,sBAAsB,CAAC,iBAAiB,CAAC,gBAAgB,CAAC,EAAE,EAAE,CAAC;AACxF,IAAI,gBAAgB,CAAC,eAAe,GAAG,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,EAAE;AAC3D;AACA,EAAE,OAAO,gBAAgB;AACzB;;AAEO,eAAe,aAAa,CAAC,QAAQ,EAAE,OAAO,EAAE,OAAO,EAAE;AAChE,EAAE,IAAI,KAAK,EAAE,EAAE;AACf,IAAI,OAAO,KAAK;AAChB;;AAEA,EAAE,MAAM,aAAa,GAAG,EAAE,GAAG,eAAe,EAAE,IAAI,OAAO,IAAI,EAAE,CAAC,EAAE;AAClE,EAAE,MAAM,UAAU,GAAG,OAAO,CAAC,WAAW,CAAC,aAAa,CAAC,kBAAkB,CAAC;AAC1E,EAAE,IAAI,CAAC,UAAU,EAAE;AACnB,IAAI,OAAO,KAAK;AAChB;AACA,EAAE,MAAM,QAAQ,GAAG,OAAO,CAAC,WAAW,CAAC,oBAAoB;AAC3D,OAAO,OAAO,CAAC,WAAW,CAAC,CAAC,EAAE,aAAa,CAAC,kBAAkB,CAAC,SAAS,CAAC,CAAC;AAC1E,EAAE,IAAI,gBAAgB;AACtB,EAAE,IAAI;AACN,IAAI,gBAAgB,GAAG,MAAM,SAAS,CAAC,UAAU,EAAE,QAAQ,EAAE,aAAa,EAAE,OAAO,CAAC;AACpF,GAAG,CAAC,OAAO,GAAG,EAAE;AAChB;AACA,IAAI,OAAO,CAAC,KAAK,CAAC,4BAA4B,EAAE,GAAG,CAAC;AACpD;AACA,EAAE,IAAI,CAAC,gBAAgB,IAAI,CAAC,4BAA4B,CAAC,gBAAgB,CAAC,EAAE;AAC5E;AACA,IAAI,OAAO,CAAC,IAAI,CAAC,2EAA2E,CAAC;AAC7F,IAAI,OAAO,KAAK;AAChB;;AAEA,EAAE,MAAM,GAAG,GAAG,IAAI,eAAe,CAAC,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAC;AACzD,EAAE,MAAM,aAAa,GAAG,GAAG,CAAC,GAAG,CAAC,aAAa,CAAC,yBAAyB;AACvE,MAAM,GAAG,CAAC,GAAG,CAAC,aAAa,CAAC,yBAAyB,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC;AACnE,MAAM,IAAI;AACV,EAAE,IAAI,CAAC,gBAAgB,CAAC,GAAG,IAAI,CAAC,aAAa,EAAE;AAC/C;AACA,IAAI,OAAO,CAAC,IAAI,CAAC,gGAAgG,CAAC;AAClH,IAAI,OAAO,KAAK;AAChB;AACA;AACA,EAAE,OAAO,CAAC,KAAK,CAAC,CAAC,oBAAoB,EAAE,MAAM,CAAC,GAAG,CAAC,UAAU,CAAC,EAAE,CAAC,KAAK,EAAE,MAAM,CAAC,GAAG,CAAC,UAAU,CAAC,eAAe,CAAC,CAAC,CAAC;;AAE/G,EAAE,IAAI,gBAAgB,CAAC,eAAe,KAAK,gBAAgB,CAAC,YAAY,CAAC,CAAC,CAAC,EAAE;AAC7E,IAAI,OAAO,CAAC,SAAS,CAAC,YAAY,EAAE;AACpC,MAAM,MAAM,EAAE,gBAAgB,CAAC,EAAE;AACjC,MAAM,MAAM,EAAE,gBAAgB,CAAC,eAAe;AAC9C,KAAK,CAAC;AACN,IAAI,OAAO,KAAK;AAChB;;AAEA,EAAE,MAAM,EAAE,KAAK,EAAE,GAAG,gBAAgB,CAAC,QAAQ,CAAC,gBAAgB,CAAC,eAAe,CAAC;AAC/E,EAAE,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE;AACrB,IAAI,OAAO,KAAK;AAChB;;AAEA,EAAE,MAAM,WAAW,GAAG,MAAM,CAAC,QAAQ,CAAC,QAAQ;AAC9C,EAAE,MAAM,OAAO,GAAG,gBAAgB,CAAC,QAAQ,CAAC,gBAAgB,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC;AAC7E,EAAE,MAAM,KAAK,GAAG,OAAO,CAAC,KAAK,CAAC,OAAO,CAAC,WAAW,CAAC;AAClD,EAAE,IAAI,KAAK,GAAG,CAAC,IAAI,KAAK,CAAC,KAAK,CAAC,KAAK,WAAW,EAAE;AACjD,IAAI,OAAO,KAAK;AAChB;;AAEA;AACA,EAAE,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC,WAAW,EAAE,OAAO,CAAC,WAAW,CAAC,gBAAgB,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;AACvF,EAAE,MAAM,MAAM,GAAG,MAAM,YAAY,CAAC,KAAK,CAAC,KAAK,CAAC,EAAE,QAAQ,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC;AACjF,EAAE,gBAAgB,CAAC,gBAAgB,GAAG,MAAM,IAAI,WAAW;AAC3D,EAAE,IAAI,CAAC,MAAM,EAAE;AACf;AACA,IAAI,OAAO,CAAC,KAAK,CAAC,CAAC,wBAAwB,EAAE,MAAM,CAAC,GAAG,CAAC,UAAU,CAAC,eAAe,CAAC,kBAAkB,EAAE,gBAAgB,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC3I;AACA,EAAE,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC,QAAQ,EAAE,OAAO,CAAC,WAAW,CAAC,MAAM,GAAG,gBAAgB,CAAC,eAAe,GAAG,gBAAgB,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC7I,EAAE,OAAO,CAAC,SAAS,CAAC,YAAY,EAAE;AAClC,IAAI,MAAM,EAAE,gBAAgB,CAAC,EAAE;AAC/B,IAAI,MAAM,EAAE,MAAM,GAAG,gBAAgB,CAAC,eAAe,GAAG,gBAAgB,CAAC,YAAY,CAAC,CAAC,CAAC;AACxF,GAAG,CAAC;AACJ,EAAE,OAAO,MAAM;AACf;;AAEO,eAAe,WAAW,CAAC,QAAQ,EAAE,OAAO,EAAE,OAAO,EAAE;AAC9D,EAAE,IAAI,KAAK,EAAE,EAAE;AACf,IAAI,OAAO,KAAK;AAChB;;AAEA,EAAE,MAAM,aAAa,GAAG,EAAE,GAAG,eAAe,EAAE,GAAG,OAAO,EAAE;AAC1D,EAAE,MAAM,GAAG,GAAG,IAAI,eAAe,CAAC,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAC;AACzD,EAAE,MAAM,QAAQ,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,aAAa,CAAC,uBAAuB;AACjE,MAAM,OAAO,CAAC,WAAW,CAAC,GAAG,CAAC,GAAG,CAAC,aAAa,CAAC,uBAAuB,CAAC;AACxE,MAAM,IAAI;AACV,QAAQ,GAAG,CAAC,GAAG,CAAC,cAAc,CAAC,GAAG,OAAO,CAAC,WAAW,CAAC,GAAG,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC,GAAG,IAAI,CAAC;AACtF,EAAE,IAAI,CAAC,QAAQ,EAAE;AACjB,IAAI,OAAO,KAAK;AAChB;;AAEA,EAAE,IAAI,SAAS,GAAG,OAAO,CAAC,WAAW,CAAC,CAAC,EAAE,aAAa,CAAC,sBAAsB,CAAC,SAAS,CAAC,CAAC;AACzF,EAAE,IAAI,SAAS,EAAE;AACjB,IAAI,SAAS,GAAG,SAAS,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,OAAO,CAAC,WAAW,CAAC;AAC7D,IAAI,MAAM,iBAAiB,GAAG,MAAM,oBAAoB,CAAC,SAAS,EAAE,aAAa,EAAE,OAAO,CAAC;AAC3F,IAAI,IAAI,CAAC,CAAC,iBAAiB,IAAI,CAAC,iBAAiB,CAAC,MAAM,EAAE;AAC1D,MAAM,OAAO,KAAK;AAClB;AACA;;AAEA,EAAE,MAAM,gBAAgB,GAAG,OAAO,CAAC,cAAc,CAAC,aAAa,CAAC,sBAAsB,CAAC;AACvF,EAAE,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC,QAAQ,CAAC,QAAQ,CAAC,EAAE;AACzD,IAAI,OAAO,KAAK;AAChB;;AAEA,EAAE,MAAM,SAAS,GAAG,gBAAgB,CAAC,QAAQ,CAAC;AAC9C,EAAE,IAAI,CAAC,SAAS,EAAE;AAClB,IAAI,OAAO,KAAK;AAChB;;AAEA,EAAE,MAAM,CAAC,GAAG,CAAC,QAAQ,GAAG,EAAE,gBAAgB,EAAE,QAAQ,EAAE;;AAEtD,EAAE,IAAI;AACN,IAAI,MAAM,GAAG,GAAG,IAAI,GAAG,CAAC,SAAS,CAAC;AAClC,IAAI,MAAM,MAAM,GAAG,YAAY,CAAC,GAAG,CAAC,QAAQ,EAAE,QAAQ,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC;AAC7E,IAAI,MAAM,CAAC,GAAG,CAAC,QAAQ,CAAC,gBAAgB,GAAG,MAAM,IAAI,MAAM,CAAC,QAAQ,CAAC,QAAQ;AAC7E,IAAI,IAAI,CAAC,MAAM,EAAE;AACjB;AACA,MAAM,OAAO,CAAC,KAAK,CAAC,CAAC,yBAAyB,EAAE,QAAQ,CAAC,kCAAkC,CAAC,CAAC;AAC7F;AACA,IAAI,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC,SAAS,EAAE,QAAQ,CAAC,CAAC,CAAC;AACvD,IAAI,OAAO,CAAC,SAAS,CAAC,UAAU,EAAE;AAClC,MAAM,MAAM,EAAE,MAAM,CAAC,QAAQ,CAAC,IAAI;AAClC,MAAM,MAAM,EAAE,MAAM,GAAG,QAAQ,GAAG,SAAS;AAC3C,KAAK,CAAC;AACN,IAAI,OAAO,MAAM;AACjB,GAAG,CAAC,OAAO,GAAG,EAAE;AAChB;AACA,IAAI,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC;AACtB,IAAI,OAAO,KAAK;AAChB;AACA;;AAEO,eAAe,aAAa,CAAC,QAAQ,EAAE,OAAO,EAAE,OAAO,EAAE;AAChE,EAAE,IAAI,KAAK,EAAE,EAAE;AACf,IAAI,OAAO,KAAK;AAChB;;AAEA,EAAE,MAAM,aAAa,GAAG,EAAE,GAAG,eAAe,EAAE,IAAI,OAAO,IAAI,EAAE,CAAC,EAAE;AAClE,EAAE,MAAM,mBAAmB,GAAG,OAAO,CAAC,cAAc,CAAC,aAAa,CAAC,sBAAsB,CAAC;AAC1F,EAAE,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,mBAAmB,CAAC,CAAC,MAAM,EAAE;AAChD,IAAI,OAAO,KAAK;AAChB;;AAEA,EAAE,MAAM,SAAS,GAAG,MAAM,oBAAoB;AAC9C,IAAI,MAAM,CAAC,IAAI,CAAC,mBAAmB,CAAC,CAAC,GAAG,CAAC,OAAO,CAAC,WAAW,CAAC;AAC7D,IAAI,aAAa;AACjB,IAAI,OAAO;AACX,GAAG;AACH,EAAE,IAAI,CAAC,SAAS,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE;AACvC,IAAI,OAAO,KAAK;AAChB;;AAEA,EAAE,MAAM,GAAG,GAAG,IAAI,eAAe,CAAC,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAC;AACzD,EAAE,MAAM,cAAc,GAAG,GAAG,CAAC,GAAG,CAAC,aAAa,CAAC,uBAAuB;AACtE,MAAM,OAAO,CAAC,WAAW,CAAC,GAAG,CAAC,GAAG,CAAC,aAAa,CAAC,uBAAuB,CAAC;AACxE,MAAM,IAAI;;AAEV,EAAE,MAAM,gBAAgB,GAAG,cAAc,IAAI,SAAS,CAAC,CAAC,CAAC;AACzD,EAAE,MAAM,SAAS,GAAG,mBAAmB,CAAC,gBAAgB,CAAC;AACzD,EAAE,IAAI,CAAC,SAAS,EAAE;AAClB,IAAI,OAAO,KAAK;AAChB;;AAEA,EAAE,MAAM,CAAC,GAAG,CAAC,QAAQ,GAAG,EAAE,gBAAgB,EAAE;;AAE5C,EAAE,IAAI;AACN,IAAI,MAAM,GAAG,GAAG,IAAI,GAAG,CAAC,SAAS,CAAC;AAClC,IAAI,MAAM,MAAM,GAAG,YAAY,CAAC,GAAG,CAAC,QAAQ,EAAE,QAAQ,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC;AAC7E,IAAI,MAAM,CAAC,GAAG,CAAC,QAAQ,CAAC,gBAAgB,GAAG,MAAM,IAAI,MAAM,CAAC,QAAQ,CAAC,QAAQ;AAC7E,IAAI,IAAI,CAAC,MAAM,EAAE;AACjB;AACA,MAAM,OAAO,CAAC,KAAK,CAAC,CAAC,yBAAyB,EAAE,gBAAgB,CAAC,kCAAkC,CAAC,CAAC;AACrG;AACA,IAAI,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC,QAAQ,KAAK,CAAC,SAAS,EAAE,QAAQ,CAAC,CAAC,CAAC,CAAC;AACpF,IAAI,OAAO,CAAC,SAAS,CAAC,WAAW,EAAE;AACnC,MAAM,MAAM,EAAE,MAAM,CAAC,QAAQ,CAAC,IAAI;AAClC,MAAM,MAAM,EAAE,MAAM,GAAG,cAAc,IAAI,SAAS,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,SAAS;AACxE,KAAK,CAAC;AACN,IAAI,OAAO,MAAM;AACjB,GAAG,CAAC,OAAO,GAAG,EAAE;AAChB;AACA,IAAI,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC;AACtB,IAAI,OAAO,KAAK;AAChB;AACA;;AAEA,MAAM,CAAC,GAAG,CAAC,gBAAgB,EAAE,IAAI,CAAC,CAAC,MAAM,KAAK;AAC9C,EAAE,MAAM,EAAE,UAAU,EAAE,GAAG,MAAM,CAAC,GAAG;;AAEnC;AACA,EAAE,IAAI,CAAC,UAAU,IAAI,CAAC,UAAU,CAAC,GAAG,EAAE;AACtC,IAAI,OAAO,MAAM;AACjB;;AAEA;AACA,EAAE,IAAI,UAAU,CAAC,eAAe,KAAK,UAAU,CAAC,YAAY,CAAC,CAAC;AAC9D,OAAO,CAAC,UAAU,CAAC,QAAQ,CAAC,UAAU,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,CAAC;AACxD,OAAO,CAAC,UAAU,CAAC,QAAQ,CAAC,UAAU,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAC,SAAS,CAAC,EAAE;AAC3F,IAAI,OAAO,MAAM;AACjB;;AAEA;AACA,EAAE,MAAM,OAAO,GAAG,UAAU,CAAC,QAAQ,CAAC,UAAU,CAAC,eAAe,CAAC;AACjE,EAAE,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,MAAM,EAAE;AAC9B,IAAI,OAAO,MAAM;AACjB;;AAEA,EAAE,IAAI,KAAK,GAAG,UAAU,CAAC,QAAQ,CAAC,UAAU,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,EAAE,CAAC;AAChF,EAAE,IAAI,KAAK,GAAG,CAAC,EAAE;AACjB,IAAI,KAAK,GAAG,UAAU,CAAC,QAAQ,CAAC,UAAU,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC,SAAS,CAAC;AAC5F;AACA,EAAE,IAAI,KAAK,GAAG,CAAC,EAAE;AACjB,IAAI,KAAK,GAAG,UAAU,CAAC,QAAQ,CAAC,UAAU,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,QAAQ,EAAE,MAAM,CAAC,SAAS,CAAC,CAAC,CAAC;AACzG;AACA,EAAE,IAAI,KAAK,GAAG,CAAC,EAAE;AACjB,IAAI,OAAO,MAAM;AACjB;;AAEA,EAAE,IAAI,MAAM,GAAG,EAAE;AACjB,EAAE,IAAI,IAAI;AACV,EAAE,IAAI,cAAc,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,EAAE;AAClD,IAAI,MAAM,GAAG,GAAG,IAAI,GAAG,CAAC,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;AAC9C;AACA,IAAI,IAAI,GAAG,CAAC,MAAM,KAAK,MAAM,CAAC,QAAQ,CAAC,MAAM,EAAE;AAC/C,MAAM,MAAM,GAAG,GAAG,CAAC,MAAM;AACzB;AACA;AACA,IAAI,IAAI,GAAG,CAAC,QAAQ,KAAK,GAAG,EAAE;AAC9B,MAAM,IAAI,GAAG,GAAG,CAAC,QAAQ;AACzB,KAAK,MAAM;AACX,MAAM,IAAI,GAAG,CAAC,QAAQ,EAAE,MAAM,CAAC,SAAS,CAAC,CAAC;AAC1C;AACA,GAAG,MAAM;AACT,IAAI,IAAI,GAAG,CAAC,QAAQ,EAAE,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC;AAC7C;AACA,EAAE,IAAI,CAAC,MAAM,IAAI,CAAC,IAAI,EAAE;AACxB,IAAI,OAAO,MAAM;AACjB;;AAEA,EAAE,MAAM,EAAE,YAAY,EAAE,GAAG,MAAM,CAAC,GAAG;AACrC,EAAE,OAAO;AACT,IAAI,GAAG,MAAM;AACb,IAAI,OAAO,EAAE,CAAC,EAAE,MAAM,CAAC,EAAE,YAAY,CAAC,EAAE,IAAI,CAAC,CAAC,EAAE,MAAM,CAAC,SAAS,CAAC,IAAI,CAAC;AACtE,IAAI,MAAM,EAAE,CAAC,EAAE,MAAM,CAAC,EAAE,YAAY,CAAC,EAAE,IAAI,CAAC,CAAC,EAAE,MAAM,CAAC,SAAS,CAAC,GAAG,CAAC;AACpE,GAAG;AACH,CAAC,CAAC;;AAEF,IAAI,UAAU,GAAG,KAAK;AACtB,SAAS,uBAAuB,CAAC,UAAU,EAAE,OAAO,EAAE,OAAO,EAAE;AAC/D,EAAE,MAAM,aAAa,GAAG,EAAE,GAAG,eAAe,EAAE,IAAI,OAAO,IAAI,EAAE,CAAC,EAAE;AAClE,EAAE,OAAO,CAAC,IAAI,KAAK;AACnB,IAAI,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,GAAG,CAAC,UAAU,IAAI,CAAC,UAAU,EAAE;AACnD,MAAM,UAAU,GAAG,IAAI;AACvB;AACA,MAAM,MAAM,CAAC,GAAG,CAAC,GAAG,CAAC,MAAM,GAAG,IAAI,CAAC,GAAG;AACtC,QAAQ,MAAM,CAAC,GAAG,CAAC,GAAG,CAAC,MAAM;AAC7B;AACA;AACA,QAAQ,IAAI,CAAC,GAAG,CAAC,aAAa,CAAC,eAAe,EAAE,iBAAiB,CAAC;AAClE,OAAO;AACP,MAAM,MAAM,CAAC,GAAG,CAAC,GAAG,CAAC,UAAU,IAAI,MAAM,CAAC,GAAG,CAAC,GAAG,CAAC,MAAM,GAAG,MAAM,CAAC,GAAG,CAAC,GAAG,CAAC,MAAM,GAAG,CAAC,CAAC;AACrF,MAAM,IAAI,MAAM,CAAC,GAAG,CAAC,GAAG,CAAC,UAAU,EAAE;AACrC,QAAQ,OAAO,CAAC,SAAS,CAAC,UAAU,EAAE,IAAI,CAAC;AAC3C;AACA;AACA,IAAI,OAAO,IAAI;AACf,GAAG;AACH;;AAEO,eAAe,SAAS,CAAC,QAAQ,EAAE,OAAO,EAAE,OAAO,EAAE;AAC5D,EAAE,OAAO,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE,CAAC,WAAW,EAAE,uBAAuB,CAAC,WAAW,EAAE,OAAO,EAAE,OAAO,CAAC,CAAC;AAClG,EAAE,OAAO,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE,CAAC,UAAU,EAAE,uBAAuB,CAAC,UAAU,EAAE,OAAO,EAAE,OAAO,CAAC,CAAC;AAChG,EAAE,OAAO,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE,CAAC,YAAY,EAAE,uBAAuB,CAAC,YAAY,EAAE,OAAO,EAAE,OAAO,CAAC,CAAC;AACpG,EAAE,IAAI,GAAG,GAAG,MAAM,WAAW,CAAC,QAAQ,EAAE,OAAO,EAAE,OAAO,CAAC;AACzD,EAAE,IAAI,CAAC,GAAG,EAAE;AACZ,IAAI,GAAG,GAAG,MAAM,aAAa,CAAC,QAAQ,EAAE,OAAO,EAAE,OAAO,CAAC;AACzD;AACA,EAAE,IAAI,CAAC,GAAG,EAAE;AACZ,IAAI,GAAG,GAAG,MAAM,aAAa,CAAC,QAAQ,EAAE,OAAO,EAAE,OAAO,CAAC;AACzD;AACA;;AAEO,eAAe,QAAQ,CAAC,QAAQ,EAAE,OAAO,EAAE,OAAO,EAAE;AAC3D,EAAE,MAAM,aAAa,GAAG;AACxB,IAAI,GAAG,eAAe;AACtB,IAAI,IAAI,OAAO,IAAI,EAAE,CAAC;AACtB,GAAG;AACH,EAAE,IAAI,MAAM,CAAC,QAAQ,CAAC,QAAQ,CAAC,QAAQ,CAAC,UAAU;AAClD,OAAO,MAAM,CAAC,QAAQ,CAAC,QAAQ,MAAM,WAAW;AAChD,QAAQ,OAAO,OAAO,CAAC,MAAM,KAAK,UAAU,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE;AACjE,QAAQ,OAAO,CAAC;AAChB,WAAW,OAAO,CAAC,QAAQ,KAAK,MAAM,CAAC,QAAQ,CAAC;AAChD,WAAW,OAAO,CAAC,QAAQ,KAAK,MAAM,CAAC,QAAQ,CAAC;AAChD,WAAW,OAAO,CAAC,QAAQ,KAAK,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAC,EAAE;AACzD;AACA,IAAI,MAAM,OAAO,GAAG,0BAAM,OAAO,cAAc,CAAC;AAChD,IAAI,OAAO,CAAC,OAAO,CAAC,QAAQ,EAAE,aAAa,EAAE,EAAE,GAAG,OAAO,EAAE,oBAAoB,EAAE,CAAC;AAClF;AACA","names":[],"ignoreList":[],"sources":["../../../../src/plugins/experimentation/src/index.js"],"sourcesContent":["/*\n * Copyright 2022 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\nconst MAX_SAMPLING_RATE = 10; // At a maximum we sample 1 in 10 requests\n\nexport const DEFAULT_OPTIONS = {\n  // Generic properties\n  rumSamplingRate: MAX_SAMPLING_RATE, // 1 in 10 requests\n\n  // Audiences related properties\n  audiences: {},\n  audiencesMetaTagPrefix: 'audience',\n  audiencesQueryParameter: 'audience',\n\n  // Campaigns related properties\n  campaignsMetaTagPrefix: 'campaign',\n  campaignsQueryParameter: 'campaign',\n\n  // Experimentation related properties\n  experimentsRoot: '/experiments',\n  experimentsConfigFile: 'manifest.json',\n  experimentsMetaTag: 'experiment',\n  experimentsQueryParameter: 'experiment',\n};\n\n/**\n * Checks if the current engine is detected as being a bot.\n * @returns `true` if the current engine is detected as being, `false` otherwise\n */\nfunction isBot() {\n  return navigator.userAgent.match(/bot|crawl|spider/i);\n}\n\n/**\n * Checks if any of the configured audiences on the page can be resolved.\n * @param {string[]} applicableAudiences a list of configured audiences for the page\n * @param {object} options the plugin options\n * @returns Returns the names of the resolved audiences, or `null` if no audience is configured\n */\nexport async function getResolvedAudiences(applicableAudiences, options, context) {\n  if (!applicableAudiences.length || !Object.keys(options.audiences).length) {\n    return null;\n  }\n  // If we have a forced audience set in the query parameters (typically for simulation purposes)\n  // we check if it is applicable\n  const usp = new URLSearchParams(window.location.search);\n  const forcedAudience = usp.has(options.audiencesQueryParameter)\n    ? context.toClassName(usp.get(options.audiencesQueryParameter))\n    : null;\n  if (forcedAudience) {\n    return applicableAudiences.includes(forcedAudience) ? [forcedAudience] : [];\n  }\n\n  // Otherwise, return the list of audiences that are resolved on the page\n  const results = await Promise.all(\n    applicableAudiences\n      .map((key) => {\n        if (options.audiences[key] && typeof options.audiences[key] === 'function') {\n          return options.audiences[key]();\n        }\n        return false;\n      }),\n  );\n  return applicableAudiences.filter((_, i) => results[i]);\n}\n\n/**\n * Replaces element with content from path\n * @param {string} path\n * @param {HTMLElement} element\n * @return Returns the path that was loaded or null if the loading failed\n */\nasync function replaceInner(path, element) {\n  const plainPath = path.endsWith('/')\n    ? `${path}index.plain.html`\n    : `${path}.plain.html`;\n  try {\n    const resp = await fetch(plainPath);\n    if (!resp.ok) {\n      // eslint-disable-next-line no-console\n      console.log('error loading content:', resp);\n      return false;\n    }\n    const html = await resp.text();\n    // eslint-disable-next-line no-param-reassign\n    element.innerHTML = html;\n    return plainPath;\n  } catch (e) {\n    // eslint-disable-next-line no-console\n    console.log(`error loading content: ${plainPath}`, e);\n  }\n  return null;\n}\n\n/**\n * Parses the experimentation configuration sheet and creates an internal model.\n *\n * Output model is expected to have the following structure:\n *      {\n *        id: <string>,\n *        label: <string>,\n *        blocks: <string>,\n *        audiences: [<string>],\n *        status: Active | Inactive,\n *        variantNames: [<string>],\n *        variants: {\n *          [variantName]: {\n *            label: <string>\n *            percentageSplit: <number 0-1>,\n *            pages: <string>,\n *            blocks: <string>,\n *          }\n *        }\n *      };\n */\nfunction parseExperimentConfig(json, context) {\n  const config = {};\n  try {\n    json.settings.data.forEach((line) => {\n      const key = context.toCamelCase(line.Name);\n      if (key === 'audience' || key === 'audiences') {\n        config.audiences = line.Value ? line.Value.split(',').map((str) => str.trim()) : [];\n      } else if (key === 'experimentName') {\n        config.label = line.Value;\n      } else {\n        config[key] = line.Value;\n      }\n    });\n    const variants = {};\n    let variantNames = Object.keys(json.experiences.data[0]);\n    variantNames.shift();\n    variantNames = variantNames.map((vn) => context.toCamelCase(vn));\n    variantNames.forEach((variantName) => {\n      variants[variantName] = {};\n    });\n    let lastKey = 'default';\n    json.experiences.data.forEach((line) => {\n      let key = context.toCamelCase(line.Name);\n      if (!key) key = lastKey;\n      lastKey = key;\n      const vns = Object.keys(line);\n      vns.shift();\n      vns.forEach((vn) => {\n        const camelVN = context.toCamelCase(vn);\n        if (key === 'pages' || key === 'blocks') {\n          variants[camelVN][key] = variants[camelVN][key] || [];\n          if (key === 'pages') variants[camelVN][key].push(new URL(line[vn]).pathname);\n          else variants[camelVN][key].push(line[vn]);\n        } else {\n          variants[camelVN][key] = line[vn];\n        }\n      });\n    });\n    config.variants = variants;\n    config.variantNames = variantNames;\n    return config;\n  } catch (e) {\n    // eslint-disable-next-line no-console\n    console.log('error parsing experiment config:', e, json);\n  }\n  return null;\n}\n\n/**\n * Checks if the given config is a valid experimentation configuration.\n * @param {object} config the config to check\n * @returns `true` if it is valid, `false` otherwise\n */\nexport function isValidExperimentationConfig(config) {\n  if (!config.variantNames\n    || !config.variantNames.length\n    || !config.variants\n    || !Object.values(config.variants).length\n    || !Object.values(config.variants).every((v) => (\n      typeof v === 'object'\n      && !!v.blocks\n      && !!v.pages\n      && (v.percentageSplit === '' || !!v.percentageSplit)\n    ))) {\n    return false;\n  }\n  return true;\n}\n\n/**\n * Calculates percentage split for variants where the percentage split is not\n * explicitly configured.\n * Substracts from 100 the explicitly configured percentage splits,\n * and divides the remaining percentage, among the variants without explicit\n * percentage split configured\n * @param {Array} variant objects\n */\nfunction inferEmptyPercentageSplits(variants) {\n  const variantsWithoutPercentage = [];\n\n  const remainingPercentage = variants.reduce((result, variant) => {\n    if (!variant.percentageSplit) {\n      variantsWithoutPercentage.push(variant);\n    }\n    const newResult = result - parseFloat(variant.percentageSplit || 0);\n    return newResult;\n  }, 1);\n  if (variantsWithoutPercentage.length) {\n    const missingPercentage = remainingPercentage / variantsWithoutPercentage.length;\n    variantsWithoutPercentage.forEach((v) => {\n      v.percentageSplit = missingPercentage.toFixed(2);\n    });\n  }\n}\n\n/**\n * Gets experiment config from the metadata.\n *\n * @param {string} experimentId The experiment identifier\n * @param {string} instantExperiment The list of varaints\n * @returns {object} the experiment manifest\n */\nfunction getConfigForInstantExperiment(\n  experimentId,\n  instantExperiment,\n  pluginOptions,\n  context,\n) {\n  const audience = context.getMetadata(`${pluginOptions.experimentsMetaTag}-audience`);\n  const config = {\n    label: `Instant Experiment: ${experimentId}`,\n    audiences: audience ? audience.split(',').map(context.toClassName) : [],\n    status: 'Active',\n    id: experimentId,\n    variants: {},\n    variantNames: [],\n  };\n\n  const pages = instantExperiment.split(',').map((p) => new URL(p.trim()).pathname);\n\n  const splitString = context.getMetadata(`${pluginOptions.experimentsMetaTag}-split`);\n  const splits = splitString\n    // custom split\n    ? splitString.split(',').map((i) => parseInt(i, 10) / 100)\n    // even split fallback\n    : [...new Array(pages.length)].map(() => 1 / (pages.length + 1));\n\n  config.variantNames.push('control');\n  config.variants.control = {\n    percentageSplit: '',\n    pages: [window.location.pathname],\n    blocks: [],\n    label: 'Control',\n  };\n\n  pages.forEach((page, i) => {\n    const vname = `challenger-${i + 1}`;\n    config.variantNames.push(vname);\n    config.variants[vname] = {\n      percentageSplit: `${splits[i].toFixed(2)}`,\n      pages: [page],\n      blocks: [],\n      label: `Challenger ${i + 1}`,\n    };\n  });\n  inferEmptyPercentageSplits(Object.values(config.variants));\n  return (config);\n}\n\n/**\n * Gets experiment config from the manifest and transforms it to more easily\n * consumable structure.\n *\n * the manifest consists of two sheets \"settings\" and \"experiences\", by default\n *\n * \"settings\" is applicable to the entire test and contains information\n * like \"Audience\", \"Status\" or \"Blocks\".\n *\n * \"experience\" hosts the experiences in rows, consisting of:\n * a \"Percentage Split\", \"Label\" and a set of \"Links\".\n *\n *\n * @param {string} experimentId The experiment identifier\n * @param {object} pluginOptions The plugin options\n * @returns {object} containing the experiment manifest\n */\nasync function getConfigForFullExperiment(experimentId, pluginOptions, context) {\n  let path;\n  if (experimentId.includes(`/${pluginOptions.experimentsConfigFile}`)) {\n    path = new URL(experimentId, window.location.origin).href;\n    // eslint-disable-next-line no-param-reassign\n    [experimentId] = path.split('/').splice(-2, 1);\n  } else {\n    path = `${pluginOptions.experimentsRoot}/${experimentId}/${pluginOptions.experimentsConfigFile}`;\n  }\n  try {\n    const resp = await fetch(path);\n    if (!resp.ok) {\n      // eslint-disable-next-line no-console\n      console.log('error loading experiment config:', resp);\n      return null;\n    }\n    const json = await resp.json();\n    const config = pluginOptions.parser\n      ? pluginOptions.parser(json, context)\n      : parseExperimentConfig(json, context);\n    if (!config) {\n      return null;\n    }\n    config.id = experimentId;\n    config.manifest = path;\n    config.basePath = `${pluginOptions.experimentsRoot}/${experimentId}`;\n    inferEmptyPercentageSplits(Object.values(config.variants));\n    return config;\n  } catch (e) {\n    // eslint-disable-next-line no-console\n    console.log(`error loading experiment manifest: ${path}`, e);\n  }\n  return null;\n}\n\nfunction getDecisionPolicy(config) {\n  const decisionPolicy = {\n    id: 'content-experimentation-policy',\n    rootDecisionNodeId: 'n1',\n    decisionNodes: [{\n      id: 'n1',\n      type: 'EXPERIMENTATION',\n      experiment: {\n        id: config.id,\n        identityNamespace: 'ECID',\n        randomizationUnit: 'DEVICE',\n        treatments: Object.entries(config.variants).map(([key, props]) => ({\n          id: key,\n          allocationPercentage: Number(props.percentageSplit) * 100,\n        })),\n      },\n    }],\n  };\n  return decisionPolicy;\n}\n\nasync function getConfig(experiment, instantExperiment, pluginOptions, context) {\n  const usp = new URLSearchParams(window.location.search);\n  const [forcedExperiment, forcedVariant] = usp.has(pluginOptions.experimentsQueryParameter)\n    ? usp.get(pluginOptions.experimentsQueryParameter).split('/')\n    : [];\n\n  const experimentConfig = instantExperiment\n    ? await getConfigForInstantExperiment(experiment, instantExperiment, pluginOptions, context)\n    : await getConfigForFullExperiment(experiment, pluginOptions, context);\n\n  // eslint-disable-next-line no-console\n  console.debug(experimentConfig);\n  if (!experimentConfig) {\n    return null;\n  }\n\n  const forcedAudience = usp.has(pluginOptions.audiencesQueryParameter)\n    ? context.toClassName(usp.get(pluginOptions.audiencesQueryParameter))\n    : null;\n\n  experimentConfig.resolvedAudiences = await getResolvedAudiences(\n    experimentConfig.audiences.map(context.toClassName),\n    pluginOptions,\n    context,\n  );\n  experimentConfig.run = (\n    // experiment is active or forced\n    (context.toCamelCase(experimentConfig.status) === 'active' || forcedExperiment)\n    // experiment has resolved audiences if configured\n    && (!experimentConfig.resolvedAudiences || experimentConfig.resolvedAudiences.length)\n    // forced audience resolves if defined\n    && (!forcedAudience || experimentConfig.audiences.includes(forcedAudience))\n  );\n\n  window.hlx = window.hlx || {};\n  window.hlx.experiment = experimentConfig;\n\n  // eslint-disable-next-line no-console\n  console.debug('run', experimentConfig.run, experimentConfig.audiences);\n  if (forcedVariant && experimentConfig.variantNames.includes(forcedVariant)) {\n    experimentConfig.selectedVariant = forcedVariant;\n  } else {\n    // eslint-disable-next-line import/extensions\n    const { ued } = await import('./ued.js');\n    const decision = ued.evaluateDecisionPolicy(getDecisionPolicy(experimentConfig), {});\n    experimentConfig.selectedVariant = decision.items[0].id;\n  }\n  return experimentConfig;\n}\n\nexport async function runExperiment(document, options, context) {\n  if (isBot()) {\n    return false;\n  }\n\n  const pluginOptions = { ...DEFAULT_OPTIONS, ...(options || {}) };\n  const experiment = context.getMetadata(pluginOptions.experimentsMetaTag);\n  if (!experiment) {\n    return false;\n  }\n  const variants = context.getMetadata('instant-experiment')\n    || context.getMetadata(`${pluginOptions.experimentsMetaTag}-variants`);\n  let experimentConfig;\n  try {\n    experimentConfig = await getConfig(experiment, variants, pluginOptions, context);\n  } catch (err) {\n    // eslint-disable-next-line no-console\n    console.error('Invalid experiment config.', err);\n  }\n  if (!experimentConfig || !isValidExperimentationConfig(experimentConfig)) {\n    // eslint-disable-next-line no-console\n    console.warn('Invalid experiment config. Please review your metadata, sheet and parser.');\n    return false;\n  }\n\n  const usp = new URLSearchParams(window.location.search);\n  const forcedVariant = usp.has(pluginOptions.experimentsQueryParameter)\n    ? usp.get(pluginOptions.experimentsQueryParameter).split('/')[1]\n    : null;\n  if (!experimentConfig.run && !forcedVariant) {\n    // eslint-disable-next-line no-console\n    console.warn('Experiment will not run. It is either not active or its configured audiences are not resolved.');\n    return false;\n  }\n  // eslint-disable-next-line no-console\n  console.debug(`running experiment (${window.hlx.experiment.id}) -> ${window.hlx.experiment.selectedVariant}`);\n\n  if (experimentConfig.selectedVariant === experimentConfig.variantNames[0]) {\n    context.sampleRUM('experiment', {\n      source: experimentConfig.id,\n      target: experimentConfig.selectedVariant,\n    });\n    return false;\n  }\n\n  const { pages } = experimentConfig.variants[experimentConfig.selectedVariant];\n  if (!pages.length) {\n    return false;\n  }\n\n  const currentPath = window.location.pathname;\n  const control = experimentConfig.variants[experimentConfig.variantNames[0]];\n  const index = control.pages.indexOf(currentPath);\n  if (index < 0 || pages[index] === currentPath) {\n    return false;\n  }\n\n  // Fullpage content experiment\n  document.body.classList.add(`experiment-${context.toClassName(experimentConfig.id)}`);\n  const result = await replaceInner(pages[index], document.querySelector('main'));\n  experimentConfig.servedExperience = result || currentPath;\n  if (!result) {\n    // eslint-disable-next-line no-console\n    console.debug(`failed to serve variant ${window.hlx.experiment.selectedVariant}. Falling back to ${experimentConfig.variantNames[0]}.`);\n  }\n  document.body.classList.add(`variant-${context.toClassName(result ? experimentConfig.selectedVariant : experimentConfig.variantNames[0])}`);\n  context.sampleRUM('experiment', {\n    source: experimentConfig.id,\n    target: result ? experimentConfig.selectedVariant : experimentConfig.variantNames[0],\n  });\n  return result;\n}\n\nexport async function runCampaign(document, options, context) {\n  if (isBot()) {\n    return false;\n  }\n\n  const pluginOptions = { ...DEFAULT_OPTIONS, ...options };\n  const usp = new URLSearchParams(window.location.search);\n  const campaign = (usp.has(pluginOptions.campaignsQueryParameter)\n    ? context.toClassName(usp.get(pluginOptions.campaignsQueryParameter))\n    : null)\n    || (usp.has('utm_campaign') ? context.toClassName(usp.get('utm_campaign')) : null);\n  if (!campaign) {\n    return false;\n  }\n\n  let audiences = context.getMetadata(`${pluginOptions.campaignsMetaTagPrefix}-audience`);\n  if (audiences) {\n    audiences = audiences.split(',').map(context.toClassName);\n    const resolvedAudiences = await getResolvedAudiences(audiences, pluginOptions, context);\n    if (!!resolvedAudiences && !resolvedAudiences.length) {\n      return false;\n    }\n  }\n\n  const allowedCampaigns = context.getAllMetadata(pluginOptions.campaignsMetaTagPrefix);\n  if (!Object.keys(allowedCampaigns).includes(campaign)) {\n    return false;\n  }\n\n  const urlString = allowedCampaigns[campaign];\n  if (!urlString) {\n    return false;\n  }\n\n  window.hlx.campaign = { selectedCampaign: campaign };\n\n  try {\n    const url = new URL(urlString);\n    const result = replaceInner(url.pathname, document.querySelector('main'));\n    window.hlx.campaign.servedExperience = result || window.location.pathname;\n    if (!result) {\n      // eslint-disable-next-line no-console\n      console.debug(`failed to serve campaign ${campaign}. Falling back to default content.`);\n    }\n    document.body.classList.add(`campaign-${campaign}`);\n    context.sampleRUM('campaign', {\n      source: window.location.href,\n      target: result ? campaign : 'default',\n    });\n    return result;\n  } catch (err) {\n    // eslint-disable-next-line no-console\n    console.error(err);\n    return false;\n  }\n}\n\nexport async function serveAudience(document, options, context) {\n  if (isBot()) {\n    return false;\n  }\n\n  const pluginOptions = { ...DEFAULT_OPTIONS, ...(options || {}) };\n  const configuredAudiences = context.getAllMetadata(pluginOptions.audiencesMetaTagPrefix);\n  if (!Object.keys(configuredAudiences).length) {\n    return false;\n  }\n\n  const audiences = await getResolvedAudiences(\n    Object.keys(configuredAudiences).map(context.toClassName),\n    pluginOptions,\n    context,\n  );\n  if (!audiences || !audiences.length) {\n    return false;\n  }\n\n  const usp = new URLSearchParams(window.location.search);\n  const forcedAudience = usp.has(pluginOptions.audiencesQueryParameter)\n    ? context.toClassName(usp.get(pluginOptions.audiencesQueryParameter))\n    : null;\n\n  const selectedAudience = forcedAudience || audiences[0];\n  const urlString = configuredAudiences[selectedAudience];\n  if (!urlString) {\n    return false;\n  }\n\n  window.hlx.audience = { selectedAudience };\n\n  try {\n    const url = new URL(urlString);\n    const result = replaceInner(url.pathname, document.querySelector('main'));\n    window.hlx.audience.servedExperience = result || window.location.pathname;\n    if (!result) {\n      // eslint-disable-next-line no-console\n      console.debug(`failed to serve audience ${selectedAudience}. Falling back to default content.`);\n    }\n    document.body.classList.add(audiences.map((audience) => `audience-${audience}`));\n    context.sampleRUM('audiences', {\n      source: window.location.href,\n      target: result ? forcedAudience || audiences.join(',') : 'default',\n    });\n    return result;\n  } catch (err) {\n    // eslint-disable-next-line no-console\n    console.error(err);\n    return false;\n  }\n}\n\nwindow.hlx.patchBlockConfig?.push((config) => {\n  const { experiment } = window.hlx;\n\n  // No experiment is running\n  if (!experiment || !experiment.run) {\n    return config;\n  }\n\n  // The current experiment does not modify the block\n  if (experiment.selectedVariant === experiment.variantNames[0]\n    || !experiment.variants[experiment.variantNames[0]].blocks\n    || !experiment.variants[experiment.variantNames[0]].blocks.includes(config.blockName)) {\n    return config;\n  }\n\n  // The current experiment does not modify the block code\n  const variant = experiment.variants[experiment.selectedVariant];\n  if (!variant.blocks.length) {\n    return config;\n  }\n\n  let index = experiment.variants[experiment.variantNames[0]].blocks.indexOf('');\n  if (index < 0) {\n    index = experiment.variants[experiment.variantNames[0]].blocks.indexOf(config.blockName);\n  }\n  if (index < 0) {\n    index = experiment.variants[experiment.variantNames[0]].blocks.indexOf(`/blocks/${config.blockName}`);\n  }\n  if (index < 0) {\n    return config;\n  }\n\n  let origin = '';\n  let path;\n  if (/^https?:\\/\\//.test(variant.blocks[index])) {\n    const url = new URL(variant.blocks[index]);\n    // Experimenting from a different branch\n    if (url.origin !== window.location.origin) {\n      origin = url.origin;\n    }\n    // Experimenting from a block path\n    if (url.pathname !== '/') {\n      path = url.pathname;\n    } else {\n      path = `/blocks/${config.blockName}`;\n    }\n  } else { // Experimenting from a different branch on the same branch\n    path = `/blocks/${variant.blocks[index]}`;\n  }\n  if (!origin && !path) {\n    return config;\n  }\n\n  const { codeBasePath } = window.hlx;\n  return {\n    ...config,\n    cssPath: `${origin}${codeBasePath}${path}/${config.blockName}.css`,\n    jsPath: `${origin}${codeBasePath}${path}/${config.blockName}.js`,\n  };\n});\n\nlet isAdjusted = false;\nfunction adjustedRumSamplingRate(checkpoint, options, context) {\n  const pluginOptions = { ...DEFAULT_OPTIONS, ...(options || {}) };\n  return (data) => {\n    if (!window.hlx.rum.isSelected && !isAdjusted) {\n      isAdjusted = true;\n      // adjust sampling rate based on project config …\n      window.hlx.rum.weight = Math.min(\n        window.hlx.rum.weight,\n        // … but limit it to the 10% sampling at max to avoid losing anonymization\n        // and reduce burden on the backend\n        Math.max(pluginOptions.rumSamplingRate, MAX_SAMPLING_RATE),\n      );\n      window.hlx.rum.isSelected = (window.hlx.rum.random * window.hlx.rum.weight < 1);\n      if (window.hlx.rum.isSelected) {\n        context.sampleRUM(checkpoint, data);\n      }\n    }\n    return true;\n  };\n}\n\nexport async function loadEager(document, options, context) {\n  context.sampleRUM.always.on('audiences', adjustedRumSamplingRate('audiences', options, context));\n  context.sampleRUM.always.on('campaign', adjustedRumSamplingRate('campaign', options, context));\n  context.sampleRUM.always.on('experiment', adjustedRumSamplingRate('experiment', options, context));\n  let res = await runCampaign(document, options, context);\n  if (!res) {\n    res = await runExperiment(document, options, context);\n  }\n  if (!res) {\n    res = await serveAudience(document, options, context);\n  }\n}\n\nexport async function loadLazy(document, options, context) {\n  const pluginOptions = {\n    ...DEFAULT_OPTIONS,\n    ...(options || {}),\n  };\n  if (window.location.hostname.endsWith('hlx.page')\n    || window.location.hostname === ('localhost')\n    || (typeof options.isProd === 'function' && !options.isProd())\n    || (options.prodHost\n        && options.prodHost !== window.location.host\n        && options.prodHost !== window.location.hostname\n        && options.prodHost !== window.location.origin)) {\n    // eslint-disable-next-line import/no-cycle\n    const preview = await import('./preview.js');\n    preview.default(document, pluginOptions, { ...context, getResolvedAudiences });\n  }\n}\n"],"file":"plugins/experimentation/src/index.js"}