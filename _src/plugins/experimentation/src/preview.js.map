{"version":3,"file":"preview.js","sources":["../../../../src/plugins/experimentation/src/preview.js"],"sourcesContent":["/*\n * Copyright 2022 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nconst DOMAIN_KEY_NAME = 'aem-domainkey';\n\nfunction createPreviewOverlay(cls) {\n  const overlay = document.createElement('div');\n  overlay.className = cls;\n  return overlay;\n}\n\nfunction createButton(label) {\n  const button = document.createElement('button');\n  button.className = 'hlx-badge';\n  const text = document.createElement('span');\n  text.innerHTML = label;\n  button.append(text);\n  return button;\n}\n\nfunction createPopupItem(item) {\n  const actions = typeof item === 'object'\n    ? item.actions.map((action) => (action.href\n      ? `<div class=\"hlx-button\"><a href=\"${action.href}\">${action.label}</a></div>`\n      : `<div class=\"hlx-button\"><a href=\"#\">${action.label}</a></div>`))\n    : [];\n  const div = document.createElement('div');\n  div.className = `hlx-popup-item${item.isSelected ? ' is-selected' : ''}`;\n  div.innerHTML = `\n    <h5 class=\"hlx-popup-item-label\">${typeof item === 'object' ? item.label : item}</h5>\n    ${item.description ? `<div class=\"hlx-popup-item-description\">${item.description}</div>` : ''}\n    ${actions.length ? `<div class=\"hlx-popup-item-actions\">${actions}</div>` : ''}`;\n  const buttons = [...div.querySelectorAll('.hlx-button a')];\n  item.actions.forEach((action, index) => {\n    if (action.onclick) {\n      buttons[index].addEventListener('click', action.onclick);\n    }\n  });\n  return div;\n}\n\nfunction createPopupDialog(header, items = []) {\n  const actions = typeof header === 'object'\n    ? (header.actions || []).map((action) => (action.href\n      ? `<div class=\"hlx-button\"><a href=\"${action.href}\">${action.label}</a></div>`\n      : `<div class=\"hlx-button\"><a href=\"#\">${action.label}</a></div>`))\n    : [];\n  const popup = document.createElement('div');\n  popup.className = 'hlx-popup hlx-hidden';\n  popup.innerHTML = `\n    <div class=\"hlx-popup-header\">\n      <h5 class=\"hlx-popup-header-label\">${typeof header === 'object' ? header.label : header}</h5>\n      ${header.description ? `<div class=\"hlx-popup-header-description\">${header.description}</div>` : ''}\n      ${actions.length ? `<div class=\"hlx-popup-header-actions\">${actions}</div>` : ''}\n    </div>\n    <div class=\"hlx-popup-items\"></div>`;\n  const list = popup.querySelector('.hlx-popup-items');\n  items.forEach((item) => {\n    list.append(createPopupItem(item));\n  });\n  const buttons = [...popup.querySelectorAll('.hlx-popup-header-actions .hlx-button a')];\n  header.actions.forEach((action, index) => {\n    if (action.onclick) {\n      buttons[index].addEventListener('click', action.onclick);\n    }\n  });\n  return popup;\n}\n\nfunction createPopupButton(label, header, items) {\n  const button = createButton(label);\n  const popup = createPopupDialog(header, items);\n  button.innerHTML += '<span class=\"hlx-open\"></span>';\n  button.append(popup);\n  button.addEventListener('click', () => {\n    popup.classList.toggle('hlx-hidden');\n  });\n  return button;\n}\n\n// eslint-disable-next-line no-unused-vars\nfunction createToggleButton(label) {\n  const button = document.createElement('div');\n  button.className = 'hlx-badge';\n  button.role = 'button';\n  button.setAttribute('aria-pressed', false);\n  button.setAttribute('tabindex', 0);\n  const text = document.createElement('span');\n  text.innerHTML = label;\n  button.append(text);\n  button.addEventListener('click', () => {\n    button.setAttribute('aria-pressed', button.getAttribute('aria-pressed') === 'false');\n  });\n  return button;\n}\n\nfunction getOverlay() {\n  let overlay = document.querySelector('.hlx-preview-overlay');\n  if (!overlay) {\n    overlay = createPreviewOverlay('hlx-preview-overlay');\n    document.body.append(overlay);\n  }\n  return overlay;\n}\n\nconst percentformat = new Intl.NumberFormat('en-US', { style: 'percent', maximumSignificantDigits: 2 });\nconst countformat = new Intl.NumberFormat('en-US', { maximumSignificantDigits: 2 });\nconst significanceformat = {\n  format: (value) => {\n    if (value < 0.005) {\n      return 'highly significant';\n    }\n    if (value < 0.05) {\n      return 'significant';\n    }\n    if (value < 0.1) {\n      return 'marginally significant';\n    }\n    return 'not significant';\n  },\n};\nconst bigcountformat = {\n  format: (value) => {\n    if (value > 1000000) {\n      return `${countformat.format(value / 1000000)}M`;\n    }\n    if (value > 1000) {\n      return `${countformat.format(value / 1000)}K`;\n    }\n    return countformat.format(value);\n  },\n};\n\nfunction createVariant(experiment, variantName, config, options) {\n  const selectedVariant = config?.selectedVariant || config?.variantNames[0];\n  const variant = config.variants[variantName];\n  const split = variant.percentageSplit;\n  const percentage = percentformat.format(split);\n\n  const experimentURL = new URL(window.location.href);\n  // this will retain other query params such as ?rum=on\n  experimentURL.searchParams.set(options.experimentsQueryParameter, `${experiment}/${variantName}`);\n\n  return {\n    label: `<code>${variantName}</code>`,\n    description: `\n      <p>${variant.label}</p>\n      <p class=\"percentage\">(${percentage} split)</p>\n      <p class=\"performance\"></p>`,\n    actions: [{ label: 'Simulate', href: experimentURL.href }],\n    isSelected: selectedVariant === variantName,\n  };\n}\n\nasync function fetchRumData(experiment, options) {\n  if (!options.domainKey) {\n    // eslint-disable-next-line no-console\n    console.warn('Cannot show RUM data. No `domainKey` configured.');\n    return null;\n  }\n  if (!options.prodHost && (typeof options.isProd !== 'function' || !options.isProd())) {\n    // eslint-disable-next-line no-console\n    console.warn('Cannot show RUM data. No `prodHost` configured or custom `isProd` method provided.');\n    return null;\n  }\n\n  // the query is a bit slow, so I'm only fetching the results when the popup is opened\n  const resultsURL = new URL('https://helix-pages.anywhere.run/helix-services/run-query@v3/rum-experiments');\n  // restrict results to the production host, this also reduces query cost\n  if (typeof options.isProd === 'function' && options.isProd()) {\n    resultsURL.searchParams.set('url', window.location.host);\n  } else if (options.prodHost) {\n    resultsURL.searchParams.set('url', options.prodHost);\n  }\n  resultsURL.searchParams.set('domainkey', options.domainKey);\n  resultsURL.searchParams.set('experiment', experiment);\n\n  const response = await fetch(resultsURL.href);\n  if (!response.ok) {\n    return null;\n  }\n\n  const { results } = await response.json();\n  const { data } = results;\n  if (!data.length) {\n    return null;\n  }\n\n  const numberify = (obj) => Object.entries(obj).reduce((o, [k, v]) => {\n    o[k] = Number.parseFloat(v);\n    o[k] = Number.isNaN(o[k]) ? v : o[k];\n    return o;\n  }, {});\n\n  const variantsAsNums = data.map(numberify);\n  const totals = Object.entries(\n    variantsAsNums.reduce((o, v) => {\n      Object.entries(v).forEach(([k, val]) => {\n        if (typeof val === 'number' && Number.isInteger(val) && k.startsWith('variant_')) {\n          o[k] = (o[k] || 0) + val;\n        } else if (typeof val === 'number' && Number.isInteger(val) && k.startsWith('control_')) {\n          o[k] = val;\n        }\n      });\n      return o;\n    }, {}),\n  ).reduce((o, [k, v]) => {\n    o[k] = v;\n    const vkey = k.replace(/^(variant|control)_/, 'variant_');\n    const ckey = k.replace(/^(variant|control)_/, 'control_');\n    const tkey = k.replace(/^(variant|control)_/, 'total_');\n    if (!Number.isNaN(o[ckey]) && !Number.isNaN(o[vkey])) {\n      o[tkey] = o[ckey] + o[vkey];\n    }\n    return o;\n  }, {});\n  const richVariants = variantsAsNums\n    .map((v) => ({\n      ...v,\n      allocation_rate: v.variant_experimentations / totals.total_experimentations,\n    }))\n    .reduce((o, v) => {\n      const variantName = v.variant;\n      o[variantName] = v;\n      return o;\n    }, {\n      control: {\n        variant: 'control',\n        ...Object.entries(variantsAsNums[0]).reduce((k, v) => {\n          const [key, val] = v;\n          if (key.startsWith('control_')) {\n            k[key.replace(/^control_/, 'variant_')] = val;\n          }\n          return k;\n        }, {}),\n      },\n    });\n  const winner = variantsAsNums.reduce((w, v) => {\n    if (v.variant_conversion_rate > w.conversion_rate && v.p_value < 0.05) {\n      w.conversion_rate = v.variant_conversion_rate;\n      w.p_value = v.p_value;\n      w.variant = v.variant;\n    }\n    return w;\n  }, { variant: 'control', p_value: 1, conversion_rate: 0 });\n\n  return {\n    richVariants,\n    totals,\n    variantsAsNums,\n    winner,\n  };\n}\n\nfunction populatePerformanceMetrics(div, config, {\n  richVariants, totals, variantsAsNums, winner,\n}) {\n  // add summary\n  const summary = div.querySelector('.hlx-info');\n  summary.innerHTML = `Showing results for ${bigcountformat.format(totals.total_experimentations)} visits and ${bigcountformat.format(totals.total_conversions)} conversions: `;\n  if (totals.total_conversion_events < 500 && winner.p_value > 0.05) {\n    summary.innerHTML += ` not yet enough data to determine a winner. Keep going until you get ${bigcountformat.format((500 * totals.total_experimentations) / totals.total_conversion_events)} visits.`;\n  } else if (winner.p_value > 0.05) {\n    summary.innerHTML += ' no significant difference between variants. In doubt, stick with <code>control</code>.';\n  } else if (winner.variant === 'control') {\n    summary.innerHTML += ' Stick with <code>control</code>. No variant is better than the control.';\n  } else {\n    summary.innerHTML += ` <code>${winner.variant}</code> is the winner.`;\n  }\n\n  // add traffic allocation to control and each variant\n  config.variantNames.forEach((variantName, index) => {\n    const variantDiv = document.querySelectorAll('.hlx-popup-item')[index];\n    const percentage = variantDiv.querySelector('.percentage');\n    percentage.innerHTML = `\n      <span title=\"${countformat.format(richVariants[variantName].variant_conversion_events)} real events\">${bigcountformat.format(richVariants[variantName].variant_conversions)} clicks</span> /\n      <span title=\"${countformat.format(richVariants[variantName].variant_experimentation_events)} real events\">${bigcountformat.format(richVariants[variantName].variant_experimentations)} visits</span>\n      <span>(${percentformat.format(richVariants[variantName].variant_experimentations / totals.total_experimentations)} split)</span>\n    `;\n  });\n\n  // add click rate and significance to each variant\n  variantsAsNums.forEach((result) => {\n    const variant = document.querySelectorAll('.hlx-popup-item')[config.variantNames.indexOf(result.variant)];\n    if (variant) {\n      const performance = variant.querySelector('.performance');\n      performance.innerHTML = `\n        <span>click rate: ${percentformat.format(result.variant_conversion_rate)}</span>\n        <span>vs. ${percentformat.format(result.control_conversion_rate)}</span>\n        <span title=\"p value: ${result.p_value}\" class=\"significance ${significanceformat.format(result.p_value).replace(/ /, '-')}\">${significanceformat.format(result.p_value)}</span>\n      `;\n    }\n  });\n}\n\n/**\n * Create Badge if a Page is enlisted in a AEM Experiment\n * @return {Object} returns a badge or empty string\n */\nasync function decorateExperimentPill(overlay, options, context) {\n  const config = window?.hlx?.experiment;\n  const experiment = context.toClassName(context.getMetadata(options.experimentsMetaTag));\n  if (!experiment || !config) {\n    return;\n  }\n  // eslint-disable-next-line no-console\n  console.log('preview experiment', experiment);\n\n  const domainKey = window.localStorage.getItem(DOMAIN_KEY_NAME);\n  const pill = createPopupButton(\n    `Experiment: ${config.id}`,\n    {\n      label: config.label,\n      description: `\n        <div class=\"hlx-details\">\n          ${config.status}\n          ${config.resolvedAudiences ? ', ' : ''}\n          ${config.resolvedAudiences && config.resolvedAudiences.length ? config.resolvedAudiences[0] : ''}\n          ${config.resolvedAudiences && !config.resolvedAudiences.length ? 'No audience resolved' : ''}\n          ${config.variants[config.variantNames[0]].blocks.length ? ', Blocks: ' : ''}\n          ${config.variants[config.variantNames[0]].blocks.join(',')}\n        </div>\n        <div class=\"hlx-info\">How is it going?</div>`,\n      actions: [\n        ...config.manifest ? [{ label: 'Manifest', href: config.manifest }] : [],\n        {\n          label: '<span style=\"font-size:2em;line-height:1em\">⚙</span>',\n          onclick: async () => {\n            // eslint-disable-next-line no-alert\n            const key = window.prompt(\n              'Please enter your domain key:',\n              window.localStorage.getItem(DOMAIN_KEY_NAME) || '',\n            );\n            if (key && key.match(/[a-f0-9-]+/)) {\n              window.localStorage.setItem(DOMAIN_KEY_NAME, key);\n              const performanceMetrics = await fetchRumData(experiment, {\n                ...options,\n                domainKey: key,\n              });\n              if (performanceMetrics === null) {\n                return;\n              }\n              populatePerformanceMetrics(pill, config, performanceMetrics);\n            } else if (key === '') {\n              window.localStorage.removeItem(DOMAIN_KEY_NAME);\n            }\n          },\n        },\n      ],\n    },\n    config.variantNames.map((vname) => createVariant(experiment, vname, config, options)),\n  );\n  if (config.run) {\n    pill.classList.add(`is-${context.toClassName(config.status)}`);\n  }\n  overlay.append(pill);\n\n  const performanceMetrics = await fetchRumData(experiment, { ...options, domainKey });\n  if (performanceMetrics === null) {\n    return;\n  }\n  populatePerformanceMetrics(pill, config, performanceMetrics);\n}\n\nfunction createCampaign(campaign, isSelected, options) {\n  const url = new URL(window.location.href);\n  if (campaign !== 'default') {\n    url.searchParams.set(options.campaignsQueryParameter, campaign);\n  } else {\n    url.searchParams.delete(options.campaignsQueryParameter);\n  }\n\n  return {\n    label: `<code>${campaign}</code>`,\n    actions: [{ label: 'Simulate', href: url.href }],\n    isSelected,\n  };\n}\n\n/**\n * Create Badge if a Page is enlisted in a AEM Campaign\n * @return {Object} returns a badge or empty string\n */\nasync function decorateCampaignPill(overlay, options, context) {\n  const campaigns = context.getAllMetadata(options.campaignsMetaTagPrefix);\n  if (!Object.keys(campaigns).length) {\n    return;\n  }\n\n  const usp = new URLSearchParams(window.location.search);\n  const forcedAudience = usp.has(options.audiencesQueryParameter)\n    ? context.toClassName(usp.get(options.audiencesQueryParameter))\n    : null;\n  const audiences = campaigns.audience?.split(',').map(context.toClassName) || [];\n  const resolvedAudiences = await context.getResolvedAudiences(audiences, options);\n  const isActive = forcedAudience\n    ? audiences.includes(forcedAudience)\n    : (!resolvedAudiences || !!resolvedAudiences.length);\n  const campaign = (usp.has(options.campaignsQueryParameter)\n    ? context.toClassName(usp.get(options.campaignsQueryParameter))\n    : null)\n    || (usp.has('utm_campaign') ? context.toClassName(usp.get('utm_campaign')) : null);\n  const pill = createPopupButton(\n    `Campaign: ${campaign || 'default'}`,\n    {\n      label: 'Campaigns on this page:',\n      description: `\n        <div class=\"hlx-details\">\n          ${audiences.length && resolvedAudiences?.length ? `Audience: ${resolvedAudiences[0]}` : ''}\n          ${audiences.length && !resolvedAudiences?.length ? 'No audience resolved' : ''}\n          ${!audiences.length || !resolvedAudiences ? 'No audience configured' : ''}\n        </div>`,\n    },\n    [\n      createCampaign('default', !campaign || !isActive, options),\n      ...Object.keys(campaigns)\n        .filter((c) => c !== 'audience')\n        .map((c) => createCampaign(c, isActive && context.toClassName(campaign) === c, options)),\n    ],\n  );\n\n  if (campaign && isActive) {\n    pill.classList.add('is-active');\n  }\n  overlay.append(pill);\n}\n\nfunction createAudience(audience, isSelected, options) {\n  const url = new URL(window.location.href);\n  url.searchParams.set(options.audiencesQueryParameter, audience);\n\n  return {\n    label: `<code>${audience}</code>`,\n    actions: [{ label: 'Simulate', href: url.href }],\n    isSelected,\n  };\n}\n\n/**\n * Create Badge if a Page is enlisted in a AEM Audiences\n * @return {Object} returns a badge or empty string\n */\nasync function decorateAudiencesPill(overlay, options, context) {\n  const audiences = context.getAllMetadata(options.audiencesMetaTagPrefix);\n  if (!Object.keys(audiences).length || !Object.keys(options.audiences).length) {\n    return;\n  }\n\n  const resolvedAudiences = await context.getResolvedAudiences(\n    Object.keys(audiences),\n    options,\n    context,\n  );\n  const pill = createPopupButton(\n    'Audiences',\n    {\n      label: 'Audiences for this page:',\n    },\n    [\n      createAudience('default', !resolvedAudiences.length || resolvedAudiences[0] === 'default', options),\n      ...Object.keys(audiences)\n        .filter((a) => a !== 'audience')\n        .map((a) => createAudience(a, resolvedAudiences && resolvedAudiences[0] === a, options)),\n    ],\n  );\n\n  if (resolvedAudiences.length) {\n    pill.classList.add('is-active');\n  }\n  overlay.append(pill);\n}\n\n/**\n * Decorates Preview mode badges and overlays\n * @return {Object} returns a badge or empty string\n */\nexport default async function decoratePreviewMode(document, options, context) {\n  try {\n    context.loadCSS(`${options.basePath || window.hlx.codeBasePath}/plugins/experimentation/src/preview.css`);\n    const overlay = getOverlay(options);\n    await decorateAudiencesPill(overlay, options, context);\n    await decorateCampaignPill(overlay, options, context);\n    await decorateExperimentPill(overlay, options, context);\n  } catch (e) {\n    // eslint-disable-next-line no-console\n    console.log(e);\n  }\n}\n"],"names":["DOMAIN_KEY_NAME","createPreviewOverlay","cls","overlay","createButton","label","button","text","createPopupItem","item","actions","action","div","buttons","index","createPopupDialog","header","items","popup","list","createPopupButton","getOverlay","percentformat","countformat","significanceformat","value","bigcountformat","createVariant","experiment","variantName","config","options","selectedVariant","variant","split","percentage","experimentURL","fetchRumData","resultsURL","response","results","data","numberify","obj","k","v","variantsAsNums","totals","o","val","vkey","ckey","tkey","richVariants","key","winner","w","populatePerformanceMetrics","summary","result","performance","decorateExperimentPill","context","domainKey","pill","performanceMetrics","vname","createCampaign","campaign","isSelected","url","decorateCampaignPill","campaigns","usp","forcedAudience","audiences","resolvedAudiences","isActive","c","createAudience","audience","decorateAudiencesPill","a","decoratePreviewMode","document"],"mappings":"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"}