import{DEBUG_BUILD as N}from"../debug-build.js";import{getHttpRequestData as k,WINDOW as p}from"../helpers.js";import{registerBackgroundTabDetection as Q}from"./backgroundtab.js";import{linkTraces as Z}from"./linkedTraces.js";import{defaultRequestInstrumentationOptions as ee,instrumentOutgoingRequests as te}from"./request.js";import{consoleSandbox as ne,logger as C}from"../../../../../core/build/esm/utils-hoist/logger.js";import{registerSpanErrorInstrumentation as ae}from"../../../../../core/build/esm/tracing/errors.js";import{TRACING_DEFAULTS as re,startIdleSpan as F}from"../../../../../core/build/esm/tracing/idleSpan.js";import{startTrackingWebVitals as oe,startTrackingLongAnimationFrames as ie,startTrackingLongTasks as se,startTrackingInteractions as ce,addPerformanceEntries as me}from"../../../../../../sentry-internal/browser-utils/build/esm/metrics/browserMetrics.js";import{startTrackingINP as pe,registerInpInteractionListener as de}from"../../../../../../sentry-internal/browser-utils/build/esm/metrics/inp.js";import{GLOBAL_OBJ as ue}from"../../../../../core/build/esm/utils-hoist/worldwide.js";import{getLocationHref as ge}from"../../../../../core/build/esm/utils-hoist/browser.js";import{getClient as O,getIsolationScope as fe,getCurrentScope as d}from"../../../../../core/build/esm/currentScopes.js";import{generateTraceId as h}from"../../../../../core/build/esm/utils-hoist/propagationContext.js";import{propagationContextFromHeaders as le}from"../../../../../core/build/esm/utils-hoist/tracing.js";import{browserPerformanceTimeOrigin as Te}from"../../../../../core/build/esm/utils-hoist/time.js";import{addHistoryInstrumentationHandler as Se}from"../../../../../../sentry-internal/browser-utils/build/esm/instrument/history.js";import{spanToJSON as L,spanIsSampled as Ie}from"../../../../../core/build/esm/utils/spanUtils.js";import{SEMANTIC_ATTRIBUTE_SENTRY_IDLE_SPAN_FINISH_REASON as M,SEMANTIC_ATTRIBUTE_SENTRY_SOURCE as T,SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN as w}from"../../../../../core/build/esm/semanticAttributes.js";import{addNonEnumerableProperty as be}from"../../../../../core/build/esm/utils-hoist/object.js";import{getDynamicSamplingContextFromSpan as Pe}from"../../../../../core/build/esm/tracing/dynamicSamplingContext.js";import{parseStringToURLObject as Re}from"../../../../../core/build/esm/utils-hoist/url.js";const _e="BrowserTracing",Ee={...re,instrumentNavigation:!0,instrumentPageLoad:!0,markBackgroundSpan:!0,enableLongTask:!0,enableLongAnimationFrame:!0,enableInp:!0,linkPreviousTrace:"in-memory",consistentTraceSampling:!1,_experiments:{},...ee};let y=!1;const Je=(n={})=>{y&&ne(()=>{console.warn("Multiple browserTracingIntegration instances are not supported.")}),y=!0;const a=p.document;ae();const{enableInp:c,enableLongTask:E,enableLongAnimationFrame:u,_experiments:{enableInteractions:S,enableStandaloneClsSpans:o},beforeStartSpan:I,idleTimeout:m,finalTimeout:g,childSpanTimeout:b,markBackgroundSpan:W,traceFetch:q,traceXHR:H,trackFetchStreamPerformance:G,shouldCreateSpanForRequest:z,enableHTTPTimings:Y,instrumentPageLoad:$,instrumentNavigation:K,linkPreviousTrace:v,consistentTraceSampling:V,onRequestSpanStart:J}={...Ee,...n},j=oe({recordClsStandaloneSpans:o||!1});c&&pe(),u&&ue.PerformanceObserver&&PerformanceObserver.supportedEntryTypes&&PerformanceObserver.supportedEntryTypes.includes("long-animation-frame")?ie():E&&se(),S&&ce();const A={name:void 0,source:void 0};function D(t,i){const f=i.op==="pageload",e=I?I(i):i,r=e.attributes||{};i.name!==e.name&&(r[T]="custom",e.attributes=r),A.name=e.name,A.source=r[T];const s=F(e,{idleTimeout:m,finalTimeout:g,childSpanTimeout:b,disableAutoFinish:f,beforeSpanEnd:R=>{j(),me(R,{recordClsOnPageloadSpan:!o}),x(t,void 0);const l=d(),X=l.getPropagationContext();l.setPropagationContext({...X,traceId:s.spanContext().traceId,sampled:Ie(s),dsc:Pe(R)})}});x(t,s);function P(){a&&["interactive","complete"].includes(a.readyState)&&t.emit("idleSpanEnableAutoFinish",s)}f&&a&&(a.addEventListener("readystatechange",()=>{P()}),P())}return{name:_e,afterAllSetup(t){let i=ge();function f(){const e=_(t);e&&!L(e).timestamp&&(N&&C.log(`[Tracing] Finishing current active span with op: ${L(e).op}`),e.setAttribute(M,"cancelled"),e.end())}if(t.on("startNavigationSpan",e=>{if(O()!==t)return;f(),fe().setPropagationContext({traceId:h(),sampleRand:Math.random()});const r=d();r.setPropagationContext({traceId:h(),sampleRand:Math.random()}),r.setSDKProcessingMetadata({normalizedRequest:void 0}),D(t,{op:"navigation",...e})}),t.on("startPageLoadSpan",(e,r={})=>{if(O()!==t)return;f();const s=r.sentryTrace||B("sentry-trace"),P=r.baggage||B("baggage"),R=le(s,P),l=d();l.setPropagationContext(R),l.setSDKProcessingMetadata({normalizedRequest:k()}),D(t,{op:"pageload",...e})}),v!=="off"&&Z(t,{linkPreviousTrace:v,consistentTraceSampling:V}),p.location){if($){const e=Te();Ae(t,{name:p.location.pathname,startTime:e?e/1e3:void 0,attributes:{[T]:"url",[w]:"auto.pageload.browser"}})}K&&Se(({to:e,from:r})=>{if(r===void 0&&i?.indexOf(e)!==-1){i=void 0;return}i=void 0;const s=Re(e);Ne(t,{name:s?.pathname||p.location.pathname,attributes:{[T]:"url",[w]:"auto.navigation.browser"}}),d().setSDKProcessingMetadata({normalizedRequest:{...k(),url:e}})})}W&&Q(),S&&Ce(t,m,g,b,A),c&&de(),te(t,{traceFetch:q,traceXHR:H,trackFetchStreamPerformance:G,tracePropagationTargets:t.getOptions().tracePropagationTargets,shouldCreateSpanForRequest:z,enableHTTPTimings:Y,onRequestSpanStart:J})}}};function Ae(n,a,c){return n.emit("startPageLoadSpan",a,c),d().setTransactionName(a.name),_(n)}function Ne(n,a){return n.emit("startNavigationSpan",a),d().setTransactionName(a.name),_(n)}function B(n){return p.document?.querySelector(`meta[name=${n}]`)?.getAttribute("content")||void 0}function Ce(n,a,c,E,u){const S=p.document;let o;const I=()=>{const m="ui.action.click",g=_(n);if(g){const b=L(g).op;if(["navigation","pageload"].includes(b)){N&&C.warn(`[Tracing] Did not create ${m} span because a pageload or navigation span is in progress.`);return}}if(o&&(o.setAttribute(M,"interactionInterrupted"),o.end(),o=void 0),!u.name){N&&C.warn(`[Tracing] Did not create ${m} transaction because _latestRouteName is missing.`);return}o=F({name:u.name,op:m,attributes:{[T]:u.source||"url"}},{idleTimeout:a,finalTimeout:c,childSpanTimeout:E})};S&&addEventListener("click",I,{once:!1,capture:!0})}const U="_sentry_idleSpan";function _(n){return n[U]}function x(n,a){be(n,U,a)}export{_e as BROWSER_TRACING_INTEGRATION_ID,Je as browserTracingIntegration,B as getMetaContent,Ne as startBrowserTracingNavigationSpan,Ae as startBrowserTracingPageLoadSpan};
//# sourceMappingURL=browserTracingIntegration.js.map
