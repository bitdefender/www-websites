{"version":3,"file":"helpers.js","sources":["../../../../../../../node_modules/@sentry/browser/build/npm/esm/helpers.js"],"sourcesContent":["import { GLOBAL_OBJ, getOriginalFunction, markFunctionWrapped, addNonEnumerableProperty, withScope, addExceptionTypeValue, addExceptionMechanism, captureException } from '@sentry/core';\n\nconst WINDOW = GLOBAL_OBJ ;\n\nlet ignoreOnError = 0;\n\n/**\n * @hidden\n */\nfunction shouldIgnoreOnError() {\n  return ignoreOnError > 0;\n}\n\n/**\n * @hidden\n */\nfunction ignoreNextOnError() {\n  // onerror should trigger before setTimeout\n  ignoreOnError++;\n  setTimeout(() => {\n    ignoreOnError--;\n  });\n}\n\n// eslint-disable-next-line @typescript-eslint/ban-types\n\n/**\n * Instruments the given function and sends an event to Sentry every time the\n * function throws an exception.\n *\n * @param fn A function to wrap. It is generally safe to pass an unbound function, because the returned wrapper always\n * has a correct `this` context.\n * @returns The wrapped function.\n * @hidden\n */\nfunction wrap(\n  fn,\n  options\n\n = {},\n) {\n  // for future readers what this does is wrap a function and then create\n  // a bi-directional wrapping between them.\n  //\n  // example: wrapped = wrap(original);\n  //  original.__sentry_wrapped__ -> wrapped\n  //  wrapped.__sentry_original__ -> original\n\n  function isFunction(fn) {\n    return typeof fn === 'function';\n  }\n\n  if (!isFunction(fn)) {\n    return fn;\n  }\n\n  try {\n    // if we're dealing with a function that was previously wrapped, return\n    // the original wrapper.\n    const wrapper = (fn ).__sentry_wrapped__;\n    if (wrapper) {\n      if (typeof wrapper === 'function') {\n        return wrapper;\n      } else {\n        // If we find that the `__sentry_wrapped__` function is not a function at the time of accessing it, it means\n        // that something messed with it. In that case we want to return the originally passed function.\n        return fn;\n      }\n    }\n\n    // We don't wanna wrap it twice\n    if (getOriginalFunction(fn)) {\n      return fn;\n    }\n  } catch (e) {\n    // Just accessing custom props in some Selenium environments\n    // can cause a \"Permission denied\" exception (see raven-js#495).\n    // Bail on wrapping and return the function as-is (defers to window.onerror).\n    return fn;\n  }\n\n  // Wrap the function itself\n  // It is important that `sentryWrapped` is not an arrow function to preserve the context of `this`\n  const sentryWrapped = function ( ...args) {\n    try {\n      // Also wrap arguments that are themselves functions\n      const wrappedArguments = args.map(arg => wrap(arg, options));\n\n      // Attempt to invoke user-land function\n      // NOTE: If you are a Sentry user, and you are seeing this stack frame, it\n      //       means the sentry.javascript SDK caught an error invoking your application code. This\n      //       is expected behavior and NOT indicative of a bug with sentry.javascript.\n      return fn.apply(this, wrappedArguments);\n    } catch (ex) {\n      ignoreNextOnError();\n\n      withScope(scope => {\n        scope.addEventProcessor(event => {\n          if (options.mechanism) {\n            addExceptionTypeValue(event, undefined, undefined);\n            addExceptionMechanism(event, options.mechanism);\n          }\n\n          event.extra = {\n            ...event.extra,\n            arguments: args,\n          };\n\n          return event;\n        });\n\n        captureException(ex);\n      });\n\n      throw ex;\n    }\n  } ;\n\n  // Wrap the wrapped function in a proxy, to ensure any other properties of the original function remain available\n  try {\n    for (const property in fn) {\n      if (Object.prototype.hasOwnProperty.call(fn, property)) {\n        sentryWrapped[property ] = fn[property ];\n      }\n    }\n  } catch {\n    // Accessing some objects may throw\n    // ref: https://github.com/getsentry/sentry-javascript/issues/1168\n  }\n\n  // Signal that this function has been wrapped/filled already\n  // for both debugging and to prevent it to being wrapped/filled twice\n  markFunctionWrapped(sentryWrapped, fn);\n\n  addNonEnumerableProperty(fn, '__sentry_wrapped__', sentryWrapped);\n\n  // Restore original function name (not all browsers allow that)\n  try {\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    const descriptor = Object.getOwnPropertyDescriptor(sentryWrapped, 'name');\n    if (descriptor.configurable) {\n      Object.defineProperty(sentryWrapped, 'name', {\n        get() {\n          return fn.name;\n        },\n      });\n    }\n  } catch {\n    // This may throw if e.g. the descriptor does not exist, or a browser does not allow redefining `name`.\n    // to save some bytes we simply try-catch this\n  }\n\n  return sentryWrapped;\n}\n\nexport { WINDOW, ignoreNextOnError, shouldIgnoreOnError, wrap };\n//# sourceMappingURL=helpers.js.map\n"],"names":["WINDOW","GLOBAL_OBJ","ignoreOnError","shouldIgnoreOnError","ignoreNextOnError","wrap","fn","options","isFunction","wrapper","getOriginalFunction","sentryWrapped","args","wrappedArguments","arg","ex","withScope","scope","event","addExceptionTypeValue","addExceptionMechanism","captureException","property","markFunctionWrapped","addNonEnumerableProperty"],"mappings":"keAEK,MAACA,EAASC,EAEf,IAAIC,EAAgB,EAKpB,SAASC,GAAsB,CAC7B,OAAOD,EAAgB,CACzB,CAKA,SAASE,GAAoB,CAE3BF,IACA,WAAW,IAAM,CACfA,GACJ,CAAG,CACH,CAaA,SAASG,EACPC,EACAC,EAEC,CAAE,EACH,CAQA,SAASC,EAAWF,EAAI,CACtB,OAAO,OAAOA,GAAO,UACzB,CAEE,GAAI,CAACE,EAAWF,CAAE,EAChB,OAAOA,EAGT,GAAI,CAGF,MAAMG,EAAWH,EAAK,mBACtB,GAAIG,EACF,OAAI,OAAOA,GAAY,WACdA,EAIAH,EAKX,GAAII,EAAoBJ,CAAE,EACxB,OAAOA,CAEV,MAAW,CAIV,OAAOA,CACX,CAIE,MAAMK,EAAgB,YAAcC,EAAM,CACxC,GAAI,CAEF,MAAMC,EAAmBD,EAAK,IAAIE,GAAOT,EAAKS,EAAKP,CAAO,CAAC,EAM3D,OAAOD,EAAG,MAAM,KAAMO,CAAgB,CACvC,OAAQE,EAAI,CACX,MAAAX,EAAmB,EAEnBY,EAAUC,GAAS,CACjBA,EAAM,kBAAkBC,IAClBX,EAAQ,YACVY,EAAsBD,EAAO,MAAoB,EACjDE,EAAsBF,EAAOX,EAAQ,SAAS,GAGhDW,EAAM,MAAQ,CACZ,GAAGA,EAAM,MACT,UAAWN,CACZ,EAEMM,EACR,EAEDG,EAAiBN,CAAE,CAC3B,CAAO,EAEKA,CACZ,CACG,EAGD,GAAI,CACF,UAAWO,KAAYhB,EACjB,OAAO,UAAU,eAAe,KAAKA,EAAIgB,CAAQ,IACnDX,EAAcW,CAAQ,EAAKhB,EAAGgB,CAAU,EAGhD,MAAU,CAGV,CAIEC,EAAoBZ,EAAeL,CAAE,EAErCkB,EAAyBlB,EAAI,qBAAsBK,CAAa,EAGhE,GAAI,CAEiB,OAAO,yBAAyBA,EAAe,MAAM,EACzD,cACb,OAAO,eAAeA,EAAe,OAAQ,CAC3C,KAAM,CACJ,OAAOL,EAAG,IACX,CACT,CAAO,CAEP,MAAU,CAGV,CAEE,OAAOK,CACT","x_google_ignoreList":[0]}