import{getIsolationScope as s,getCurrentScope as o,getClient as u}from"./currentScopes.js";import{makeSession as S,updateSession as f,closeSession as g}from"./session.js";import{parseEventHintOrCaptureContext as l}from"./utils/prepareEvent.js";import{GLOBAL_OBJ as d}from"./utils-hoist/worldwide.js";function C(e,t){return o().captureException(e,l())}function O(e,t){return o().captureEvent(e,t)}function U(e,t){s().setContext(e,t)}function b(){const e=u();return e?.getOptions().enabled!==!1&&!!e?.getTransport()}function k(e){s().addEventProcessor(e)}function A(e){const t=s(),n=o(),{userAgent:i}=d.navigator||{},r=S({user:n.getUser()||t.getUser(),...i&&{userAgent:i},...e}),c=t.getSession();return c?.status==="ok"&&f(c,{status:"exited"}),a(),t.setSession(r),r}function a(){const e=s(),n=o().getSession()||e.getSession();n&&g(n),p(),e.setSession()}function p(){const e=s(),t=u(),n=e.getSession();n&&t&&t.captureSession(n)}function B(e=!1){if(e){a();return}p()}export{k as addEventProcessor,O as captureEvent,C as captureException,B as captureSession,a as endSession,b as isEnabled,U as setContext,A as startSession};
//# sourceMappingURL=exports.js.map
