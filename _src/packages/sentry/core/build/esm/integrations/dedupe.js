import{DEBUG_BUILD as c}from"../debug-build.js";import{defineIntegration as p}from"../integration.js";import{logger as m}from"../utils-hoist/logger.js";import{getFramesFromEvent as u}from"../utils-hoist/stacktrace.js";const g="Dedupe",d=()=>{let t;return{name:g,processEvent(n){if(n.type)return n;try{if(_(n,t))return c&&m.warn("Event dropped due to being a duplicate of previously captured event."),null}catch{}return t=n}}},D=p(d);function _(t,n){return n?!!(F(t,n)||x(t,n)):!1}function F(t,n){const e=t.message,r=n.message;return!(!e&&!r||e&&!r||!e&&r||e!==r||!l(t,n)||!s(t,n))}function x(t,n){const e=a(n),r=a(t);return!(!e||!r||e.type!==r.type||e.value!==r.value||!l(t,n)||!s(t,n))}function s(t,n){let e=u(t),r=u(n);if(!e&&!r)return!0;if(e&&!r||!e&&r||(e=e,r=r,r.length!==e.length))return!1;for(let i=0;i<r.length;i++){const f=r[i],o=e[i];if(f.filename!==o.filename||f.lineno!==o.lineno||f.colno!==o.colno||f.function!==o.function)return!1}return!0}function l(t,n){let e=t.fingerprint,r=n.fingerprint;if(!e&&!r)return!0;if(e&&!r||!e&&r)return!1;e=e,r=r;try{return e.join("")===r.join("")}catch{return!1}}function a(t){return t.exception?.values&&t.exception.values[0]}export{_ as _shouldDropEvent,D as dedupeIntegration};
//# sourceMappingURL=dedupe.js.map
