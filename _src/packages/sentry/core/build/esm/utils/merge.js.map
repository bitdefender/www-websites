{"version":3,"file":"merge.js","sources":["../../../../../../../node_modules/@sentry/core/build/esm/utils/merge.js"],"sourcesContent":["/**\n * Shallow merge two objects.\n * Does not mutate the passed in objects.\n * Undefined/empty values in the merge object will overwrite existing values.\n *\n * By default, this merges 2 levels deep.\n */\nfunction merge(initialObj, mergeObj, levels = 2) {\n  // If the merge value is not an object, or we have no merge levels left,\n  // we just set the value to the merge value\n  if (!mergeObj || typeof mergeObj !== 'object' || levels <= 0) {\n    return mergeObj;\n  }\n\n  // If the merge object is an empty object, and the initial object is not undefined, we return the initial object\n  if (initialObj && Object.keys(mergeObj).length === 0) {\n    return initialObj;\n  }\n\n  // Clone object\n  const output = { ...initialObj };\n\n  // Merge values into output, resursively\n  for (const key in mergeObj) {\n    if (Object.prototype.hasOwnProperty.call(mergeObj, key)) {\n      output[key] = merge(output[key], mergeObj[key], levels - 1);\n    }\n  }\n\n  return output;\n}\n\nexport { merge };\n//# sourceMappingURL=merge.js.map\n"],"names":["merge","initialObj","mergeObj","levels","output","key"],"mappings":"AAOA,SAASA,EAAMC,EAAYC,EAAUC,EAAS,EAAG,CAG/C,GAAI,CAACD,GAAY,OAAOA,GAAa,UAAYC,GAAU,EACzD,OAAOD,EAIT,GAAID,GAAc,OAAO,KAAKC,CAAQ,EAAE,SAAW,EACjD,OAAOD,EAIT,MAAMG,EAAS,CAAE,GAAGH,CAAY,EAGhC,UAAWI,KAAOH,EACZ,OAAO,UAAU,eAAe,KAAKA,EAAUG,CAAG,IACpDD,EAAOC,CAAG,EAAIL,EAAMI,EAAOC,CAAG,EAAGH,EAASG,CAAG,EAAGF,EAAS,CAAC,GAI9D,OAAOC,CACT","x_google_ignoreList":[0]}