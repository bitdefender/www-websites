{"version":3,"file":"handlers.js","sources":["../../../../../../../../node_modules/@sentry/core/build/esm/utils-hoist/instrument/handlers.js"],"sourcesContent":["import { DEBUG_BUILD } from '../../debug-build.js';\nimport { logger } from '../logger.js';\nimport { getFunctionName } from '../stacktrace.js';\n\n// We keep the handlers globally\nconst handlers = {};\nconst instrumented = {};\n\n/** Add a handler function. */\nfunction addHandler(type, handler) {\n  handlers[type] = handlers[type] || [];\n  (handlers[type] ).push(handler);\n}\n\n/**\n * Reset all instrumentation handlers.\n * This can be used by tests to ensure we have a clean slate of instrumentation handlers.\n */\nfunction resetInstrumentationHandlers() {\n  Object.keys(handlers).forEach(key => {\n    handlers[key ] = undefined;\n  });\n}\n\n/** Maybe run an instrumentation function, unless it was already called. */\nfunction maybeInstrument(type, instrumentFn) {\n  if (!instrumented[type]) {\n    instrumented[type] = true;\n    try {\n      instrumentFn();\n    } catch (e) {\n      DEBUG_BUILD && logger.error(`Error while instrumenting ${type}`, e);\n    }\n  }\n}\n\n/** Trigger handlers for a given instrumentation type. */\nfunction triggerHandlers(type, data) {\n  const typeHandlers = type && handlers[type];\n  if (!typeHandlers) {\n    return;\n  }\n\n  for (const handler of typeHandlers) {\n    try {\n      handler(data);\n    } catch (e) {\n      DEBUG_BUILD &&\n        logger.error(\n          `Error while triggering instrumentation handler.\\nType: ${type}\\nName: ${getFunctionName(handler)}\\nError:`,\n          e,\n        );\n    }\n  }\n}\n\nexport { addHandler, maybeInstrument, resetInstrumentationHandlers, triggerHandlers };\n//# sourceMappingURL=handlers.js.map\n"],"names":["handlers","instrumented","addHandler","type","handler","maybeInstrument","instrumentFn","e","DEBUG_BUILD","logger","triggerHandlers","data","typeHandlers","getFunctionName"],"mappings":"4IAKA,MAAMA,EAAW,CAAE,EACbC,EAAe,CAAE,EAGvB,SAASC,EAAWC,EAAMC,EAAS,CACjCJ,EAASG,CAAI,EAAIH,EAASG,CAAI,GAAK,CAAE,EACpCH,EAASG,CAAI,EAAI,KAAKC,CAAO,CAChC,CAaA,SAASC,EAAgBF,EAAMG,EAAc,CAC3C,GAAI,CAACL,EAAaE,CAAI,EAAG,CACvBF,EAAaE,CAAI,EAAI,GACrB,GAAI,CACFG,EAAc,CACf,OAAQC,EAAG,CACVC,GAAeC,EAAO,MAAM,6BAA6BN,CAAI,GAAII,CAAC,CACxE,CACA,CACA,CAGA,SAASG,EAAgBP,EAAMQ,EAAM,CACnC,MAAMC,EAAeT,GAAQH,EAASG,CAAI,EAC1C,GAAKS,EAIL,UAAWR,KAAWQ,EACpB,GAAI,CACFR,EAAQO,CAAI,CACb,OAAQJ,EAAG,CACVC,GACEC,EAAO,MACL;AAAA,QAA0DN,CAAI;AAAA,QAAWU,EAAgBT,CAAO,CAAC;AAAA,QACjGG,CACD,CACT,CAEA","x_google_ignoreList":[0]}