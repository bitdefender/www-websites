{"version":3,"file":"console.js","sources":["../../../../../../../../node_modules/@sentry/core/build/esm/utils-hoist/instrument/console.js"],"sourcesContent":["import { CONSOLE_LEVELS, originalConsoleMethods } from '../logger.js';\nimport { fill } from '../object.js';\nimport { GLOBAL_OBJ } from '../worldwide.js';\nimport { addHandler, maybeInstrument, triggerHandlers } from './handlers.js';\n\n/**\n * Add an instrumentation handler for when a console.xxx method is called.\n *\n * Use at your own risk, this might break without changelog notice, only used internally.\n * @hidden\n */\nfunction addConsoleInstrumentationHandler(handler) {\n  const type = 'console';\n  addHandler(type, handler);\n  maybeInstrument(type, instrumentConsole);\n}\n\nfunction instrumentConsole() {\n  if (!('console' in GLOBAL_OBJ)) {\n    return;\n  }\n\n  CONSOLE_LEVELS.forEach(function (level) {\n    if (!(level in GLOBAL_OBJ.console)) {\n      return;\n    }\n\n    fill(GLOBAL_OBJ.console, level, function (originalConsoleMethod) {\n      originalConsoleMethods[level] = originalConsoleMethod;\n\n      return function (...args) {\n        const handlerData = { args, level };\n        triggerHandlers('console', handlerData);\n\n        const log = originalConsoleMethods[level];\n        log?.apply(GLOBAL_OBJ.console, args);\n      };\n    });\n  });\n}\n\nexport { addConsoleInstrumentationHandler };\n//# sourceMappingURL=console.js.map\n"],"names":["addConsoleInstrumentationHandler","handler","type","addHandler","maybeInstrument","instrumentConsole","GLOBAL_OBJ","CONSOLE_LEVELS","level","fill","originalConsoleMethod","originalConsoleMethods","args","triggerHandlers"],"mappings":"gPAWA,SAASA,EAAiCC,EAAS,CACjD,MAAMC,EAAO,UACbC,EAAWD,EAAMD,CAAO,EACxBG,EAAgBF,EAAMG,CAAiB,CACzC,CAEA,SAASA,GAAoB,CACrB,YAAaC,GAInBC,EAAe,QAAQ,SAAUC,EAAO,CAChCA,KAASF,EAAW,SAI1BG,EAAKH,EAAW,QAASE,EAAO,SAAUE,EAAuB,CAC/D,OAAAC,EAAuBH,CAAK,EAAIE,EAEzB,YAAaE,EAAM,CAExBC,EAAgB,UADI,CAAE,KAAAD,EAAM,MAAAJ,CAAO,CACG,EAE1BG,EAAuBH,CAAK,GACnC,MAAMF,EAAW,QAASM,CAAI,CACpC,CACP,CAAK,CACL,CAAG,CACH","x_google_ignoreList":[0]}