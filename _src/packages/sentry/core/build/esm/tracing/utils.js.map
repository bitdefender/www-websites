{"version":3,"file":"utils.js","sources":["../../../../../../../node_modules/@sentry/core/build/esm/tracing/utils.js"],"sourcesContent":["import { addNonEnumerableProperty } from '../utils-hoist/object.js';\n\nconst SCOPE_ON_START_SPAN_FIELD = '_sentryScope';\nconst ISOLATION_SCOPE_ON_START_SPAN_FIELD = '_sentryIsolationScope';\n\n/** Store the scope & isolation scope for a span, which can the be used when it is finished. */\nfunction setCapturedScopesOnSpan(span, scope, isolationScope) {\n  if (span) {\n    addNonEnumerableProperty(span, ISOLATION_SCOPE_ON_START_SPAN_FIELD, isolationScope);\n    addNonEnumerableProperty(span, SCOPE_ON_START_SPAN_FIELD, scope);\n  }\n}\n\n/**\n * Grabs the scope and isolation scope off a span that were active when the span was started.\n */\nfunction getCapturedScopesOnSpan(span) {\n  return {\n    scope: (span )[SCOPE_ON_START_SPAN_FIELD],\n    isolationScope: (span )[ISOLATION_SCOPE_ON_START_SPAN_FIELD],\n  };\n}\n\nexport { getCapturedScopesOnSpan, setCapturedScopesOnSpan };\n//# sourceMappingURL=utils.js.map\n"],"names":["SCOPE_ON_START_SPAN_FIELD","ISOLATION_SCOPE_ON_START_SPAN_FIELD","setCapturedScopesOnSpan","span","scope","isolationScope","addNonEnumerableProperty","getCapturedScopesOnSpan"],"mappings":"oEAEA,MAAMA,EAA4B,eAC5BC,EAAsC,wBAG5C,SAASC,EAAwBC,EAAMC,EAAOC,EAAgB,CACxDF,IACFG,EAAyBH,EAAMF,EAAqCI,CAAc,EAClFC,EAAyBH,EAAMH,EAA2BI,CAAK,EAEnE,CAKA,SAASG,EAAwBJ,EAAM,CACrC,MAAO,CACL,MAAQA,EAAOH,CAAyB,EACxC,eAAiBG,EAAOF,CAAmC,CAC5D,CACH","x_google_ignoreList":[0]}