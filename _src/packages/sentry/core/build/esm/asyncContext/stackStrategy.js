import{getDefaultCurrentScope as p,getDefaultIsolationScope as S}from"../defaultScopes.js";import{Scope as s}from"../scope.js";import{isThenable as a}from"../utils-hoist/is.js";import{getMainCarrier as h,getSentryCarrier as u}from"../carrier.js";class l{constructor(t,n){let c;t?c=t:c=new s;let o;n?o=n:o=new s,this._stack=[{scope:c}],this._isolationScope=o}withScope(t){const n=this._pushScope();let c;try{c=t(n)}catch(o){throw this._popScope(),o}return a(c)?c.then(o=>(this._popScope(),o),o=>{throw this._popScope(),o}):(this._popScope(),c)}getClient(){return this.getStackTop().client}getScope(){return this.getStackTop().scope}getIsolationScope(){return this._isolationScope}getStackTop(){return this._stack[this._stack.length-1]}_pushScope(){const t=this.getScope().clone();return this._stack.push({client:this.getClient(),scope:t}),t}_popScope(){return this._stack.length<=1?!1:!!this._stack.pop()}}function r(){const e=h(),t=u(e);return t.stack=t.stack||new l(p(),S())}function g(e){return r().withScope(e)}function f(e,t){const n=r();return n.withScope(()=>(n.getStackTop().scope=e,t(e)))}function i(e){return r().withScope(()=>e(r().getIsolationScope()))}function y(){return{withIsolationScope:i,withScope:g,withSetScope:f,withSetIsolationScope:(e,t)=>i(t),getCurrentScope:()=>r().getScope(),getIsolationScope:()=>r().getIsolationScope()}}export{l as AsyncContextStack,y as getStackAsyncContextStrategy};
//# sourceMappingURL=stackStrategy.js.map
