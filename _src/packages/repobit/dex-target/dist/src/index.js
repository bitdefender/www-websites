import{Constants as w}from"../../../dex-constants/dist/src/index.js";import{AdobeDataLayerService as g}from"../../../dex-data-layer/dist/src/adobe-data-layer-service/index.js";import{CdpEvent as b}from"../../../dex-data-layer/dist/src/events/cdp-event/index.js";import"../../../dex-utils/dist/src/index.js";class D{urlParameters;profileUrlParameters;cachedMboxes;_configMbox;controller=new AbortController;_visitorInfo;cdpData;constructor(e){if(this.urlParameters=this.getUrlParameters(),this.profileUrlParameters=this.transfromIntoProfileParameters(this.urlParameters),this.cachedMboxes=new Map,!window.alloyProxy){let r=function(...o){return new Promise((a,i)=>{window.alloyProxy.q.push([a,i,o])})};window.alloyProxy=r,window.alloyProxy.q=[]}new URLSearchParams(window.location.search).get("dotest")==="1"&&this.abort(),this._visitorInfo=new Promise(r=>{this.controller.signal?.aborted&&r({}),window.alloyProxy("getIdentity").then(o=>r(o)).catch(()=>r({})),this.controller.signal?.addEventListener("abort",()=>r({}))}),this.cdpData=e?.pageLoadStartedEvent?this.sendCdpData(e?.pageLoadStartedEvent):Promise.resolve({}),this._configMbox=this.getOffers({mboxNames:"config-mbox"})}getUrlParameters(){const e=new URLSearchParams(window.location.search),t={};return e.forEach((r,o)=>{t[o]=r}),t}get configMbox(){return this._configMbox}get visitorInfo(){return this._visitorInfo}appendVisitorIDsTo(e){return this.controller.signal?.aborted||e.includes("adobe_mc")?Promise.resolve(e):new Promise(t=>{window.alloyProxy("appendIdentityToUrl",{url:e}).then(r=>t(r.url)).catch(()=>t(e)),this.controller.signal?.addEventListener("abort",()=>t(e))})}abort(){this.controller.abort()}async sendCdpData(e){let t={};try{const o=await(await fetch(`${w.PUBLIC_URL_ORIGIN}/cdp/`,{method:"POST",body:JSON.stringify({mcvisid:(await this.visitorInfo)?.identity?.ECID||"",...e.page})})).json();t={auds:o?.auds[0]||""},o.mdl&&(t=o?.mdl.reduce((a,i)=>(a[i.key]=i.value,a),t)),g.push(new b(t))}catch(r){console.warn(r)}return t}transfromIntoProfileParameters(e){return Object.keys(e).reduce((r,o)=>(r[`profile.${o}`]=e[o],r),{})}async getOffers(e){let{mboxNames:t}=e;const r=Array.isArray(t),{parameters:o,profileParameters:a}=e;Array.isArray(t)||(t=[t]);const i=await this.cdpData;if(this.controller.signal?.aborted)return t.length>1?{}:void 0;const c=t.filter(s=>!this.cachedMboxes.has(`${s}_${JSON.stringify(o)}`));if(c.length){const s=window.alloyProxy("sendEvent",{type:"decisioning.propositionFetch",decisionScopes:c,data:{__adobe:{target:Object.assign({},this.urlParameters,this.profileUrlParameters,o||{},a||{},i,this.transfromIntoProfileParameters(i))}},renderDecisions:!0});s.then(n=>{window.alloyProxy("applyPropositions",{propositions:n.propositions,viewName:window.location.href})}),c.forEach(n=>{const l=new Promise((y,m)=>{s.then(d=>{const P=d.propositions.find(u=>u.scope===n)?.items[0].data?.content;y(P)}).catch(d=>{m(d)}),this.controller.signal?.addEventListener("abort",m)});this.cachedMboxes.set(`${n}_${JSON.stringify(o)}_${JSON.stringify(a)}`,l)})}const p=t.map(s=>this.cachedMboxes.get(`${s}_${JSON.stringify(o)}_${JSON.stringify(a)}`)),f=await Promise.allSettled(p),h=t.reduce((s,n,l)=>(s[n]=f[l].status==="fulfilled"?f[l].value:void 0,s),{});return r?h:h[t[0]]}}export{D as default};
//# sourceMappingURL=index.js.map
