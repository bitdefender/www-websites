{"version":3,"file":"index.js","sources":["../../../../../../node_modules/@repobit/dex-target/dist/src/index.js"],"sourcesContent":["import { Constants } from '@repobit/dex-constants';\nimport { AdobeDataLayerService, CdpEvent } from \"@repobit/dex-data-layer\";\nexport default class Target {\n    urlParameters;\n    profileUrlParameters;\n    cachedMboxes;\n    _configMbox;\n    controller = new AbortController();\n    _visitorInfo;\n    cdpData;\n    constructor(config) {\n        this.urlParameters = this.getUrlParameters();\n        this.profileUrlParameters = this.transfromIntoProfileParameters(this.urlParameters);\n        this.cachedMboxes = new Map();\n        if (!window.alloyProxy) {\n            function __alloy(...args) {\n                return new Promise((resolve, reject) => {\n                    window.alloyProxy.q.push([resolve, reject, args]);\n                });\n            }\n            window.alloyProxy = __alloy;\n            window.alloyProxy.q = [];\n        }\n        // check for dotest=1 in URL. If it exists abort all target calls\n        const urlParams = new URLSearchParams(window.location.search);\n        if (urlParams.get('dotest') === '1') {\n            this.abort();\n        }\n        this._visitorInfo = new Promise((resolve) => {\n            if (this.controller.signal?.aborted) {\n                resolve({});\n            }\n            window.alloyProxy(\"getIdentity\").then(result => resolve(result))\n                .catch(() => resolve({}));\n            this.controller.signal?.addEventListener(\"abort\", () => resolve({}));\n        });\n        this.cdpData = config?.pageLoadStartedEvent ? this.sendCdpData(config?.pageLoadStartedEvent) : Promise.resolve({});\n        this._configMbox = this.getOffers({ mboxNames: 'config-mbox' });\n    }\n    /** get an object containing all the url query parameters */\n    getUrlParameters() {\n        const urlParams = new URLSearchParams(window.location.search);\n        const parameters = {};\n        urlParams.forEach((value, key) => {\n            parameters[key] = value;\n        });\n        return parameters;\n    }\n    get configMbox() {\n        return this._configMbox;\n    }\n    get visitorInfo() {\n        return this._visitorInfo;\n    }\n    /** add adobe_mc parameter at the end of the url */\n    appendVisitorIDsTo(url) {\n        if (this.controller.signal?.aborted || url.includes('adobe_mc')) {\n            return Promise.resolve(url);\n        }\n        return new Promise((resolve) => {\n            window.alloyProxy(\"appendIdentityToUrl\", { url }).then(result => resolve(result.url))\n                .catch(() => resolve(url));\n            this.controller.signal?.addEventListener(\"abort\", () => resolve(url));\n        });\n    }\n    /** abort all the Target calls for casese where Target does not load */\n    abort() {\n        this.controller.abort();\n    }\n    async sendCdpData(pageLoadStartedEvent) {\n        let cdpData = {};\n        try {\n            const cdpDataCall = await fetch(`${Constants.PUBLIC_URL_ORIGIN}/cdp/`, {\n                method: 'POST',\n                body: JSON.stringify({\n                    mcvisid: (await this.visitorInfo)?.identity?.ECID || '',\n                    ...pageLoadStartedEvent.page\n                })\n            });\n            /** @type {{auds: string[], mdl: {key: string, value: string}[], ub: any[] vid: string}} */\n            const receivedCdpData = await cdpDataCall.json();\n            cdpData = {\n                auds: receivedCdpData?.auds[0] || ''\n            };\n            if (receivedCdpData.mdl) {\n                cdpData = receivedCdpData?.mdl.reduce((acc, mdlValue) => {\n                    acc[mdlValue.key] = mdlValue.value;\n                    return acc;\n                }, cdpData);\n            }\n            AdobeDataLayerService.push(new CdpEvent(cdpData));\n        }\n        catch (e) {\n            console.warn(e);\n        }\n        return cdpData;\n    }\n    transfromIntoProfileParameters(object) {\n        const profileObject = Object.keys(object).reduce((acc, key) => {\n            acc[`profile.${key}`] = object[key];\n            return acc;\n        }, {});\n        return profileObject;\n    }\n    async getOffers(param) {\n        let { mboxNames } = param;\n        const isInitialyArray = Array.isArray(mboxNames);\n        const { parameters, profileParameters } = param;\n        if (!Array.isArray(mboxNames)) {\n            mboxNames = [mboxNames];\n        }\n        const cdpData = await this.cdpData;\n        if (this.controller.signal?.aborted) {\n            return mboxNames.length > 1 ? {} : undefined;\n        }\n        const notRequestedMboxes = mboxNames.filter(mbox => !this.cachedMboxes.has(`${mbox}_${JSON.stringify(parameters)}`));\n        if (notRequestedMboxes.length) {\n            const notRequestedOffersCall = window.alloyProxy('sendEvent', {\n                type: \"decisioning.propositionFetch\",\n                decisionScopes: notRequestedMboxes,\n                data: {\n                    \"__adobe\": {\n                        \"target\": Object.assign({}, this.urlParameters, this.profileUrlParameters, parameters ? parameters : {}, profileParameters ? profileParameters : {}, cdpData, this.transfromIntoProfileParameters(cdpData))\n                    }\n                },\n                renderDecisions: true\n            });\n            notRequestedOffersCall.then(result => {\n                window.alloyProxy('applyPropositions', {\n                    \"propositions\": result.propositions,\n                    \"viewName\": window.location.href\n                });\n            });\n            notRequestedMboxes.forEach(mbox => {\n                const receivedMboxOfferCall = new Promise((resolve, reject) => {\n                    notRequestedOffersCall.then(result => {\n                        const mboxResult = result.propositions.find((offer) => offer.scope === mbox)?.items[0].data?.content;\n                        resolve(mboxResult);\n                    }).catch(e => {\n                        reject(e);\n                    });\n                    this.controller.signal?.addEventListener(\"abort\", reject);\n                });\n                this.cachedMboxes.set(`${mbox}_${JSON.stringify(parameters)}_${JSON.stringify(profileParameters)}`, receivedMboxOfferCall);\n            });\n        }\n        const mboxesPromises = mboxNames.map(mboxName => this.cachedMboxes.get(`${mboxName}_${JSON.stringify(parameters)}_${JSON.stringify(profileParameters)}`));\n        const resolvedMboxes = await Promise.allSettled(mboxesPromises);\n        const offersResult = mboxNames.reduce((acc, mboxName, index) => {\n            acc[mboxName] = resolvedMboxes[index].status === 'fulfilled' ? resolvedMboxes[index].value : undefined;\n            return acc;\n        }, {});\n        return isInitialyArray ? offersResult : offersResult[mboxNames[0]];\n    }\n}\n//# sourceMappingURL=index.js.map"],"names":["Target","config","__alloy","args","resolve","reject","result","urlParams","parameters","value","key","url","pageLoadStartedEvent","cdpData","receivedCdpData","Constants","acc","mdlValue","AdobeDataLayerService","CdpEvent","e","object","param","mboxNames","isInitialyArray","profileParameters","notRequestedMboxes","mbox","notRequestedOffersCall","receivedMboxOfferCall","mboxResult","offer","mboxesPromises","mboxName","resolvedMboxes","offersResult","index"],"mappings":"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","x_google_ignoreList":[0]}