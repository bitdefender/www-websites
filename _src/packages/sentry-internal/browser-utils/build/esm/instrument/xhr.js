import{WINDOW as X}from"../types.js";import{addHandler as I,maybeInstrument as q,triggerHandlers as w}from"../../../../../sentry/core/build/esm/utils-hoist/instrument/handlers.js";import{timestampInSeconds as p}from"../../../../../sentry/core/build/esm/utils-hoist/time.js";import{isString as d}from"../../../../../sentry/core/build/esm/utils-hoist/is.js";const u="__sentry_xhr_v3__";function L(e){const a="xhr";I(a,e),q(a,D)}function D(){if(!X.XMLHttpRequest)return;const e=XMLHttpRequest.prototype;e.open=new Proxy(e.open,{apply(a,t,n){const s=new Error,y=p()*1e3,f=d(n[0])?n[0].toUpperCase():void 0,m=E(n[1]);if(!f||!m)return a.apply(t,n);t[u]={method:f,url:m,request_headers:{}},f==="POST"&&m.match(/sentry_key/)&&(t.__sentry_own_request__=!0);const _=()=>{const o=t[u];if(o&&t.readyState===4){try{o.status_code=t.status}catch{}const r={endTimestamp:p()*1e3,startTimestamp:y,xhr:t,virtualError:s};w("xhr",r)}};return"onreadystatechange"in t&&typeof t.onreadystatechange=="function"?t.onreadystatechange=new Proxy(t.onreadystatechange,{apply(o,r,c){return _(),o.apply(r,c)}}):t.addEventListener("readystatechange",_),t.setRequestHeader=new Proxy(t.setRequestHeader,{apply(o,r,c){const[l,i]=c,H=r[u];return H&&d(l)&&d(i)&&(H.request_headers[l.toLowerCase()]=i),o.apply(r,c)}}),a.apply(t,n)}}),e.send=new Proxy(e.send,{apply(a,t,n){const s=t[u];if(!s)return a.apply(t,n);n[0]!==void 0&&(s.body=n[0]);const y={startTimestamp:p()*1e3,xhr:t};return w("xhr",y),a.apply(t,n)}})}function E(e){if(d(e))return e;try{return e.toString()}catch{}}export{u as SENTRY_XHR_DATA_KEY,L as addXhrInstrumentationHandler,D as instrumentXHR};
//# sourceMappingURL=xhr.js.map
