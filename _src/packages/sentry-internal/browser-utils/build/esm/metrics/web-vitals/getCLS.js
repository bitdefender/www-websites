import{bindReporter as p}from"./lib/bindReporter.js";import{initMetric as u}from"./lib/initMetric.js";import{observe as h}from"./lib/observe.js";import{onHidden as d}from"./lib/onHidden.js";import{runOnce as T}from"./lib/runOnce.js";import{onFCP as v}from"./onFCP.js";const C=[.1,.25],k=(l,c={})=>{v(T(()=>{const s=u("CLS",0);let r,o=0,e=[];const i=f=>{f.forEach(t=>{if(!t.hadRecentInput){const m=e[0],a=e[e.length-1];o&&m&&a&&t.startTime-a.startTime<1e3&&t.startTime-m.startTime<5e3?(o+=t.value,e.push(t)):(o=t.value,e=[t])}}),o>s.value&&(s.value=o,s.entries=e,r())},n=h("layout-shift",i);n&&(r=p(l,s,C,c.reportAllChanges),d(()=>{i(n.takeRecords()),r(!0)}),setTimeout(r,0))}))};export{C as CLSThresholds,k as onCLS};
//# sourceMappingURL=getCLS.js.map
