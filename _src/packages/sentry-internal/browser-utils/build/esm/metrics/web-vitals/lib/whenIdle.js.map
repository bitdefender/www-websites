{"version":3,"file":"whenIdle.js","sources":["../../../../../../../../../node_modules/@sentry-internal/browser-utils/build/esm/metrics/web-vitals/lib/whenIdle.js"],"sourcesContent":["import { WINDOW } from '../../../types.js';\nimport { onHidden } from './onHidden.js';\nimport { runOnce } from './runOnce.js';\n\n/*\n * Copyright 2024 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\n/**\n * Runs the passed callback during the next idle period, or immediately\n * if the browser's visibility state is (or becomes) hidden.\n */\nconst whenIdle = (cb) => {\n  const rIC = WINDOW.requestIdleCallback || WINDOW.setTimeout;\n\n  let handle = -1;\n  // eslint-disable-next-line no-param-reassign\n  cb = runOnce(cb) ;\n  // If the document is hidden, run the callback immediately, otherwise\n  // race an idle callback with the next `visibilitychange` event.\n  if (WINDOW.document?.visibilityState === 'hidden') {\n    cb();\n  } else {\n    handle = rIC(cb);\n    onHidden(cb);\n  }\n  return handle;\n};\n\nexport { whenIdle };\n//# sourceMappingURL=whenIdle.js.map\n"],"names":["whenIdle","cb","rIC","WINDOW","handle","runOnce","onHidden"],"mappings":"2HAyBK,MAACA,EAAYC,GAAO,CACvB,MAAMC,EAAMC,EAAO,qBAAuBA,EAAO,WAEjD,IAAIC,EAAS,GAEb,OAAAH,EAAKI,EAAQJ,CAAE,EAGXE,EAAO,UAAU,kBAAoB,SACvCF,EAAI,GAEJG,EAASF,EAAID,CAAE,EACfK,EAASL,CAAE,GAENG,CACT","x_google_ignoreList":[0]}