{"version":3,"file":"utils.js","sources":["../../../../../../../node_modules/@sentry-internal/browser-utils/build/esm/metrics/utils.js"],"sourcesContent":["import { spanToJSON, withActiveSpan, startInactiveSpan, getClient, getCurrentScope } from '@sentry/core';\nimport { WINDOW } from '../types.js';\n\n/**\n * Checks if a given value is a valid measurement value.\n */\nfunction isMeasurementValue(value) {\n  return typeof value === 'number' && isFinite(value);\n}\n\n/**\n * Helper function to start child on transactions. This function will make sure that the transaction will\n * use the start timestamp of the created child span if it is earlier than the transactions actual\n * start timestamp.\n */\nfunction startAndEndSpan(\n  parentSpan,\n  startTimeInSeconds,\n  endTime,\n  { ...ctx },\n) {\n  const parentStartTime = spanToJSON(parentSpan).start_timestamp;\n  if (parentStartTime && parentStartTime > startTimeInSeconds) {\n    // We can only do this for SentrySpans...\n    if (typeof (parentSpan ).updateStartTime === 'function') {\n      (parentSpan ).updateStartTime(startTimeInSeconds);\n    }\n  }\n\n  // The return value only exists for tests\n  return withActiveSpan(parentSpan, () => {\n    const span = startInactiveSpan({\n      startTime: startTimeInSeconds,\n      ...ctx,\n    });\n\n    if (span) {\n      span.end(endTime);\n    }\n\n    return span;\n  });\n}\n\n/**\n * Starts an inactive, standalone span used to send web vital values to Sentry.\n * DO NOT use this for arbitrary spans, as these spans require special handling\n * during ingestion to extract metrics.\n *\n * This function adds a bunch of attributes and data to the span that's shared\n * by all web vital standalone spans. However, you need to take care of adding\n * the actual web vital value as an event to the span. Also, you need to assign\n * a transaction name and some other values that are specific to the web vital.\n *\n * Ultimately, you also need to take care of ending the span to send it off.\n *\n * @param options\n *\n * @returns an inactive, standalone and NOT YET ended span\n */\nfunction startStandaloneWebVitalSpan(options) {\n  const client = getClient();\n  if (!client) {\n    return;\n  }\n\n  const { name, transaction, attributes: passedAttributes, startTime } = options;\n\n  const { release, environment, sendDefaultPii } = client.getOptions();\n  // We need to get the replay, user, and activeTransaction from the current scope\n  // so that we can associate replay id, profile id, and a user display to the span\n  const replay = client.getIntegrationByName('Replay');\n  const replayId = replay?.getReplayId();\n\n  const scope = getCurrentScope();\n\n  const user = scope.getUser();\n  const userDisplay = user !== undefined ? user.email || user.id || user.ip_address : undefined;\n\n  let profileId;\n  try {\n    // @ts-expect-error skip optional chaining to save bundle size with try catch\n    profileId = scope.getScopeData().contexts.profile.profile_id;\n  } catch {\n    // do nothing\n  }\n\n  const attributes = {\n    release,\n    environment,\n\n    user: userDisplay || undefined,\n    profile_id: profileId || undefined,\n    replay_id: replayId || undefined,\n\n    transaction,\n\n    // Web vital score calculation relies on the user agent to account for different\n    // browsers setting different thresholds for what is considered a good/meh/bad value.\n    // For example: Chrome vs. Chrome Mobile\n    'user_agent.original': WINDOW.navigator?.userAgent,\n\n    // This tells Sentry to infer the IP address from the request\n    'client.address': sendDefaultPii ? '{{auto}}' : undefined,\n\n    ...passedAttributes,\n  };\n\n  return startInactiveSpan({\n    name,\n    attributes,\n    startTime,\n    experimental: {\n      standalone: true,\n    },\n  });\n}\n\n/** Get the browser performance API. */\nfunction getBrowserPerformanceAPI() {\n  // @ts-expect-error we want to make sure all of these are available, even if TS is sure they are\n  return WINDOW.addEventListener && WINDOW.performance;\n}\n\n/**\n * Converts from milliseconds to seconds\n * @param time time in ms\n */\nfunction msToSec(time) {\n  return time / 1000;\n}\n\n/**\n * Converts ALPN protocol ids to name and version.\n *\n * (https://www.iana.org/assignments/tls-extensiontype-values/tls-extensiontype-values.xhtml#alpn-protocol-ids)\n * @param nextHopProtocol PerformanceResourceTiming.nextHopProtocol\n */\nfunction extractNetworkProtocol(nextHopProtocol) {\n  let name = 'unknown';\n  let version = 'unknown';\n  let _name = '';\n  for (const char of nextHopProtocol) {\n    // http/1.1 etc.\n    if (char === '/') {\n      [name, version] = nextHopProtocol.split('/') ;\n      break;\n    }\n    // h2, h3 etc.\n    if (!isNaN(Number(char))) {\n      name = _name === 'h' ? 'http' : _name;\n      version = nextHopProtocol.split(_name)[1] ;\n      break;\n    }\n    _name += char;\n  }\n  if (_name === nextHopProtocol) {\n    // webrtc, ftp, etc.\n    name = _name;\n  }\n  return { name, version };\n}\n\nexport { extractNetworkProtocol, getBrowserPerformanceAPI, isMeasurementValue, msToSec, startAndEndSpan, startStandaloneWebVitalSpan };\n//# sourceMappingURL=utils.js.map\n"],"names":["isMeasurementValue","value","startAndEndSpan","parentSpan","startTimeInSeconds","endTime","ctx","parentStartTime","spanToJSON","withActiveSpan","span","startInactiveSpan","startStandaloneWebVitalSpan","options","client","getClient","name","transaction","passedAttributes","startTime","release","environment","sendDefaultPii","replayId","scope","getCurrentScope","user","userDisplay","profileId","attributes","WINDOW","getBrowserPerformanceAPI","msToSec","time","extractNetworkProtocol","nextHopProtocol","version","_name","char"],"mappings":"+UAMA,SAASA,EAAmBC,EAAO,CACjC,OAAO,OAAOA,GAAU,UAAY,SAASA,CAAK,CACpD,CAOA,SAASC,EACPC,EACAC,EACAC,EACA,CAAE,GAAGC,CAAK,EACV,CACA,MAAMC,EAAkBC,EAAWL,CAAU,EAAE,gBAC/C,OAAII,GAAmBA,EAAkBH,GAEnC,OAAQD,EAAa,iBAAoB,YAC1CA,EAAa,gBAAgBC,CAAkB,EAK7CK,EAAeN,EAAY,IAAM,CACtC,MAAMO,EAAOC,EAAkB,CAC7B,UAAWP,EACX,GAAGE,CACT,CAAK,EAED,OAAII,GACFA,EAAK,IAAIL,CAAO,EAGXK,CACX,CAAG,CACH,CAkBA,SAASE,EAA4BC,EAAS,CAC5C,MAAMC,EAASC,EAAW,EAC1B,GAAI,CAACD,EACH,OAGF,KAAM,CAAE,KAAAE,EAAM,YAAAC,EAAa,WAAYC,EAAkB,UAAAC,CAAS,EAAKN,EAEjE,CAAE,QAAAO,EAAS,YAAAC,EAAa,eAAAC,CAAc,EAAKR,EAAO,WAAY,EAI9DS,EADST,EAAO,qBAAqB,QAAQ,GAC1B,YAAa,EAEhCU,EAAQC,EAAiB,EAEzBC,EAAOF,EAAM,QAAS,EACtBG,EAAcD,IAAS,OAAYA,EAAK,OAASA,EAAK,IAAMA,EAAK,WAAa,OAEpF,IAAIE,EACJ,GAAI,CAEFA,EAAYJ,EAAM,aAAc,EAAC,SAAS,QAAQ,UACtD,MAAU,CAEV,CAEE,MAAMK,EAAa,CACjB,QAAAT,EACA,YAAAC,EAEA,KAAMM,GAAe,OACrB,WAAYC,GAAa,OACzB,UAAWL,GAAY,OAEvB,YAAAN,EAKA,sBAAuBa,EAAO,WAAW,UAGzC,iBAAkBR,EAAiB,WAAa,OAEhD,GAAGJ,CACJ,EAED,OAAOP,EAAkB,CACvB,KAAAK,EACA,WAAAa,EACA,UAAAV,EACA,aAAc,CACZ,WAAY,EACb,CACL,CAAG,CACH,CAGA,SAASY,GAA2B,CAElC,OAAOD,EAAO,kBAAoBA,EAAO,WAC3C,CAMA,SAASE,EAAQC,EAAM,CACrB,OAAOA,EAAO,GAChB,CAQA,SAASC,EAAuBC,EAAiB,CAC/C,IAAInB,EAAO,UACPoB,EAAU,UACVC,EAAQ,GACZ,UAAWC,KAAQH,EAAiB,CAElC,GAAIG,IAAS,IAAK,CAChB,CAACtB,EAAMoB,CAAO,EAAID,EAAgB,MAAM,GAAG,EAC3C,KACN,CAEI,GAAI,CAAC,MAAM,OAAOG,CAAI,CAAC,EAAG,CACxBtB,EAAOqB,IAAU,IAAM,OAASA,EAChCD,EAAUD,EAAgB,MAAME,CAAK,EAAE,CAAC,EACxC,KACN,CACIA,GAASC,CACb,CACE,OAAID,IAAUF,IAEZnB,EAAOqB,GAEF,CAAE,KAAArB,EAAM,QAAAoB,CAAS,CAC1B","x_google_ignoreList":[0]}