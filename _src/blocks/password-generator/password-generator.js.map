{"version":3,"file":"password-generator.js","sources":["../../../src/blocks/password-generator/password-generator.js"],"sourcesContent":["import { decorateIcons } from '../../scripts/lib-franklin.js';\nimport passwordService from '../../scripts/utils/pass_service.js';\n\n/**\n * Finds a div element whose first paragraph contains the specified search text.\n * When found, removes that paragraph and returns the parent div.\n *\n * @param {HTMLElement} block - The container to search within\n * @param {string} searchText - The text to search for in the first paragraph\n * @returns {HTMLElement|null} - The div containing the specified text, or null if not found\n */\nfunction getDivBasedOnFirstParagraph(block, searchText) {\n  const allDivs = Array.from(block.querySelectorAll('div'));\n\n  const targetDiv = allDivs.find((div) => {\n    const firstParagraph = div.querySelector('p');\n    if (firstParagraph?.textContent.includes(searchText)) {\n      firstParagraph.remove();\n      return true;\n    }\n    return false;\n  });\n\n  return targetDiv || null;\n}\n\nfunction updatePasswordStrength(password, strengthElement) {\n  // Get the strength span elements\n  const strongSpan = strengthElement.querySelector('#password-result');\n  // Check if the password is strong enough using the password service\n  const thingIs = passwordService.ratePasswordFromPasswordInfo(password);\n  const rating = passwordService.fromRating(thingIs);\n  // Update the strength indicator\n  strongSpan.className = '';\n  switch (rating) {\n    case passwordService.SecurityReportConstants.passwordStrengthWeak:\n      strongSpan.textContent = passwordService.SecurityReportConstants.passwordStrengthWeak;\n      strongSpan.classList.add('weak');\n      break;\n    case passwordService.SecurityReportConstants.passwordStrengthPoor:\n      strongSpan.textContent = passwordService.SecurityReportConstants.passwordStrengthPoor;\n      strongSpan.classList.add('poor');\n      break;\n    case passwordService.SecurityReportConstants.passwordStrengthGood:\n      strongSpan.textContent = passwordService.SecurityReportConstants.passwordStrengthGood;\n      strongSpan.classList.add('good');\n      break;\n    default:\n      strongSpan.textContent = passwordService.SecurityReportConstants.passwordStrengthStrong;\n      strongSpan.classList.add('strong');\n  }\n}\n\nfunction createSharePopup(element) {\n  const sharePopup = document.createElement('div');\n  sharePopup.classList.add('share-popup');\n  element.insertAdjacentElement('beforeend', sharePopup);\n  return sharePopup;\n}\n\nfunction copyToClipboard(block, caller, popupText, password) {\n  const copyText = password;\n\n  // Copy the text inside the text field\n  navigator.clipboard.writeText(copyText);\n  const buttonsContainer = block.querySelector('.button-container');\n  if (buttonsContainer) {\n    const sharePopup = block.querySelector('.share-popup') || createSharePopup(caller);\n    sharePopup.textContent = `${popupText}`;\n    sharePopup.style = 'opacity: 1';\n    setTimeout(() => {\n      sharePopup.style = 'opacity:0;';\n    }, 2000);\n  }\n}\n\n// Function to adjust font size based on password length and screen width\nfunction adjustFontSize(input, password) {\n  if (password.length > 25 && window.innerWidth < 991) {\n    input.style.fontSize = 'calc(100% - 4px)';\n  } else {\n    input.style.fontSize = ''; // Reset to default\n  }\n}\n\nexport default function decorate(block) {\n  const { clipboardText, selectAtLeastOneCheckboxText } = block.closest('.section').dataset;\n\n  // const breadcrumb = createTag('div', { class: 'breadcrumb' });\n  // block.closest('.section').prepend(breadcrumb);\n\n  const privacyPolicyRow = getDivBasedOnFirstParagraph(block, '<privacy-policy>');\n  privacyPolicyRow.classList.add('privacy-policy');\n\n  const passwordGeneratorRow = getDivBasedOnFirstParagraph(block, '<password-generator>');\n  passwordGeneratorRow.classList.add('password-generator-grid');\n  const passwordGeneratorColumns = [...passwordGeneratorRow.children];\n  // eslint-disable-next-line no-unused-vars\n  const [columnText, button] = passwordGeneratorColumns;\n  const [passwordLengthText, checkboxList, passwordStrengthText] = [...columnText.children];\n  columnText.remove();\n  // Process the password strength text to extract the strong and weak values\n\n  // expected output is 'Password strength strong-weak-text Strong, Weak\n  // parse the paragraph into my desired outcome\n  const strengthMatch = passwordStrengthText.innerHTML.split('strong-weak-text');\n  const [weakText, poorText, goodText, strongText] = strengthMatch[1].split(',');\n  passwordService.updatePasswordStrengthTexts(weakText, poorText, goodText, strongText);\n\n  passwordStrengthText.innerHTML = `${strengthMatch[0]} <span id='password-result' class='strong'>${strongText}</span>`;\n  const formElement = document.createElement('form');\n  formElement.classList.add('password-generator--form');\n  formElement.innerHTML = `\n    <div class=\"password-generator--input-container\">\n      <input class=\"password-generator--input\" readonly>\n      <input type=\"submit\" class=\"password-generator--input-retry\">\n    </div>\n    <div class=\"password-generator--parameters\">\n        <div class=\"range-slider-container\">\n          <p>${passwordLengthText.innerText}</p>\n          <input name=\"range\" type=\"range\" min=\"4\" max=\"32\" value=\"16\" class=\"slider\" id=\"password-range\">\n          <label for=\"range\" id=\"range-label\"></label>\n        </div>\n        <div class=\"form-checkboxes\">\n          <div>\n            <input type=\"checkbox\" id=\"uppercase\" name=\"uppercase\" checked />  \n            <label for=\"uppercase\">${checkboxList.children[0].textContent}</label>\n          </div>\n          <div>\n            <input type=\"checkbox\" id=\"lowercase\" name=\"lowercase\" checked />  \n            <label for=\"lowercase\">${checkboxList.children[1].textContent}</label>\n          </div>\n          <div>\n            <input type=\"checkbox\" id=\"numbers\" name=\"numbers\" checked />  \n            <label for=\"numbers\">${checkboxList.children[2].textContent}</label>\n          </div>\n          <div>\n            <input type=\"checkbox\" id=\"special\" name=\"special\" checked />  \n            <label for=\"special\">${checkboxList.children[3].textContent}</label>\n          </div>\n        </div>\n        <p class=\"password-strength\">${passwordStrengthText.innerHTML}<p>\n    </div>\n  `;\n\n  passwordGeneratorRow.prepend(formElement);\n  decorateIcons(block);\n\n  const passwordInput = block.querySelector('.password-generator--input');\n  const generateButton = block.querySelector('.password-generator--input-retry');\n  const copyPassword = block.querySelector(\"[href='#copy-link'], [href='#copy-password']\");\n  copyPassword.id = 'copy-password';\n  const slider = block.querySelector('#password-range');\n  const rangeLabel = block.querySelector('#range-label');\n  const uppercaseCheckbox = block.querySelector('#uppercase');\n  const lowercaseCheckbox = block.querySelector('#lowercase');\n  const numbersCheckbox = block.querySelector('#numbers');\n  const specialCheckbox = block.querySelector('#special');\n  const strengthElement = block.querySelector('.password-strength');\n\n  // Display the default slider value\n  rangeLabel.innerHTML = slider.value;\n\n  // Update the current slider value (each time you drag the slider handle)\n  slider.oninput = function updateRangeLabel() {\n    rangeLabel.innerHTML = this.value;\n  };\n  let password = '';\n  function generatePassword() {\n    const settings = {\n      passwordLength: parseInt(slider.value, 10),\n      includeLettersUppercase: uppercaseCheckbox.checked,\n      includeLettersLowercase: lowercaseCheckbox.checked,\n      includeNumbers: numbersCheckbox.checked,\n      includeSpecialChars: specialCheckbox.checked,\n      passwordLettersUppercase: 'ABCDEFGHIJKLMNOPQRSTUVWXYZ',\n      passwordLettersLowercase: 'abcdefghijklmnopqrstuvwxyz',\n      passwordNumbers: '0123456789',\n      passwordSpecialChars: '!@#$%^&*()_+-=[]{}|;:,.<>?',\n    };\n\n    // Ensure at least one character type is selected\n    if (!settings.includeLettersUppercase\n        && !settings.includeLettersLowercase\n        && !settings.includeNumbers\n        && !settings.includeSpecialChars) {\n      if (!block.querySelector('.danger-selection')) {\n        const notification = document.createElement('p');\n        notification.textContent = selectAtLeastOneCheckboxText;\n        notification.classList.add('danger-selection');\n        block.prepend(notification);\n        setTimeout(() => {\n          notification.remove();\n        }, 2000);\n      }\n      return;\n    }\n\n    // Generate the password\n    password = passwordService.generateWithSettings(settings);\n\n    // Display the password\n    passwordInput.value = password;\n\n    // Adjust font size based on password length\n    adjustFontSize(passwordInput, password);\n\n    // Update the password strength indicator\n    updatePasswordStrength(password, strengthElement);\n  }\n\n  generateButton.addEventListener('click', (e) => {\n    e.preventDefault();\n    generatePassword();\n  });\n\n  // Generate a password on page load\n  generatePassword();\n\n  copyPassword.addEventListener('click', (e) => {\n    e.preventDefault();\n    copyToClipboard(block, copyPassword, clipboardText, password);\n  });\n\n  // Update password when settings change\n  [slider, uppercaseCheckbox, lowercaseCheckbox, numbersCheckbox, specialCheckbox].forEach(\n    (element) => element.addEventListener('change', generatePassword),\n  );\n}\n"],"names":["passwordService"],"mappings":"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"}