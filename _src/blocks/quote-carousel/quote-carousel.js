import{createTag as c}from"../../scripts/utils/utils.js";import{decorateIcons as b}from"../../scripts/lib-franklin.js";const u="carousel-slide-",f="carousel-control-";function h(t,e){const r=Array.from(t.querySelectorAll("p")).find(i=>!i.querySelector("strong, em")&&i.innerHTML!==""),o=t.querySelector("p > strong"),s=t.querySelector("p > em");return r?c("div",{class:"slide",id:`${u}${e}`,role:"tabpanel","aria-hidden":"true","aria-describedby":`${f}${e}`,tabindex:"-1"},`<div class="quote">
        <span class="icon icon-dark-blue-quote"/>
    </div>
    <div class="quote-content">
        <h4>${r?.innerHTML}</h4>
        <h5>${o?.textContent}</h5>
        <p>${s?.innerHTML}</p>
    </div>`):null}function v(t){return[...t.children].findIndex(e=>e.classList.contains("active"))}function p(t,e){const n=t.querySelector(".slides-dots"),r=n.querySelector(".active");if(r){r.classList.remove("active");const s=r.querySelector("button");s.removeAttribute("aria-selected"),s.setAttribute("tabindex","-1")}const o=n.children[e];if(o){o.classList.add("active");const s=o.querySelector("button");s.setAttribute("aria-selected","true"),s.setAttribute("tabindex","0")}}function S(t,e){const n=e.querySelector(".slides"),r=v(n);n.children[r].classList.remove("active"),n.children[t].classList.add("active");const o=-t*100;n.style.transform=`translateX( ${o}% )`,[...n.children].forEach((s,i)=>{i===t?(s.removeAttribute("tabindex"),s.setAttribute("aria-hidden","false")):(s.setAttribute("tabindex","-1"),s.setAttribute("aria-hidden","true"))}),p(e,t)}function m(t,e){[...t.children].forEach((n,r)=>{n.addEventListener("click",o=>{o.preventDefault(),S(r,e.parentElement)})})}function y(t){const e=c("ul",{class:"slides-dots",role:"tablist"}),n=t.children.length;return[...t.children].forEach((r,o)=>{const s=o+1,i=c("button",{id:`${f}${s}`,class:"dot",role:"tab",type:"button",tabindex:"-1","aria-controls":`${u}${s}`,"aria-label":`${s} of ${n}`},`${s}`),a=c("li",{role:"presentation"},i);e.append(a)}),e}async function A(t){const e=c("div",{class:"slides"});let n=1;[...t.children].forEach(l=>{const d=h(l,n);d&&(n+=1,e.append(d))}),e.children[0].classList.add("active");const r=y(e),o=[r],s=t.querySelector(".button-container");if(s){const l=c("div",{class:"slides-action"});l.append(s),o.push(l)}const i=c("div",{class:"slides-controls"},o),a=c("div",{class:"slides-container"},[e,i]);t.replaceChildren(a),p(t,0),m(r,e),b(t)}export{A as default};
//# sourceMappingURL=quote-carousel.js.map
