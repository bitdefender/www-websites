{"version":3,"file":"form.js","sources":["../../../src/blocks/form/form.js"],"sourcesContent":["import { debounce } from '@repobit/dex-utils';\n\nasync function fetchData(url) {\n  const resp = await fetch(url);\n  const json = await resp.json();\n  return json.data;\n}\n\n/**\n *\n * @param {String} email\n * @returns {Boolean} wether the email passed is valid or not\n */\nconst validateEmail = (email) => {\n  const re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n  return re.test(email.toLowerCase());\n};\n\n/**\n *\n * @param {HTMLInputElement} inputElement\n * @returns {Boolean} validation status of the field\n */\nconst checkInputValue = (inputElement) => {\n  // real time field validation for the email field (For DIP only)\n  switch (inputElement.type) {\n    case 'email':\n      // validate the email inputs using the validation function if there are error fields\n      if (!validateEmail(inputElement.value)) {\n        return false;\n      }\n\n      break;\n    case 'checkbox':\n      if (!inputElement.checked && inputElement.required) {\n        return false;\n      }\n\n      break;\n    default:\n      break;\n  }\n\n  return true;\n};\n\n/**\n *\n * @param {HTMLInputElement} inputElement\n */\nconst displayInputError = (inputElement) => {\n  const inputElementError = inputElement.parentElement.querySelector('.input-error-field');\n  if (inputElementError) {\n    inputElementError.classList.remove('global-display-none');\n  }\n};\n\n/**\n *\n * @param {HTMLInputElement} inputElement\n */\nconst hideInputError = (inputElement) => {\n  const inputElementError = inputElement.parentElement.querySelector('.input-error-field');\n  if (inputElementError) {\n    inputElementError.classList.add('global-display-none');\n  }\n};\n\n/**\n *\n * @param {HTMLFormElement} form\n * set the onChange function for all the form inputs\n */\nfunction checkFormValues(form) {\n  const submitButton = form.querySelector('input[type=\"submit\"]');\n\n  // Targeting the anchor inside .button-container\n  const allInputFields = form.querySelectorAll('input:not([type=\"hidden\"])');\n  let disabledStatus = false;\n  allInputFields.forEach((inputField) => {\n    if (!disabledStatus && !checkInputValue(inputField)) {\n      disabledStatus = true;\n    }\n  });\n\n  submitButton.disabled = disabledStatus;\n}\n\nasync function handleSubmit(e, handler) {\n  e.preventDefault();\n  try {\n    const mod = await import(handler);\n    if (mod.default) await mod.default(e);\n  } catch (error) {\n    // eslint-disable-next-line no-console\n    console.log('failed to load module for lib-identity-exposed-onsubmit', error);\n  }\n}\n\n/**\n *\n * @param {HTMLInputElement} input the input to be adde inside the div wrapper\n * @param {HTMLDivElement} newDivParent the div wrapper to hold the input\n */\nconst wrapInputInsideDiv = (input, newDivParent) => {\n  const label = input.nextElementSibling;\n\n  // if the input has a label, also add it inside the wrapper\n  if (label && label.tagName === 'LABEL') {\n    input.before(newDivParent);\n    newDivParent.append(input, label);\n  } else {\n    input.after(newDivParent);\n    newDivParent.append(input);\n  }\n};\n\n/**\n *\n * @param {HTMLInputElement} input\n * @param {HTMLFormElement} form\n * add the validations which get triggered whenever an input is filled with data\n */\nconst addInputValidation = (input, form) => {\n  if (input.dataset.containsErrorField && checkInputValue(input)) {\n    hideInputError(input);\n  } else if (input.dataset.containsErrorField) {\n    displayInputError(input);\n  }\n\n  checkFormValues(form);\n};\n\n/**\n *\n * @param {string} formURL url to form html\n * @returns {Promise<HTMLFormElement>} returns the form\n */\nexport async function createForm(formURL) {\n  const { pathname, search } = new URL(formURL);\n  const data = await fetchData(`${pathname}${search}`);\n  const form = document.createElement('form');\n\n  form.setAttribute('method', 'post');\n\n  data.forEach((field, index) => {\n    const input = document.createElement('input');\n    input.id = `form-${index}-${field.Field}`;\n    input.setAttribute('type', field.Type);\n    input.setAttribute('name', field.Field);\n    input.setAttribute('placeholder', field.Default);\n    input.setAttribute('value', field.Value);\n    input.setAttribute('data-contains-error-field', Boolean(field.Error));\n\n    // add event listeners to the fields\n    input.addEventListener('input', debounce(() => addInputValidation(input, form), 100, false));\n\n    if (field.Required && field.Required.toLowerCase() === 'true') {\n      input.setAttribute('required', '');\n      input.setAttribute('aria-required', 'true');\n    }\n\n    form.append(input);\n\n    // Only create a label if the field.Label is not null\n    if (field.Label) {\n      const label = document.createElement('label');\n      label.setAttribute('for', input.id);\n      label.textContent = field.Label;\n      form.append(label);\n    }\n\n    if (field.Type === 'submit') {\n      input.classList.add('disabled');\n      input.disabled = true;\n    }\n\n    if (field.Field === 'handler') {\n      form.addEventListener('submit', (e) => handleSubmit(e, field.Value));\n    }\n\n    if (field.Type === 'checkbox') {\n      const newDivWrapper = document.createElement('div');\n      newDivWrapper.classList.add('checkbox');\n\n      wrapInputInsideDiv(input, newDivWrapper);\n    }\n\n    if (field.Error) {\n      const newDivWrapper = document.createElement('div');\n      newDivWrapper.classList.add('input-container-with-error');\n\n      // add the error field\n      const errorField = document.createElement('p');\n      errorField.classList.add('input-error-field', 'global-display-none');\n      errorField.textContent = field.Error;\n      newDivWrapper.appendChild(errorField);\n      input.classList.add('input-with-error-field');\n\n      wrapInputInsideDiv(input, newDivWrapper);\n    }\n  });\n  return form;\n}\n\nexport default async function decorate(block) {\n  const form = await createForm(block.textContent.trim());\n  if (form) block.append(form);\n}\n"],"names":["fetchData","url","validateEmail","email","checkInputValue","inputElement","displayInputError","inputElementError","hideInputError","checkFormValues","form","submitButton","allInputFields","disabledStatus","inputField","handleSubmit","handler","mod","error","wrapInputInsideDiv","input","newDivParent","label","addInputValidation","createForm","formURL","pathname","search","data","field","index","debounce","e","newDivWrapper","errorField","decorate","block"],"mappings":"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"}