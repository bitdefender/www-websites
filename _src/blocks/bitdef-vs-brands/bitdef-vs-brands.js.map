{"version":3,"file":"bitdef-vs-brands.js","sources":["../../../src/blocks/bitdef-vs-brands/bitdef-vs-brands.js"],"sourcesContent":["// eslint-disable-next-line no-unused-vars\nexport default function decorate(block) {\n  const tables = block.querySelectorAll('.bitdef-vs-brands-wrapper table');\n\n  tables.forEach((table) => {\n    const parentDiv = table.closest('div');\n\n    parentDiv.classList.add('table-container');\n\n    table.querySelectorAll('tr').forEach((row, rowIndex) => {\n      row.classList.add(`row-${rowIndex}`);\n\n      if (rowIndex >= 3 && rowIndex <= 5) {\n        if (rowIndex === 3) row.classList.add('blue-background');\n        else row.classList.add('grey-background');\n        row.querySelectorAll('td').forEach((td) => {\n          td.classList.add('same-line');\n        });\n      }\n\n      row.querySelectorAll('td').forEach((cell, cellIndex) => {\n        cell.classList.add(`column-${cellIndex}`);\n      });\n    });\n  });\n  // Select the first div within the .bitdef-vs-brands container\n  const firstDiv = block.querySelector('.bitdef-vs-brands > div');\n\n  // Add class 'heading-container' to the first div\n  firstDiv.classList.add('heading-container');\n\n  // Create a new container div\n  const newContainerDiv = document.createElement('div');\n  newContainerDiv.classList.add('new-container');\n\n  // Move the second and third divs into the new container\n  while (firstDiv.nextSibling) {\n    newContainerDiv.appendChild(firstDiv.nextSibling);\n  }\n\n  // Insert the new container after the first div\n  const bitdefContainer = block;\n  bitdefContainer.insertBefore(newContainerDiv, firstDiv.nextSibling);\n\n  // Animation\n  const section = block;\n\n  const threshold = {\n    threshold: 0.5, // Trigger animation when 50% of the section is visible\n  };\n\n  // eslint-disable-next-line no-unused-vars, no-shadow\n  const observer = new IntersectionObserver(((entries, observer) => {\n    entries.forEach((entry) => {\n      if (entry.isIntersecting && !entry.target.dataset.animationTriggered) {\n        // Add animation class to each row based on its index\n        // eslint-disable-next-line no-shadow\n        const tables = entry.target.querySelectorAll('table');\n        tables.forEach((table) => {\n          const rows = table.querySelectorAll('.same-line');\n          rows.forEach((row, index) => {\n            row.classList.add(`animate-row${index + 1}`);\n          });\n        });\n        // Set dataset attribute to indicate animation has been triggered\n        entry.target.dataset.animationTriggered = true;\n      }\n    });\n  }), threshold);\n\n  observer.observe(section);\n}\n"],"names":["decorate","block","table","row","rowIndex","td","cell","cellIndex","firstDiv","newContainerDiv","section","threshold","entries","observer","entry","index"],"mappings":"AACe,SAASA,EAASC,EAAO,CACvBA,EAAM,iBAAiB,iCAAiC,EAEhE,QAASC,GAAU,CACNA,EAAM,QAAQ,KAAK,EAE3B,UAAU,IAAI,iBAAiB,EAEzCA,EAAM,iBAAiB,IAAI,EAAE,QAAQ,CAACC,EAAKC,IAAa,CACtDD,EAAI,UAAU,IAAI,OAAOC,CAAQ,EAAE,EAE/BA,GAAY,GAAKA,GAAY,IAC3BA,IAAa,EAAGD,EAAI,UAAU,IAAI,iBAAiB,EAClDA,EAAI,UAAU,IAAI,iBAAiB,EACxCA,EAAI,iBAAiB,IAAI,EAAE,QAASE,GAAO,CACzCA,EAAG,UAAU,IAAI,WAAW,CACtC,CAAS,GAGHF,EAAI,iBAAiB,IAAI,EAAE,QAAQ,CAACG,EAAMC,IAAc,CACtDD,EAAK,UAAU,IAAI,UAAUC,CAAS,EAAE,CAChD,CAAO,CACP,CAAK,CACL,CAAG,EAED,MAAMC,EAAWP,EAAM,cAAc,yBAAyB,EAG9DO,EAAS,UAAU,IAAI,mBAAmB,EAG1C,MAAMC,EAAkB,SAAS,cAAc,KAAK,EAIpD,IAHAA,EAAgB,UAAU,IAAI,eAAe,EAGtCD,EAAS,aACdC,EAAgB,YAAYD,EAAS,WAAW,EAI1BP,EACR,aAAaQ,EAAiBD,EAAS,WAAW,EAGlE,MAAME,EAAUT,EAEVU,EAAY,CAChB,UAAW,EACZ,EAGgB,IAAI,qBAAsB,CAACC,EAASC,IAAa,CAChED,EAAQ,QAASE,GAAU,CACrBA,EAAM,gBAAkB,CAACA,EAAM,OAAO,QAAQ,qBAGjCA,EAAM,OAAO,iBAAiB,OAAO,EAC7C,QAASZ,GAAU,CACXA,EAAM,iBAAiB,YAAY,EAC3C,QAAQ,CAACC,EAAKY,IAAU,CAC3BZ,EAAI,UAAU,IAAI,cAAcY,EAAQ,CAAC,EAAE,CACvD,CAAW,CACX,CAAS,EAEDD,EAAM,OAAO,QAAQ,mBAAqB,GAElD,CAAK,CACF,EAAGH,CAAS,EAEJ,QAAQD,CAAO,CAC1B"}