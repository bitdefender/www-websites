function v(a){a.querySelectorAll(".bitdef-vs-brands-wrapper table").forEach(i=>{i.closest("div").classList.add("table-container"),i.querySelectorAll("tr").forEach((e,t)=>{e.classList.add(`row-${t}`),t>=3&&t<=5&&(t===3?e.classList.add("blue-background"):e.classList.add("grey-background"),e.querySelectorAll("td").forEach(s=>{s.classList.add("same-line")})),e.querySelectorAll("td").forEach((s,l)=>{s.classList.add(`column-${l}`)})})});const r=a.querySelector(".bitdef-vs-brands > div");r.classList.add("heading-container");const n=document.createElement("div");for(n.classList.add("new-container");r.nextSibling;)n.appendChild(r.nextSibling);a.insertBefore(n,r.nextSibling);const c=a,o={threshold:.5};new IntersectionObserver((i,d)=>{i.forEach(e=>{e.isIntersecting&&!e.target.dataset.animationTriggered&&(e.target.querySelectorAll("table").forEach(s=>{s.querySelectorAll(".same-line").forEach((b,f)=>{b.classList.add(`animate-row${f+1}`)})}),e.target.dataset.animationTriggered=!0)})},o).observe(c)}export{v as default};
//# sourceMappingURL=bitdef-vs-brands.js.map
