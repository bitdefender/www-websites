{"version":3,"file":"banner-vsb.js","sources":["../../../src/blocks/banner-vsb/banner-vsb.js"],"sourcesContent":["import { decorateButtons } from '../../scripts/lib-franklin.js';\n\nexport default async function decorate(block, options) {\n  if (options) {\n    // eslint-disable-next-line no-param-reassign\n    block = block.querySelector('.block');\n    const blockParent = block.closest('.section');\n    blockParent.classList.add('we-container');\n  }\n\n  const [rte, videoUrlEl] = [...block.children];\n\n  const videoUrl = videoUrlEl.textContent.trim();\n  const videoFormat = videoUrl.split('.').pop();\n\n  // const blockDataset = getDatasetFromSection(block);\n  const { videoPlayerSettings, videoPlayerPoster } = block.closest('.section').dataset;\n\n  function appendPreloadedVideo() {\n    const linkVideoEl = document.createElement('link');\n    const linkVideoPosterEl = document.createElement('link');\n    linkVideoEl.rel = 'preload';\n    linkVideoEl.as = 'video';\n    linkVideoEl.href = videoUrl;\n    linkVideoEl.type = `video/${videoFormat}`;\n\n    linkVideoPosterEl.rel = 'preload';\n    linkVideoPosterEl.as = 'image';\n    linkVideoPosterEl.href = videoPlayerPoster;\n\n    document.head.prepend(linkVideoPosterEl);\n    document.head.prepend(linkVideoEl);\n  }\n\n  appendPreloadedVideo();\n\n  const formattedVideoSettings = videoPlayerSettings\n    .split(',')\n    .map((item) => {\n      let newStr = item;\n      if (newStr.includes('=')) {\n        newStr = item.replace('=', '=\"');\n        newStr = `${newStr}\"`;\n\n        return newStr;\n      }\n\n      return newStr.trim();\n    })\n    .join(' ');\n\n  block.innerHTML = `\n    <div class=\"video-wrapper\">\n        <video ${formattedVideoSettings} poster=\"${videoPlayerPoster}\">\n          <source src=\"${videoUrl}\" type=\"video/${videoFormat}\">\n        </video>\n    </div>\n    <div class=\"default-content-wrapper\">\n        ${rte.innerHTML}\n    </div>\n  `;\n\n  block.querySelectorAll('.button-container > a').forEach((anchorEl) => {\n    anchorEl.target = '_blank';\n    anchorEl.rel = 'noopener noreferrer';\n  });\n\n  decorateButtons(block);\n\n  window.dispatchEvent(new CustomEvent('shadowDomLoaded'), {\n    bubbles: true,\n    composed: true, // This allows the event to cross the shadow DOM boundary\n  });\n}\n"],"names":["decorate","block","options","rte","videoUrlEl","videoUrl","videoFormat","videoPlayerSettings","videoPlayerPoster","appendPreloadedVideo","linkVideoEl","linkVideoPosterEl","formattedVideoSettings","item","newStr","anchorEl","decorateButtons"],"mappings":"gEAEe,eAAeA,EAASC,EAAOC,EAAS,CACjDA,IAEFD,EAAQA,EAAM,cAAc,QAAQ,EAChBA,EAAM,QAAQ,UAAU,EAChC,UAAU,IAAI,cAAc,GAG1C,KAAM,CAACE,EAAKC,CAAU,EAAI,CAAC,GAAGH,EAAM,QAAQ,EAEtCI,EAAWD,EAAW,YAAY,KAAM,EACxCE,EAAcD,EAAS,MAAM,GAAG,EAAE,IAAK,EAGvC,CAAE,oBAAAE,EAAqB,kBAAAC,CAAmB,EAAGP,EAAM,QAAQ,UAAU,EAAE,QAE7E,SAASQ,GAAuB,CAC9B,MAAMC,EAAc,SAAS,cAAc,MAAM,EAC3CC,EAAoB,SAAS,cAAc,MAAM,EACvDD,EAAY,IAAM,UAClBA,EAAY,GAAK,QACjBA,EAAY,KAAOL,EACnBK,EAAY,KAAO,SAASJ,CAAW,GAEvCK,EAAkB,IAAM,UACxBA,EAAkB,GAAK,QACvBA,EAAkB,KAAOH,EAEzB,SAAS,KAAK,QAAQG,CAAiB,EACvC,SAAS,KAAK,QAAQD,CAAW,CACrC,CAEED,EAAsB,EAEtB,MAAMG,EAAyBL,EAC5B,MAAM,GAAG,EACT,IAAKM,GAAS,CACb,IAAIC,EAASD,EACb,OAAIC,EAAO,SAAS,GAAG,GACrBA,EAASD,EAAK,QAAQ,IAAK,IAAI,EAC/BC,EAAS,GAAGA,CAAM,IAEXA,GAGFA,EAAO,KAAM,CACrB,CAAA,EACA,KAAK,GAAG,EAEXb,EAAM,UAAY;AAAA;AAAA,iBAEHW,CAAsB,YAAYJ,CAAiB;AAAA,yBAC3CH,CAAQ,iBAAiBC,CAAW;AAAA;AAAA;AAAA;AAAA,UAInDH,EAAI,SAAS;AAAA;AAAA,IAIrBF,EAAM,iBAAiB,uBAAuB,EAAE,QAASc,GAAa,CACpEA,EAAS,OAAS,SAClBA,EAAS,IAAM,qBACnB,CAAG,EAEDC,EAAgBf,CAAK,EAErB,OAAO,cAAc,IAAI,YAAY,iBAAiB,EAAG,CACvD,QAAS,GACT,SAAU,EACd,CAAG,CACH"}