{"version":3,"file":"products.js","sources":["../../../src/blocks/products/products.js"],"sourcesContent":["import { Constants } from '../../scripts/libs/constants.js';\nimport {\n  createNanoBlock,\n  renderNanoBlocks,\n  createTag,\n  matchHeights,\n  checkIfNotProductPage,\n} from '../../scripts/utils/utils.js';\n\n// all avaiable text variables\nconst TEXT_VARIABLES_MAPPING = [\n  {\n    variable: 'percent',\n    storeVariable: '{DISCOUNT_PERCENTAGE}',\n  },\n];\n\n/**\n * Nanoblock representing the plan selectors.\n * If only one plan is declared, the plan selector will not be visible.\n * @param plans The list of plans to display [ labelToDisplay, productCode, variantId, ... ]\n * @param defaultSelection The default selection.\n * @returns Root node of the nanoblock\n */\nfunction renderPlanSelector(plans, defaultSelection) {\n  // TODO: Remove unecessary div\n  const root = document.createElement('div');\n  const ul = document.createElement('ul');\n  ul.classList.add('variant-selector');\n  root.appendChild(ul);\n\n  if (plans.length === 3) {\n    ul.style.display = 'none';\n  }\n\n  for (let idx = 0; idx < plans.length - 2; idx += 3) {\n    const label = plans[idx];\n    const liStoreParameters = {};\n\n    if (Number(defaultSelection)) {\n      liStoreParameters['data-store-click-set-devices'] = label;\n    } else {\n      const productCode = plans[idx + 1];\n      const variation = plans[idx + 2];\n      liStoreParameters['data-store-click-set-product'] = '';\n      liStoreParameters['data-store-product-id'] = productCode;\n      liStoreParameters['data-store-department'] = 'consumer';\n      liStoreParameters['data-product-type'] = Constants.PRODUCT_ID_MAPPINGS[productCode].isMonthlyProduct ? 'monthly' : 'yearly';\n      liStoreParameters['data-store-product-option'] = variation;\n    }\n\n    const li = createTag(\n      'li',\n      liStoreParameters,\n      `<span>${label}</span>`,\n    );\n\n    // set the default selection\n    if (defaultSelection === label) {\n      li.classList.add('active');\n      li.checked = true;\n    }\n\n    li.addEventListener('click', () => {\n      const previousButtonActive = root.querySelector('.active');\n      if (previousButtonActive) {\n        previousButtonActive.classList.remove('active');\n        previousButtonActive.checked = false;\n      }\n      li.classList.add('active');\n      li.checked = true;\n    });\n\n    ul.appendChild(li);\n  }\n\n  return root;\n}\n\n/**\n * Nanoblock representing the old product price\n * @param text The text located before the price\n * @param monthly Show the monthly price if equal to 'monthly'\n * @returns Root node of the nanoblock\n */\nfunction renderOldPrice(text = '', monthly = '') {\n  // TODO: simplify CSS\n  const oldPrice = document.createElement('del');\n  if (monthly.toLowerCase() === 'monthly') {\n    oldPrice.setAttribute('data-store-price', 'full-monthly');\n  } else {\n    oldPrice.setAttribute('data-store-price', 'full');\n  }\n\n  const root = createTag(\n    'div',\n    {\n      'data-store-hide': 'no-price=discounted;type=visibility',\n      class: 'price await-loader',\n    },\n    `<span class='old-price'>${text} ${oldPrice.outerHTML}</span>`,\n  );\n\n  // insert text to mark monthly price\n  if (monthly.toLowerCase() === 'monthly') {\n    root.querySelector('.old-price').insertAdjacentHTML('beforeend', '<sup>/mo</sup>');\n  }\n\n  return root;\n}\n\n/**\n * Nanoblock representing the new product price\n * @param text The text located before the price\n * @param monthly Show the monthly price if equal to 'monthly'\n * @returns Root node of the nanoblock\n */\nfunction renderPrice(text = '', monthly = '', monthTranslation = 'mo') {\n  // TODO simplify CSS\n  const newPrice = document.createElement('strong');\n  if (monthly.toLowerCase() === 'monthly') {\n    newPrice.setAttribute('data-store-price', 'discounted-monthly||full-monthly');\n  } else {\n    newPrice.setAttribute('data-store-price', 'discounted||full');\n  }\n\n  const root = createTag(\n    'div',\n    {\n      class: 'price await-loader',\n    },\n    `<strong class='new-price'>${text} ${newPrice.outerHTML}</strong>`,\n  );\n\n  // insert text to mark monthly price\n  if (monthly.toLowerCase() === 'monthly') {\n    root.querySelector('.new-price').insertAdjacentHTML('beforeend', `<sup>/${monthTranslation}</sup>`);\n  }\n\n  return root;\n}\n\n/**\n * Renders the green section on top of the product card highlighting the potential savings\n * @param text Text to display\n * @param percent Show the saving in percentage if equals to `percent`\n * @returns Root node of the nanoblock\n */\nfunction renderHighlightSavings(text = 'Save', percent = '') {\n  const highlighSaving = document.createElement('span');\n  highlighSaving.setAttribute('data-store-text-variable', '');\n  highlighSaving.textContent = `${text} ${\n    percent.toLowerCase() === 'percent' ? '{DISCOUNT_PERCENTAGE}' : '{DISCOUNT_VALUE}'\n  }`;\n\n  const root = createTag(\n    'div',\n    {\n      'data-store-hide': 'no-price=discounted;type=visibility',\n      class: 'highlight await-loader',\n      style: 'display=none',\n    },\n    `${highlighSaving.outerHTML}`,\n  );\n\n  return root;\n}\n\n/**\n *\n * @param {string} text Text of the featured nanoblock\n * @return {string} Text with variables replaced\n */\nconst replaceVariablesInText = (text) => {\n  let replacedText = text;\n\n  // replace the percent variable with correct percentage of the produc\n  TEXT_VARIABLES_MAPPING.forEach((textVariableMapping) => {\n    replacedText = replacedText.replaceAll(\n      textVariableMapping.variable,\n      textVariableMapping.storeVariable,\n    );\n  });\n\n  return replacedText;\n};\n\n/**\n * Nanoblock representing a text to highlight in the product card\n * @param text Text to display\n * @returns Root node of the nanoblock\n */\nfunction renderHighlight(text) {\n  const updatedText = replaceVariablesInText(text);\n  return createTag(\n    'div',\n    {\n      class: 'highlight',\n      'data-store-text-variable': '',\n      'data-store-hide': 'no-price=discounted',\n    },\n    `<span>${updatedText}</span>`,\n  );\n}\n\n/**\n *\n * @param {string} text\n * @return {boolean} wether the text contains variables or not\n */\nconst checkIfTextContainsVariables = (text) => TEXT_VARIABLES_MAPPING.some(\n  (textVariableMapping) => text.includes(textVariableMapping.variable),\n);\n\n/**\n * Nanoblock representing a text to Featured\n * @param text Text of the featured nanoblock\n * @returns Root node of the nanoblock\n */\nfunction renderFeatured(text) {\n  const root = document.createElement('div');\n  root.setAttribute('data-store-text-variable', '');\n  root.classList.add('featured');\n  root.textContent = text;\n\n  if (checkIfTextContainsVariables(text)) {\n    root.classList.add('await-loader');\n    root.textContent = replaceVariablesInText(root.textContent);\n  }\n\n  return root;\n}\n\n/**\n * Nanoblock representing a text to Featured and the corresponding savings\n * @param text Text of the featured nanoblock\n * @param percent Show the saving in percentage if equals to `percent`\n * @returns Root node of the nanoblock\n */\nfunction renderFeaturedSavings(text = 'Save', percent = '') {\n  const featuredSaving = document.createElement('span');\n  featuredSaving.setAttribute('data-store-text-variable', '');\n  featuredSaving.textContent = `${text} ${\n    percent.toLowerCase() === 'percent' ? '{DISCOUNT_PERCENTAGE}' : '{DISCOUNT_VALUE}'\n  }`;\n\n  const root = createTag(\n    'div',\n    {\n      'data-store-hide': 'no-price=discounted;type=visibility',\n      class: 'featured',\n    },\n    `${featuredSaving.outerHTML}`,\n  );\n  root.classList.add('await-loader');\n\n  return root;\n}\n\n/**\n * Nanoblock representing the lowest product price\n * @returns root node of the nanoblock\n */\nfunction renderLowestPrice(...params) {\n  const filteredParams = params.filter((paramValue) => paramValue && (typeof paramValue !== 'object')).slice(-2);\n  const text = filteredParams.length > 1 ? filteredParams[1] : filteredParams[0];\n  const monthly = filteredParams.length > 1 ? filteredParams[0] : '';\n  const root = document.createElement('p');\n  const textArea = document.createElement('span');\n  root.classList.add('await-loader');\n  textArea.setAttribute('data-store-text-variable', '');\n  textArea.textContent = text.replace('0', monthly.toLowerCase() === 'monthly' ? '{SMALLEST_PRICE_PER_MONTH}' : '{SMALLEST_PRICE}');\n  root.appendChild(textArea);\n  return root;\n}\n\n/**\n * Nanoblock representing the price conditions below the Price\n * @param text Conditions\n * @returns Root node of the nanoblock\n */\nfunction renderPriceCondition(text) {\n  const updatedText = text.replace('BilledPrice', '<em data-store-price=\"discounted||full\" class=\"await-loader\"></em>');\n  return createTag(\n    'div',\n    {\n      class: 'price condition',\n    },\n    `<em>${updatedText}</em>`,\n  );\n}\n\n// declare nanoblocks\ncreateNanoBlock('plans', renderPlanSelector);\ncreateNanoBlock('price', renderPrice);\ncreateNanoBlock('oldPrice', renderOldPrice);\ncreateNanoBlock('priceCondition', renderPriceCondition);\ncreateNanoBlock('featured', renderFeatured);\ncreateNanoBlock('featuredSavings', renderFeaturedSavings);\ncreateNanoBlock('highlightSavings', renderHighlightSavings);\ncreateNanoBlock('highlight', renderHighlight);\ncreateNanoBlock('lowestPrice', renderLowestPrice);\n\n/**\n * Main decorate function\n */\nexport default function decorate(block) {\n  const metadata = block.closest('.section').dataset;\n  const plans = [];\n\n  Object.entries(metadata).forEach(([key, value]) => {\n    if (key.includes('plans')) {\n      const allImportantData = value.match(/[^,{}[\\]]+/gu).map((importantData) => importantData.trim());\n      plans.push({\n        productCode: allImportantData[1],\n        defaultVariant: `${Number(allImportantData.slice(-1)[0])\n          ? allImportantData.slice(-1)[0] : allImportantData[2].match(/[0-9-]+/g)[0]\n        }${allImportantData[2].match(/[0-9-]+/g)[1]}`,\n      });\n    }\n  });\n\n  block.parentElement.parentElement.setAttribute('data-store-context', '');\n  [...block.children].forEach((row, idxParent) => {\n    [...(row.children)].forEach((col, idxCol) => {\n      const plansIndex = idxParent * row.children.length + idxCol;\n\n      // set the store event on the component\n      let storeEvent = 'main-product-loaded';\n      if (checkIfNotProductPage()) {\n        storeEvent = 'product-loaded';\n      }\n\n      col.classList.add('product-card');\n      col.setAttribute('data-store-context', '');\n      if (plans[plansIndex]) {\n        col.setAttribute('data-store-id', plans[plansIndex].productCode);\n        col.setAttribute('data-store-option', plans[plansIndex].defaultVariant);\n      }\n      col.setAttribute('data-store-department', 'consumer');\n      col.setAttribute('data-store-event', storeEvent);\n      const cardButtons = col.querySelectorAll('.button-container a');\n      cardButtons?.forEach((button) => {\n        if (button.href?.includes('/buy/') || button.href?.includes('#buylink')) {\n          button.href = '#';\n          button.setAttribute('data-store-buy-link', '');\n        }\n      });\n      block.appendChild(col);\n      renderNanoBlocks(col, undefined, idxParent);\n    });\n    row.remove();\n  });\n\n  // render nanoblocks in section's content default wrapper\n  const defaultContent = block.parentNode.parentNode.querySelector('.default-content-wrapper');\n  if (defaultContent) {\n    renderNanoBlocks(defaultContent);\n  }\n\n  // style the product card if the author has added a featured card inside\n  [...block.querySelectorAll('.product-card .featured')].forEach((featured) => {\n    featured.closest('.product-card').classList.add('featured');\n  });\n\n  // add class to avoid using :has selector\n  block.querySelectorAll('.product-card li').forEach((li) => {\n    if (li.querySelector('del')) {\n      li.classList.add('with-del');\n    } else {\n      li.classList.remove('with-del');\n    }\n  });\n\n  block.querySelectorAll('.product-card ul').forEach((ul) => {\n    if (ul.previousElementSibling?.tagName === 'P') {\n      ul.previousElementSibling.classList.add('ul-header-text');\n    }\n  });\n\n  block.querySelectorAll('.product-card ul li u').forEach((li) => {\n    li.parentNode.classList.add('icon-important');\n  });\n\n  const paragraphs = block.querySelectorAll('.product-card.featured p');\n\n  // Iterate through each paragraph\n  paragraphs.forEach((paragraph) => {\n    // Check if the paragraph only contains span elements\n    const containsOnlySpans = Array.from(paragraph.childNodes).every((node) => node.nodeName === 'SPAN');\n\n    // If the paragraph only contains span elements, add a class\n    if (containsOnlySpans) {\n      paragraph.classList.add('os-availability');\n\n      if (paragraph.nextElementSibling.nodeName === 'P') {\n        paragraph.nextElementSibling.classList.add('os-availability-text');\n      }\n    }\n  });\n\n  // Height matching and Dynamic texts logic\n  const cards = block.querySelectorAll('.product-card');\n  const featuredCard = block.querySelector('.product-card.featured');\n  cards.forEach((card, cardIndex) => {\n    const hasImage = card.querySelector('img') !== null;\n    if (hasImage && !block.classList.contains('plans') && !block.classList.contains('compact')) {\n      // If the image exists, set max-width to the paragraph next to the image\n      const firstPElement = card.querySelector('p:not(:has(img, .icon))');\n      firstPElement.classList.add('img-adjacent-text');\n    }\n    const planSelector = card.querySelector('.variant-selector');\n    const dynamicPriceTextsKey = `dynamicPriceTexts${cardIndex + 1}`;\n    if (metadata[dynamicPriceTextsKey]) {\n      const dynamicPriceTexts = [...metadata[dynamicPriceTextsKey].split(',')];\n      const priceConditionEl = card.querySelector('.price.condition em');\n      planSelector?.querySelectorAll('li')?.forEach((option, idx) => {\n        option.addEventListener('click', () => {\n          if (option.classList.contains('active') && priceConditionEl && dynamicPriceTexts) {\n            const textTemplate = dynamicPriceTexts[idx] || '';\n            // in order to preserve the store eventListeners we can't replace the priceElement\n            // every time another option is selected therefore we're using a string template\n            if (textTemplate.includes('{BilledPrice}')) {\n              const [before, after] = textTemplate.split('{BilledPrice}');\n              const nodesToRemove = Array.from(priceConditionEl.childNodes).filter(\n                (node) => node.nodeType === Node.TEXT_NODE,\n              );\n              // Clear only non-<em> text nodes (this element contains store events)\n              nodesToRemove.forEach((node) => priceConditionEl.removeChild(node));\n              // eslint-disable-next-line max-len\n              if (before) priceConditionEl.insertBefore(document.createTextNode(before), priceConditionEl.firstChild);\n              if (after) priceConditionEl.appendChild(document.createTextNode(after));\n            } else {\n              priceConditionEl.textContent = textTemplate;\n            }\n          }\n        });\n      });\n    }\n    if (!card.classList.contains('featured')) {\n      // If there is no featured card, do nothing\n      if (!featuredCard) {\n        return;\n      }\n      let space = card.querySelector('h3');\n      space = space.nextElementSibling;\n      const emptyDiv = document.createElement('div');\n      space.insertAdjacentElement('afterend', emptyDiv);\n      emptyDiv.classList.add('featured', 'nanoblock');\n      emptyDiv.style.visibility = 'hidden';\n    }\n  });\n  matchHeights(block, '.price.nanoblock:not(:last-of-type)');\n  matchHeights(block, '.price.condition');\n  matchHeights(block, 'h3:nth-of-type(2)');\n  matchHeights(block, 'p:nth-of-type(2)');\n  matchHeights(block, 'p:nth-of-type(3)');\n  matchHeights(block, 'h4');\n  matchHeights(block, 'ul:not(.variant-selector)');\n  matchHeights(block, '.featured.nanoblock');\n}\n"],"names":["TEXT_VARIABLES_MAPPING","renderPlanSelector","plans","defaultSelection","root","ul","idx","label","liStoreParameters","productCode","variation","Constants","li","createTag","previousButtonActive","renderOldPrice","text","monthly","oldPrice","renderPrice","monthTranslation","newPrice","renderHighlightSavings","percent","highlighSaving","replaceVariablesInText","replacedText","textVariableMapping","renderHighlight","updatedText","checkIfTextContainsVariables","renderFeatured","renderFeaturedSavings","featuredSaving","renderLowestPrice","params","filteredParams","paramValue","textArea","renderPriceCondition","createNanoBlock","decorate","block","metadata","key","value","allImportantData","importantData","row","idxParent","col","idxCol","plansIndex","storeEvent","checkIfNotProductPage","button","renderNanoBlocks","defaultContent","featured","paragraph","node","cards","featuredCard","card","cardIndex","planSelector","dynamicPriceTextsKey","dynamicPriceTexts","priceConditionEl","option","textTemplate","before","after","space","emptyDiv","matchHeights"],"mappings":"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"}