{"version":3,"file":"form-blog.js","sources":["../../../src/blocks/form-blog/form-blog.js"],"sourcesContent":["import { Cookies } from '@repobit/dex-utils';\nimport { FormEvent, AdobeDataLayerService } from '@repobit/dex-data-layer';\n\nfunction onChange(form) {\n  // Targeting the anchor inside .button-container\n  const submitButton = form.querySelector('input[type=\"submit\"]');\n  const emailInput = form.querySelector('input[type=\"email\"]');\n\n  const allCheckboxesChecked = [...form.querySelectorAll('input[type=\"checkbox\"]:required')].every((checkbox) => checkbox.checked);\n  const emailPopulated = emailInput.value.trim() !== '';\n\n  submitButton.disabled = !((allCheckboxesChecked && emailPopulated));\n}\n\nasync function hashEmail(email) {\n  const encoder = new TextEncoder();\n  const data = encoder.encode(email);\n  const hashBuffer = await crypto.subtle.digest('SHA-256', data);\n  const hashArray = Array.from(new Uint8Array(hashBuffer));\n  const hashHex = hashArray.map((b) => b.toString(16).padStart(2, '0')).join('');\n  return hashHex;\n}\n\nasync function solvePoW(challenge, difficulty) {\n  const targetPrefix = '0'.repeat(difficulty);\n  let nonce = 0;\n  // eslint-disable-next-line no-constant-condition\n  while (true) {\n    const input = challenge + nonce;\n    // eslint-disable-next-line no-await-in-loop\n    const hashBuffer = await crypto.subtle.digest('SHA-256', new TextEncoder().encode(input));\n    const hashArray = Array.from(new Uint8Array(hashBuffer));\n    const hashHex = hashArray.map((b) => b.toString(16).padStart(2, '0')).join('');\n    if (hashHex.startsWith(targetPrefix)) {\n      return { nonce, hash: hashHex };\n    }\n    // eslint-disable-next-line no-plusplus\n    nonce++;\n  }\n}\n\nasync function handleSubmitNewsletter(e, form, flow, successMessage, failMessage, formType = 'newsletter') {\n  e.preventDefault();\n  // Get challenge from server\n  const challengeRes = await fetch('https://www.bitdefender.com/site/Store/challenge');\n  const { challenge, difficulty } = await challengeRes.json();\n\n  // Solve challenge\n  const { nonce } = await solvePoW(challenge, difficulty);\n\n  // Send the data with the challenge solved\n  const formData = new FormData(form);\n  const email = formData.get('email');\n  const name = formData.get('name');\n  const firstName = name.split(' ')[0];\n  const lastName = name.split(' ')[1] || '';\n  const update = formData.get('checkbox');\n\n  const jsonObject = {\n    email,\n    flow,\n    first_name: firstName,\n    last_name: lastName,\n    update,\n    nonce,\n    challenge,\n    difficulty,\n  };\n\n  const response = await fetch('https://www.bitdefender.com/site/Store/offerSubscribe', {\n    method: 'POST',\n    body: JSON.stringify(jsonObject),\n  });\n  const formParent = form.parentElement;\n  if (response.ok) {\n    const hashedEmail = await hashEmail(email);\n    AdobeDataLayerService.push(new FormEvent(\n      'form completed',\n      {\n        form: formType,\n        formID: hashedEmail,\n      },\n    ));\n\n    formParent.innerHTML = '';\n    formParent.appendChild(successMessage);\n\n    Cookies.set('newsLetterIntentShown', '1');\n  } else {\n    formParent.innerHTML = '';\n    formParent.appendChild(failMessage);\n  }\n}\n\nfunction parseHTML(html) {\n  // Regular expressions to match text inside curly braces and square brackets\n  const curlyRegex = /{{(.*?)}}/g;\n  const squareRegex = /\\[\\[(.*?)\\]\\]/g;\n\n  const insideCurlyBrackets = [];\n  const insideSquareBrackets = [];\n\n  // Match all occurrences of the curly braces regex\n  let match;\n  // eslint-disable-next-line no-cond-assign\n  while ((match = curlyRegex.exec(html)) !== null) {\n    insideCurlyBrackets.push(match[1].trim());\n  }\n\n  // Match all occurrences of the square brackets regex\n  // eslint-disable-next-line no-cond-assign\n  while ((match = squareRegex.exec(html)) !== null) {\n    insideSquareBrackets.push(match[1].trim());\n  }\n\n  return {\n    insideCurlyBrackets,\n    insideSquareBrackets,\n  };\n}\n\n// Function to create the form\nasync function createForm(types, labels, flow, successMessage, failMessage, formType) {\n  const form = document.createElement('form');\n  form.setAttribute('method', 'post');\n\n  for (let i = 0; i < types.length; i += 1) {\n    const type = types[i].toLowerCase();\n    const input = document.createElement('input');\n    input.id = `form-${i}-${type}`;\n    input.addEventListener('change', () => onChange(form));\n    input.addEventListener('input', () => onChange(form));\n\n    if (type === 'name') {\n      input.setAttribute('type', 'text');\n    } else {\n      input.setAttribute('type', type);\n    }\n\n    input.setAttribute('name', type);\n    input.setAttribute('placeholder', labels[i]);\n    input.setAttribute('required', '');\n    input.setAttribute('aria-required', 'true');\n\n    form.append(input);\n    if (type === 'submit') {\n      input.classList.add('disabled');\n      input.disabled = true;\n    }\n\n    if (type === 'checkbox') {\n      const div = document.createElement('div');\n      div.classList.add('checkbox');\n\n      const label = document.createElement('label');\n      label.setAttribute('for', `form-${i}-${type}`);\n      label.innerHTML = labels[i];\n      input.before(div);\n      div.append(input, label);\n    }\n  }\n\n  // if (captchaKey) {\n  //   // create function to render the captcha\n  //   window.onRecaptchaLoadCallback = () => {\n  //     window.clientId = window.grecaptcha.render('inline-badge', {\n  //       sitekey: captchaKey,\n  //       badge: 'inline',\n  //       size: 'invisible',\n  //     });\n  //   };\n\n  //   // add capthca script\n  //   const captchaScript = document.createElement('script');\n  //   captchaScript.classList.add('grecaptcha-v3');\n  //   captchaScript.src = 'https://www.google.com/recaptcha/api.js?render=explicit&onload=onRecaptchaLoadCallback';\n  //   captchaScript.defer = true;\n  //   form.appendChild(captchaScript);\n\n  //   // add captcha container\n  //   const captchaContainer = document.createElement('div');\n  //   captchaContainer.id = 'inline-badge';\n  //   form.appendChild(captchaContainer);\n  // }\n\n  form.addEventListener('submit', (e) => handleSubmitNewsletter(e, form, flow, successMessage, failMessage, formType));\n  return form;\n}\n\nexport default async function decorate(block, options) {\n  const {\n    template, flow, captchaKey,\n  } = block.closest('.section').dataset;\n\n  if (options) {\n    // eslint-disable-next-line no-param-reassign\n    block = block.querySelector('.block');\n    const blockParent = block.closest('.section');\n    blockParent.classList.add('we-container');\n  }\n\n  const formDataHTML = block.children[1];\n  const successMessage = block.children[2].children[1];\n  const failMessage = block.children[3].children[1];\n  const formData = parseHTML(formDataHTML.innerHTML);\n  const [types, labels] = [formData.insideCurlyBrackets, formData.insideSquareBrackets];\n  let form = null;\n  if (options) {\n    form = await createForm(\n      types,\n      labels,\n      flow,\n      successMessage,\n      failMessage,\n      options.formType,\n      captchaKey,\n    );\n  } else {\n    form = await createForm(types, labels, flow, successMessage, failMessage, 'newsletter', captchaKey);\n  }\n\n  if (form) block.append(form);\n  block.children[1].innerHTML = '';\n  block.children[2].innerHTML = '';\n  block.children[3].innerHTML = '';\n  if (template === 'blog') {\n    block.classList.add('blog-template');\n  }\n\n  window.dispatchEvent(new CustomEvent('shadowDomLoaded'), {\n    bubbles: true,\n    composed: true, // This allows the event to cross the shadow DOM boundary\n  });\n}\n"],"names":["onChange","form","submitButton","emailInput","allCheckboxesChecked","checkbox","emailPopulated","hashEmail","email","data","hashBuffer","b","solvePoW","challenge","difficulty","targetPrefix","nonce","input","hashHex","handleSubmitNewsletter","flow","successMessage","failMessage","formType","challengeRes","formData","name","firstName","lastName","update","response","formParent","hashedEmail","AdobeDataLayerService","FormEvent","Cookies","parseHTML","html","curlyRegex","squareRegex","insideCurlyBrackets","insideSquareBrackets","match","createForm","types","labels","i","type","div","label","e","decorate","block","options","template","captchaKey","formDataHTML"],"mappings":"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"}