{"version":3,"file":"user.js","sources":["../../../../../../node_modules/@repobit/dex-utils/dist/src/user.js"],"sourcesContent":["import { Constants } from '@repobit/dex-constants';\nimport Cookies from './cookies.js';\nimport UserAgent from './user-agent/index.js';\nexport default class User {\n    static _info = this.staticInitialise();\n    static _fingerprint = this.getFingerprint();\n    static _country = this.getGeolocation();\n    static _locale = this.getUserLocale();\n    static async staticInitialise() {\n        if (!Cookies.has(Constants.LOGIN_LOGGED_USER_EXPIRY_COOKIE_NAME)) {\n            return null;\n        }\n        try {\n            const userDataResponse = await fetch(`${Constants.PUBLIC_URL_ORIGIN}/bin/login/userInfo.json`);\n            return userDataResponse.ok ? (await userDataResponse.json()).result : null;\n        }\n        catch {\n            return null;\n        }\n    }\n    static async getFingerprint() {\n        // Try to grab the fingeprint from localstoraage\n        const storageFingerprint = localStorage.getItem(Constants.FINGERPRINT_LOCAL_STORAGE_NAME);\n        if (storageFingerprint) {\n            return storageFingerprint;\n        }\n        // Try to grab fingerprint from login data\n        const userInfo = await this._info;\n        if (userInfo) {\n            localStorage.setItem(Constants.FINGERPRINT_LOCAL_STORAGE_NAME, userInfo.fingerprint);\n            return userInfo.fingerprint;\n        }\n        // Try to grab fingerprint from dummyPost (from user local antivirus instance)\n        const fingerprintNotExist = Cookies.has(Constants.NO_FINGERPRINT_COOKIE_NAME);\n        if (!fingerprintNotExist && UserAgent.isWindows) {\n            try {\n                const fingerprintReq = await fetch(`${Constants.WWW_ONLY_ORIGIN}/site/Main/dummyPost?${Math.random()}`, {\n                    method: 'POST',\n                    headers: {\n                        'Content-type': 'application/x-www-form-urlencoded',\n                        'Pragma': 'no-cache',\n                        'Cache-Control': 'no-store, no-cache, must-revalidate, max-age=0',\n                        'Expires': 'Tue, 01 Jan 1971 02:00:00 GMT',\n                        'BDUS_A312C09A2666456D9F2B2AA5D6B463D6': 'check.bitdefender'\n                    }\n                });\n                if (fingerprintReq.ok && fingerprintReq.headers.has(Constants.FINGERPRINT_HEADER)) {\n                    const fingerprint = fingerprintReq.headers.get(Constants.FINGERPRINT_HEADER);\n                    localStorage.setItem(Constants.FINGERPRINT_LOCAL_STORAGE_NAME, fingerprint);\n                    return fingerprint;\n                }\n                else {\n                    Cookies.set(Constants.NO_FINGERPRINT_COOKIE_NAME, 'true', { expires: 1 });\n                }\n            }\n            catch { /* empty */ }\n        }\n        return null;\n    }\n    /**\n     * Handling User Geolocation\n     * This wil fetch the user's country\n    */\n    static async getGeolocation() {\n        try {\n            const response = await fetch(`${Constants.PUBLIC_URL_ORIGIN}/geoip`);\n            if (!response.ok) {\n                return 'us';\n            }\n            const country = await response.json();\n            if (country.error_code) {\n                return 'us';\n            }\n            return country['country'].toLowerCase();\n        }\n        catch {\n            return 'us';\n        }\n    }\n    /** Getting the User's Locale */\n    static async getUserLocale() {\n        const userCountry = await this._country;\n        try {\n            const userGeoIpCall = await fetch(`${Constants.WWW_ONLY_ORIGIN}/p-api/v1/countries/${userCountry.toUpperCase()}/locales`);\n            const userGeoIpData = await userGeoIpCall.json();\n            return userGeoIpData[0].locale.toLowerCase();\n        }\n        catch {\n            return 'en-us';\n        }\n    }\n    /** attempt to log the user in.\n     * You can access it from the mega menu if it is imported.\n     * If the login fails, this operation will not be permited in the same tab session. */\n    static async login() {\n        const loginAttempt = sessionStorage.getItem(Constants.LOGIN_ATTEMPT_SESSION_STORAGE_KEY);\n        const userData = await this._info;\n        const userLoggedInExpirationDate = Number(Cookies.get(Constants.LOGIN_LOGGED_USER_EXPIRY_COOKIE_NAME)) || 0;\n        if (!loginAttempt && !userData\n            && userLoggedInExpirationDate > Date.now()) {\n            sessionStorage.setItem(Constants.LOGIN_ATTEMPT_SESSION_STORAGE_KEY, 'true');\n            const loginEndpointUrl = new URL(`${Constants.PUBLIC_URL_ORIGIN}${Constants.LOGIN_ENDPOINT}`);\n            loginEndpointUrl.searchParams.set('origin', `${window.location.pathname}${window.location.search}`);\n            window.location.href = loginEndpointUrl.href;\n        }\n    }\n    static get info() {\n        return this._info;\n    }\n    static get fingerprint() {\n        return this._fingerprint;\n    }\n    static get country() {\n        return this._country;\n    }\n    static get locale() {\n        return this._locale;\n    }\n}\n//# sourceMappingURL=user.js.map"],"names":["User","Cookies","Constants","userDataResponse","storageFingerprint","userInfo","UserAgent","fingerprintReq","fingerprint","response","country","userCountry","loginAttempt","userData","userLoggedInExpirationDate","loginEndpointUrl"],"mappings":"sIAGe,MAAMA,CAAK,CACtB,OAAO,MAAQ,KAAK,iBAAkB,EACtC,OAAO,aAAe,KAAK,eAAgB,EAC3C,OAAO,SAAW,KAAK,eAAgB,EACvC,OAAO,QAAU,KAAK,cAAe,EACrC,aAAa,kBAAmB,CAC5B,GAAI,CAACC,EAAQ,IAAIC,EAAU,oCAAoC,EAC3D,OAAO,KAEX,GAAI,CACA,MAAMC,EAAmB,MAAM,MAAM,GAAGD,EAAU,iBAAiB,0BAA0B,EAC7F,OAAOC,EAAiB,IAAM,MAAMA,EAAiB,KAAI,GAAI,OAAS,IAClF,MACc,CACF,OAAO,IACnB,CACA,CACI,aAAa,gBAAiB,CAE1B,MAAMC,EAAqB,aAAa,QAAQF,EAAU,8BAA8B,EACxF,GAAIE,EACA,OAAOA,EAGX,MAAMC,EAAW,MAAM,KAAK,MAC5B,GAAIA,EACA,oBAAa,QAAQH,EAAU,+BAAgCG,EAAS,WAAW,EAC5EA,EAAS,YAIpB,GAAI,CADwBJ,EAAQ,IAAIC,EAAU,0BAA0B,GAChDI,EAAU,UAClC,GAAI,CACA,MAAMC,EAAiB,MAAM,MAAM,GAAGL,EAAU,eAAe,wBAAwB,KAAK,OAAQ,CAAA,GAAI,CACpG,OAAQ,OACR,QAAS,CACL,eAAgB,oCAChB,OAAU,WACV,gBAAiB,iDACjB,QAAW,gCACX,sCAAyC,mBACjE,CACA,CAAiB,EACD,GAAIK,EAAe,IAAMA,EAAe,QAAQ,IAAIL,EAAU,kBAAkB,EAAG,CAC/E,MAAMM,EAAcD,EAAe,QAAQ,IAAIL,EAAU,kBAAkB,EAC3E,oBAAa,QAAQA,EAAU,+BAAgCM,CAAW,EACnEA,CAC3B,MAEoBP,EAAQ,IAAIC,EAAU,2BAA4B,OAAQ,CAAE,QAAS,EAAG,CAE5F,MACkB,CAAA,CAEV,OAAO,IACf,CAKI,aAAa,gBAAiB,CAC1B,GAAI,CACA,MAAMO,EAAW,MAAM,MAAM,GAAGP,EAAU,iBAAiB,QAAQ,EACnE,GAAI,CAACO,EAAS,GACV,MAAO,KAEX,MAAMC,EAAU,MAAMD,EAAS,KAAM,EACrC,OAAIC,EAAQ,WACD,KAEJA,EAAQ,QAAW,YAAa,CACnD,MACc,CACF,MAAO,IACnB,CACA,CAEI,aAAa,eAAgB,CACzB,MAAMC,EAAc,MAAM,KAAK,SAC/B,GAAI,CAGA,OADsB,MADA,MAAM,MAAM,GAAGT,EAAU,eAAe,uBAAuBS,EAAY,YAAa,CAAA,UAAU,GAC9E,KAAM,GAC3B,CAAC,EAAE,OAAO,YAAa,CACxD,MACc,CACF,MAAO,OACnB,CACA,CAII,aAAa,OAAQ,CACjB,MAAMC,EAAe,eAAe,QAAQV,EAAU,iCAAiC,EACjFW,EAAW,MAAM,KAAK,MACtBC,EAA6B,OAAOb,EAAQ,IAAIC,EAAU,oCAAoC,CAAC,GAAK,EAC1G,GAAI,CAACU,GAAgB,CAACC,GACfC,EAA6B,KAAK,MAAO,CAC5C,eAAe,QAAQZ,EAAU,kCAAmC,MAAM,EAC1E,MAAMa,EAAmB,IAAI,IAAI,GAAGb,EAAU,iBAAiB,GAAGA,EAAU,cAAc,EAAE,EAC5Fa,EAAiB,aAAa,IAAI,SAAU,GAAG,OAAO,SAAS,QAAQ,GAAG,OAAO,SAAS,MAAM,EAAE,EAClG,OAAO,SAAS,KAAOA,EAAiB,IACpD,CACA,CACI,WAAW,MAAO,CACd,OAAO,KAAK,KACpB,CACI,WAAW,aAAc,CACrB,OAAO,KAAK,YACpB,CACI,WAAW,SAAU,CACjB,OAAO,KAAK,QACpB,CACI,WAAW,QAAS,CAChB,OAAO,KAAK,OACpB,CACA","x_google_ignoreList":[0]}