class ProductLoadedEvent {
    event = 'product loaded';
    product = {};
    constructor(option, type) {
        if (!this.product[type]) {
            this.product[type] = [];
        }
        if ('ID' in option) {
            this.product[type].push(option);
        }
        else {
            this.product[type].push(this.getOptionInfo(option));
        }
    }
    getOptionInfo(option) {
        return {
            ID: option.getProduct().getPlatformId(),
            name: option.getProduct().getName(),
            devices: option.getDevices(), //DEPRECATED content - please remove after Vlaicu implementation
            subscription: option.getSubscription(),
            version: option.getSubscription() === 1 ? "monthly" : "yearly",
            basePrice: option.getPrice({ currency: false }),
            discountValue: option.getDiscount({ symbol: false }),
            discountRate: option.getDiscount({ percentage: true, symbol: false }),
            currency: option.getProduct().getCurrency(),
            grossPrice: option.getDiscountedPrice({ currency: false }) || option.getPrice({ currency: false })
        };
    }
}

export { ProductLoadedEvent };
//# sourceMappingURL=index.js.map
