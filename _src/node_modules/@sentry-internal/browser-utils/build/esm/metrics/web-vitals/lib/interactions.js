import{getInteractionCount as r}from"./polyfills/interactionCountPolyfill.js";const e=[],o=new Map,u=40;let l=0;const I=()=>r()-l,f=()=>{const t=Math.min(e.length-1,Math.floor(I()/50));return e[t]},a=10,d=[],p=t=>{if(d.forEach(n=>n(t)),!(t.interactionId||t.entryType==="first-input"))return;const c=e[e.length-1],i=o.get(t.interactionId);if(i||e.length<a||c&&t.duration>c.latency){if(i)t.duration>i.latency?(i.entries=[t],i.latency=t.duration):t.duration===i.latency&&t.startTime===i.entries[0]?.startTime&&i.entries.push(t);else{const n={id:t.interactionId,latency:t.duration,entries:[t]};o.set(n.id,n),e.push(n)}e.sort((n,s)=>s.latency-n.latency),e.length>a&&e.splice(a).forEach(n=>o.delete(n.id))}};export{u as DEFAULT_DURATION_THRESHOLD,d as entryPreProcessingCallbacks,f as estimateP98LongestInteraction,e as longestInteractionList,o as longestInteractionMap,p as processInteractionEntry};
//# sourceMappingURL=interactions.js.map
