import{getDynamicSamplingContextFromSpan as l}from"./tracing/dynamicSamplingContext.js";import{spanToJSON as m,showSpanDropWarning as y}from"./utils/spanUtils.js";import{dsnToString as u}from"./utils-hoist/dsn.js";import{createEnvelope as d,createSpanEnvelopeItem as E,getSdkMetadataForEnvelopeHeader as k,createEventEnvelopeHeaders as O}from"./utils-hoist/envelope.js";function h(e,n){return n&&(e.sdk=e.sdk||{},e.sdk.name=e.sdk.name||n.name,e.sdk.version=e.sdk.version||n.version,e.sdk.integrations=[...e.sdk.integrations||[],...n.integrations||[]],e.sdk.packages=[...e.sdk.packages||[],...n.packages||[]]),e}function J(e,n,o,s){const t=k(o),a={sent_at:new Date().toISOString(),...t&&{sdk:t},...!!s&&n&&{dsn:u(n)}},p="aggregates"in e?[{type:"sessions"},e]:[{type:"session"},e.toJSON()];return d(a,[p])}function _(e,n,o,s){const t=k(o),a=e.type&&e.type!=="replay_event"?e.type:"event";h(e,o?.sdk);const p=O(e,t,s,n);return delete e.sdkProcessingMetadata,d(p,[[{type:a},e]])}function T(e,n){function o(r){return!!r.trace_id&&!!r.public_key}const s=l(e[0]),t=n?.getDsn(),a=n?.getOptions().tunnel,p={sent_at:new Date().toISOString(),...o(s)&&{trace:s},...!!a&&t&&{dsn:u(t)}},i=n?.getOptions().beforeSendSpan,f=i?r=>{const c=m(r),g=i(c);return g||(y(),c)}:m,S=[];for(const r of e){const c=f(r);c&&S.push(E(c))}return d(p,S)}export{_ as createEventEnvelope,J as createSessionEnvelope,T as createSpanEnvelope};
//# sourceMappingURL=envelope.js.map
