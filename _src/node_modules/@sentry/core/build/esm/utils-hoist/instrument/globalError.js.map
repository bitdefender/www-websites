{"version":3,"file":"globalError.js","sources":["../../../../../../../../node_modules/@sentry/core/build/esm/utils-hoist/instrument/globalError.js"],"sourcesContent":["import { GLOBAL_OBJ } from '../worldwide.js';\nimport { addHandler, maybeInstrument, triggerHandlers } from './handlers.js';\n\nlet _oldOnErrorHandler = null;\n\n/**\n * Add an instrumentation handler for when an error is captured by the global error handler.\n *\n * Use at your own risk, this might break without changelog notice, only used internally.\n * @hidden\n */\nfunction addGlobalErrorInstrumentationHandler(handler) {\n  const type = 'error';\n  addHandler(type, handler);\n  maybeInstrument(type, instrumentError);\n}\n\nfunction instrumentError() {\n  _oldOnErrorHandler = GLOBAL_OBJ.onerror;\n\n  // Note: The reason we are doing window.onerror instead of window.addEventListener('error')\n  // is that we are using this handler in the Loader Script, to handle buffered errors consistently\n  GLOBAL_OBJ.onerror = function (\n    msg,\n    url,\n    line,\n    column,\n    error,\n  ) {\n    const handlerData = {\n      column,\n      error,\n      line,\n      msg,\n      url,\n    };\n    triggerHandlers('error', handlerData);\n\n    if (_oldOnErrorHandler) {\n      // eslint-disable-next-line prefer-rest-params\n      return _oldOnErrorHandler.apply(this, arguments);\n    }\n\n    return false;\n  };\n\n  GLOBAL_OBJ.onerror.__SENTRY_INSTRUMENTED__ = true;\n}\n\nexport { addGlobalErrorInstrumentationHandler };\n//# sourceMappingURL=globalError.js.map\n"],"names":["_oldOnErrorHandler","addGlobalErrorInstrumentationHandler","handler","type","addHandler","maybeInstrument","instrumentError","GLOBAL_OBJ","msg","url","line","column","error","triggerHandlers"],"mappings":"kIAGA,IAAIA,EAAqB,KAQzB,SAASC,EAAqCC,EAAS,CACrD,MAAMC,EAAO,QACbC,EAAWD,EAAMD,CAAO,EACxBG,EAAgBF,EAAMG,CAAe,CACvC,CAEA,SAASA,GAAkB,CACzBN,EAAqBO,EAAW,QAIhCA,EAAW,QAAU,SACnBC,EACAC,EACAC,EACAC,EACAC,EACA,CAUA,OAFAC,EAAgB,QAPI,CAClB,OAAAF,EACA,MAAAC,EACA,KAAAF,EACA,IAAAF,EACA,IAAAC,CACD,CACmC,EAEhCT,EAEKA,EAAmB,MAAM,KAAM,SAAS,EAG1C,EACR,EAEDO,EAAW,QAAQ,wBAA0B,EAC/C","x_google_ignoreList":[0]}