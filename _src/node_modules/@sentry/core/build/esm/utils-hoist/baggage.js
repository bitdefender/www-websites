import{DEBUG_BUILD as d}from"../debug-build.js";import{isString as f}from"./is.js";import{logger as g}from"./logger.js";const s="sentry-",a=/^sentry-/,m=8192;function A(e){const n=E(e);if(!n)return;const r=Object.entries(n).reduce((t,[i,o])=>{if(i.match(a)){const u=i.slice(s.length);t[u]=o}return t},{});if(Object.keys(r).length>0)return r}function _(e){if(!e)return;const n=Object.entries(e).reduce((r,[t,i])=>(i&&(r[`${s}${t}`]=i),r),{});return p(n)}function E(e){if(!(!e||!f(e)&&!Array.isArray(e)))return Array.isArray(e)?e.reduce((n,r)=>{const t=c(r);return Object.entries(t).forEach(([i,o])=>{n[i]=o}),n},{}):c(e)}function c(e){return e.split(",").map(n=>n.split("=").map(r=>{try{return decodeURIComponent(r.trim())}catch{return}})).reduce((n,[r,t])=>(r&&t&&(n[r]=t),n),{})}function p(e){if(Object.keys(e).length!==0)return Object.entries(e).reduce((n,[r,t],i)=>{const o=`${encodeURIComponent(r)}=${encodeURIComponent(t)}`,u=i===0?o:`${n},${o}`;return u.length>m?(d&&g.warn(`Not adding key: ${r} with val: ${t} to baggage header due to exceeding baggage size limits.`),n):u},"")}export{m as MAX_BAGGAGE_STRING_LENGTH,s as SENTRY_BAGGAGE_KEY_PREFIX,a as SENTRY_BAGGAGE_KEY_PREFIX_REGEX,A as baggageHeaderToDynamicSamplingContext,_ as dynamicSamplingContextToSentryBaggageHeader,p as objectToBaggageHeader,E as parseBaggageHeader};
//# sourceMappingURL=baggage.js.map
