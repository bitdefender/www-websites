{"version":3,"file":"measurement.js","sources":["../../../../../../../node_modules/@sentry/core/build/esm/tracing/measurement.js"],"sourcesContent":["import { DEBUG_BUILD } from '../debug-build.js';\nimport { SEMANTIC_ATTRIBUTE_SENTRY_MEASUREMENT_UNIT, SEMANTIC_ATTRIBUTE_SENTRY_MEASUREMENT_VALUE } from '../semanticAttributes.js';\nimport { getActiveSpan, getRootSpan } from '../utils/spanUtils.js';\nimport { logger } from '../utils-hoist/logger.js';\n\n/**\n * Adds a measurement to the active transaction on the current global scope. You can optionally pass in a different span\n * as the 4th parameter.\n */\nfunction setMeasurement(name, value, unit, activeSpan = getActiveSpan()) {\n  const rootSpan = activeSpan && getRootSpan(activeSpan);\n\n  if (rootSpan) {\n    DEBUG_BUILD && logger.log(`[Measurement] Setting measurement on root span: ${name} = ${value} ${unit}`);\n    rootSpan.addEvent(name, {\n      [SEMANTIC_ATTRIBUTE_SENTRY_MEASUREMENT_VALUE]: value,\n      [SEMANTIC_ATTRIBUTE_SENTRY_MEASUREMENT_UNIT]: unit ,\n    });\n  }\n}\n\n/**\n * Convert timed events to measurements.\n */\nfunction timedEventsToMeasurements(events) {\n  if (!events || events.length === 0) {\n    return undefined;\n  }\n\n  const measurements = {};\n  events.forEach(event => {\n    const attributes = event.attributes || {};\n    const unit = attributes[SEMANTIC_ATTRIBUTE_SENTRY_MEASUREMENT_UNIT] ;\n    const value = attributes[SEMANTIC_ATTRIBUTE_SENTRY_MEASUREMENT_VALUE] ;\n\n    if (typeof unit === 'string' && typeof value === 'number') {\n      measurements[event.name] = { value, unit };\n    }\n  });\n\n  return measurements;\n}\n\nexport { setMeasurement, timedEventsToMeasurements };\n//# sourceMappingURL=measurement.js.map\n"],"names":["setMeasurement","name","value","unit","activeSpan","getActiveSpan","rootSpan","getRootSpan","DEBUG_BUILD","logger","SEMANTIC_ATTRIBUTE_SENTRY_MEASUREMENT_VALUE","SEMANTIC_ATTRIBUTE_SENTRY_MEASUREMENT_UNIT","timedEventsToMeasurements","events","measurements","event","attributes"],"mappings":"gTASA,SAASA,EAAeC,EAAMC,EAAOC,EAAMC,EAAaC,EAAa,EAAI,CACvE,MAAMC,EAAWF,GAAcG,EAAYH,CAAU,EAEjDE,IACFE,GAAeC,EAAO,IAAI,mDAAmDR,CAAI,MAAMC,CAAK,IAAIC,CAAI,EAAE,EACtGG,EAAS,SAASL,EAAM,CACtB,CAACS,CAA2C,EAAGR,EAC/C,CAACS,CAA0C,EAAGR,CACpD,CAAK,EAEL,CAKA,SAASS,EAA0BC,EAAQ,CACzC,GAAI,CAACA,GAAUA,EAAO,SAAW,EAC/B,OAGF,MAAMC,EAAe,CAAE,EACvB,OAAAD,EAAO,QAAQE,GAAS,CACtB,MAAMC,EAAaD,EAAM,YAAc,CAAE,EACnCZ,EAAOa,EAAWL,CAA0C,EAC5DT,EAAQc,EAAWN,CAA2C,EAEhE,OAAOP,GAAS,UAAY,OAAOD,GAAU,WAC/CY,EAAaC,EAAM,IAAI,EAAI,CAAE,MAAAb,EAAO,KAAAC,CAAM,EAEhD,CAAG,EAEMW,CACT","x_google_ignoreList":[0]}