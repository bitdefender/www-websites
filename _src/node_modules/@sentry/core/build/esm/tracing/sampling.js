import{DEBUG_BUILD as i}from"../debug-build.js";import{hasSpansEnabled as s}from"../utils/hasSpansEnabled.js";import{parseSampleRate as d}from"../utils/parseSampleRate.js";import{logger as l}from"../utils-hoist/logger.js";function b(r,e,f){if(!s(r))return[!1];let n,a;typeof r.tracesSampler=="function"?(a=r.tracesSampler({...e,inheritOrSampleWith:m=>typeof e.parentSampleRate=="number"?e.parentSampleRate:typeof e.parentSampled=="boolean"?Number(e.parentSampled):m}),n=!0):e.parentSampled!==void 0?a=e.parentSampled:typeof r.tracesSampleRate<"u"&&(a=r.tracesSampleRate,n=!0);const t=d(a);if(t===void 0)return i&&l.warn(`[Tracing] Discarding root span because of invalid sample rate. Sample rate must be a boolean or a number between 0 and 1. Got ${JSON.stringify(a)} of type ${JSON.stringify(typeof a)}.`),[!1];if(!t)return i&&l.log(`[Tracing] Discarding transaction because ${typeof r.tracesSampler=="function"?"tracesSampler returned 0 or false":"a negative sampling decision was inherited or tracesSampleRate is set to 0"}`),[!1,t,n];const p=f<t;return p||i&&l.log(`[Tracing] Discarding transaction because it's not included in the random sample (sampling rate = ${Number(a)})`),[p,t,n]}export{b as sampleSpan};
//# sourceMappingURL=sampling.js.map
