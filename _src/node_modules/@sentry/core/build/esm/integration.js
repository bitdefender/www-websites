import{DEBUG_BUILD as r}from"./debug-build.js";import{logger as c}from"./utils-hoist/logger.js";const a=[];function p(t){const e={};return t.forEach(s=>{const{name:n}=s,o=e[n];o&&!o.isDefaultInstance&&s.isDefaultInstance||(e[n]=s)}),Object.values(e)}function I(t){const e=t.defaultIntegrations||[],s=t.integrations;e.forEach(o=>{o.isDefaultInstance=!0});let n;if(Array.isArray(s))n=[...e,...s];else if(typeof s=="function"){const o=s(e);n=Array.isArray(o)?o:[o]}else n=e;return p(n)}function m(t,e){const s={};return e.forEach(n=>{n&&l(t,n,s)}),s}function y(t,e){for(const s of e)s?.afterAllSetup&&s.afterAllSetup(t)}function l(t,e,s){if(s[e.name]){r&&c.log(`Integration skipped because it was already installed: ${e.name}`);return}if(s[e.name]=e,a.indexOf(e.name)===-1&&typeof e.setupOnce=="function"&&(e.setupOnce(),a.push(e.name)),e.setup&&typeof e.setup=="function"&&e.setup(t),typeof e.preprocessEvent=="function"){const n=e.preprocessEvent.bind(e);t.on("preprocessEvent",(o,f)=>n(o,f,t))}if(typeof e.processEvent=="function"){const n=e.processEvent.bind(e),o=Object.assign((f,u)=>n(f,u,t),{id:e.name});t.addEventProcessor(o)}r&&c.log(`Integration installed: ${e.name}`)}function E(t){return t}export{y as afterSetupIntegrations,E as defineIntegration,I as getIntegrationsToSetup,a as installedIntegrations,l as setupIntegration,m as setupIntegrations};
//# sourceMappingURL=integration.js.map
