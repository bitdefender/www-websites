{"version":3,"file":"linkederrors.js","sources":["../../../../../../../../node_modules/@sentry/browser/build/npm/esm/integrations/linkederrors.js"],"sourcesContent":["import { defineIntegration, applyAggregateErrorsToEvent } from '@sentry/core';\nimport { exceptionFromError } from '../eventbuilder.js';\n\nconst DEFAULT_KEY = 'cause';\nconst DEFAULT_LIMIT = 5;\n\nconst INTEGRATION_NAME = 'LinkedErrors';\n\nconst _linkedErrorsIntegration = ((options = {}) => {\n  const limit = options.limit || DEFAULT_LIMIT;\n  const key = options.key || DEFAULT_KEY;\n\n  return {\n    name: INTEGRATION_NAME,\n    preprocessEvent(event, hint, client) {\n      const options = client.getOptions();\n\n      applyAggregateErrorsToEvent(\n        // This differs from the LinkedErrors integration in core by using a different exceptionFromError function\n        exceptionFromError,\n        options.stackParser,\n        key,\n        limit,\n        event,\n        hint,\n      );\n    },\n  };\n}) ;\n\n/**\n * Aggregrate linked errors in an event.\n */\nconst linkedErrorsIntegration = defineIntegration(_linkedErrorsIntegration);\n\nexport { linkedErrorsIntegration };\n//# sourceMappingURL=linkederrors.js.map\n"],"names":["DEFAULT_KEY","DEFAULT_LIMIT","INTEGRATION_NAME","_linkedErrorsIntegration","options","limit","key","event","hint","client","applyAggregateErrorsToEvent","exceptionFromError","linkedErrorsIntegration","defineIntegration"],"mappings":"qPAGA,MAAMA,EAAc,QACdC,EAAgB,EAEhBC,EAAmB,eAEnBC,EAA4B,CAACC,EAAU,KAAO,CAClD,MAAMC,EAAQD,EAAQ,OAASH,EACzBK,EAAMF,EAAQ,KAAOJ,EAE3B,MAAO,CACL,KAAME,EACN,gBAAgBK,EAAOC,EAAMC,EAAQ,CACnC,MAAML,EAAUK,EAAO,WAAY,EAEnCC,EAEEC,EACAP,EAAQ,YACRE,EACAD,EACAE,EACAC,CACD,CACF,CACF,CACH,EAKMI,EAA0BC,EAAkBV,CAAwB","x_google_ignoreList":[0]}