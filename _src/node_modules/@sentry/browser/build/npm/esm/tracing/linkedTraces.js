import{DEBUG_BUILD as T}from"../debug-build.js";import{WINDOW as m}from"../helpers.js";import{getRootSpan as d,spanToJSON as R}from"../../../../../core/build/esm/utils/spanUtils.js";import{getCurrentScope as u}from"../../../../../core/build/esm/currentScopes.js";import{SEMANTIC_ATTRIBUTE_SENTRY_PREVIOUS_TRACE_SAMPLE_RATE as f,SEMANTIC_LINK_ATTRIBUTE_LINK_TYPE as g,SEMANTIC_ATTRIBUTE_SENTRY_SAMPLE_RATE as E}from"../../../../../core/build/esm/semanticAttributes.js";import{logger as S}from"../../../../../core/build/esm/utils-hoist/logger.js";const I=3600,_="sentry_previous_trace",A="sentry.previous_trace";function y(e,{linkPreviousTrace:n,consistentTraceSampling:a}){const o=n==="session-storage";let r=o?C():void 0;e.on("spanStart",t=>{if(d(t)!==t)return;const i=u().getPropagationContext();r=P(r,t,i),o&&l(r)});let s=!0;a&&e.on("beforeSampling",t=>{if(!r)return;const i=u(),p=i.getPropagationContext();if(s&&p.parentSpanId){s=!1;return}i.setPropagationContext({...p,dsc:{...p.dsc,sample_rate:String(r.sampleRate),sampled:String(c(r.spanContext))},sampleRand:r.sampleRand}),t.parentSampled=c(r.spanContext),t.parentSampleRate=r.sampleRate,t.spanAttributes={...t.spanAttributes,[f]:r.sampleRate}})}function P(e,n,a){const o=R(n);function r(){try{return Number(a.dsc?.sample_rate)??Number(o.data?.[E])}catch{return 0}}const s={spanContext:n.spanContext(),startTimestamp:o.start_timestamp,sampleRate:r(),sampleRand:a.sampleRand};if(!e)return s;const t=e.spanContext;return t.traceId===o.trace_id?e:(Date.now()/1e3-e.startTimestamp<=I&&(T&&S.info(`Adding previous_trace ${t} link to span ${{op:o.op,...n.spanContext()}}`),n.addLink({context:t,attributes:{[g]:"previous_trace"}}),n.setAttribute(A,`${t.traceId}-${t.spanId}-${c(t)?1:0}`)),s)}function l(e){try{m.sessionStorage.setItem(_,JSON.stringify(e))}catch(n){T&&S.warn("Could not store previous trace in sessionStorage",n)}}function C(){try{const e=m.sessionStorage?.getItem(_);return JSON.parse(e)}catch{return}}function c(e){return e.traceFlags===1}export{_ as PREVIOUS_TRACE_KEY,I as PREVIOUS_TRACE_MAX_DURATION,A as PREVIOUS_TRACE_TMP_SPAN_ATTRIBUTE,P as addPreviousTraceSpanLink,C as getPreviousTraceFromSessionStorage,y as linkTraces,c as spanContextSampled,l as storePreviousTraceInSessionStorage};
//# sourceMappingURL=linkedTraces.js.map
