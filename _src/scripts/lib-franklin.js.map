{"version":3,"file":"lib-franklin.js","sources":["../../src/scripts/lib-franklin.js"],"sourcesContent":["/* eslint-disable max-classes-per-file */\n/*\n * Copyright 2022 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport { UserAgent } from '@repobit/dex-utils';\nimport page from './page.js';\n\nconst STICKY_NAVIGATION_SECTION_METADATA_KEY = 'sticky-navigation-item';\nexport const ALL_FRANKLIN_DEV_SUBDOMAINS = ['localhost', '.aem.page', '.aem.live'];\nexport const STICKY_NAVIGATION_DATASET_KEY = 'stickyNavName';\n\n/**\n * log RUM if part of the sample.\n * @param {string} checkpoint identifies the checkpoint in funnel\n * @param {Object} data additional data for RUM sample\n * @param {string} data.source DOM node that is the source of a checkpoint event\n * identified by #id or .classname\n * @param {string} data.target subject of the checkpoint event,\n * for instance the href of a link, or a search term\n */\nexport function sampleRUM(checkpoint, data = {}) {\n  const SESSION_STORAGE_KEY = 'aem-rum';\n  sampleRUM.baseURL = sampleRUM.baseURL || new URL(window.RUM_BASE == null ? 'https://rum.aem.page' : window.RUM_BASE, window.location);\n  sampleRUM.defer = sampleRUM.defer || [];\n  const defer = (fnname) => {\n    sampleRUM[fnname] = sampleRUM[fnname]\n      || ((...args) => sampleRUM.defer.push({ fnname, args }));\n  };\n  sampleRUM.drain = sampleRUM.drain\n    || ((dfnname, fn) => {\n      sampleRUM[dfnname] = fn;\n      sampleRUM.defer\n        .filter(({ fnname }) => dfnname === fnname)\n        .forEach(({ fnname, args }) => sampleRUM[fnname](...args));\n    });\n  sampleRUM.always = sampleRUM.always || [];\n  sampleRUM.always.on = (chkpnt, fn) => { sampleRUM.always[chkpnt] = fn; };\n  sampleRUM.on = (chkpnt, fn) => { sampleRUM.cases[chkpnt] = fn; };\n  defer('observe');\n  defer('cwv');\n  try {\n    window.hlx = window.hlx || {};\n    if (!window.hlx.rum) {\n      const usp = new URLSearchParams(window.location.search);\n      const weight = (usp.get('rum') === 'on') ? 1 : 100; // with parameter, weight is 1. Defaults to 100.\n      // eslint-disable-next-line no-bitwise\n      const id = Array.from({ length: 75 }, (_, i) => String.fromCharCode(48 + i)).filter((a) => /\\d|[A-Z]/i.test(a)).filter(() => Math.random() * 75 > 70).join('');\n      const random = Math.random();\n      const isSelected = (random * weight < 1);\n      const firstReadTime = window.performance ? window.performance.timeOrigin : Date.now();\n      const urlSanitizers = {\n        full: () => window.location.href,\n        origin: () => window.location.origin,\n        path: () => window.location.href.replace(/\\?.*$/, ''),\n      };\n      // eslint-disable-next-line max-len\n      const rumSessionStorage = sessionStorage.getItem(SESSION_STORAGE_KEY) ? JSON.parse(sessionStorage.getItem(SESSION_STORAGE_KEY)) : {};\n      // eslint-disable-next-line object-curly-newline, max-len\n      rumSessionStorage.pages = (rumSessionStorage.pages ? rumSessionStorage.pages : 0) + 1 + /* noise */ (Math.floor(Math.random() * 20) - 10);\n      sessionStorage.setItem(SESSION_STORAGE_KEY, JSON.stringify(rumSessionStorage));\n      window.hlx.rum = {\n        weight, id, random, isSelected, firstReadTime, sampleRUM, sanitizeURL: urlSanitizers[window.hlx.RUM_MASK_URL || 'path'], rumSessionStorage,\n      };\n    }\n    const { weight, id, firstReadTime } = window.hlx.rum;\n    if (window.hlx && window.hlx.rum && window.hlx.rum.isSelected) {\n      const knownProperties = ['weight', 'id', 'referer', 'checkpoint', 't', 'source', 'target', 'cwv', 'CLS', 'FID', 'LCP', 'INP', 'TTFB'];\n      const sendPing = (pdata = data) => {\n        // eslint-disable-next-line max-len\n        const t = Math.round(window.performance ? window.performance.now() : (Date.now() - firstReadTime));\n        // eslint-disable-next-line object-curly-newline, max-len, no-use-before-define\n        const body = JSON.stringify({ weight, id, referer: window.hlx.rum.sanitizeURL(), checkpoint, t, ...data }, knownProperties);\n        const url = new URL(`.rum/${weight}`, sampleRUM.baseURL).href;\n        // eslint-disable-next-line no-unused-expressions\n        navigator.sendBeacon(url, body);\n        // eslint-disable-next-line no-console\n        console.debug(`ping:${checkpoint}`, pdata);\n      };\n      sampleRUM.cases = sampleRUM.cases || {\n        cwv: () => sampleRUM.cwv(data) || true,\n        lazy: () => {\n          // use classic script to avoid CORS issues\n          const script = document.createElement('script');\n          script.src = 'https://rum.aem.page/.rum/@adobe/helix-rum-enhancer@^1/src/index.js';\n          document.head.appendChild(script);\n          return true;\n        },\n      };\n      sendPing(data);\n      if (sampleRUM.cases[checkpoint]) { sampleRUM.cases[checkpoint](); }\n    }\n    if (sampleRUM.always[checkpoint]) { sampleRUM.always[checkpoint](data); }\n  } catch (error) {\n    // something went wrong\n  }\n}\n\n/**\n * Loads a CSS file.\n * @param {string} href URL to the CSS file\n */\nexport async function loadCSS(href) {\n  return new Promise((resolve, reject) => {\n    if (!document.querySelector(`head > link[href=\"${href}\"]`)) {\n      const link = document.createElement('link');\n      link.rel = 'stylesheet';\n      link.href = href;\n      link.onload = resolve;\n      link.onerror = reject;\n      document.head.append(link);\n    } else {\n      resolve();\n    }\n  });\n}\n\n/**\n * Retrieves the content of metadata tags.\n * @param {string} name The metadata name (or property)\n * @returns {string} The metadata value(s)\n */\nexport function getMetadata(name) {\n  const attr = name && name.includes(':') ? 'property' : 'name';\n  const meta = [...document.head.querySelectorAll(`meta[${attr}=\"${name}\"]`)].map((m) => m.content).join(', ');\n  return meta || '';\n}\n\n/**\n * Sanitizes a string for use as class name.\n * @param {string} name The unsanitized string\n * @returns {string} The class name\n */\nexport function toClassName(name) {\n  return typeof name === 'string'\n    ? name.toLowerCase()\n      .replace(/[^\\w\\u4e00-\\u9fa5]/g, '-') // Include Chinese characters in the regular expression\n      .replace(/-+/g, '-') // Replace consecutive hyphens with a single hyphen\n      .replace(/^-|-$/g, '') // Remove leading and trailing hyphens\n    : '';\n}\n\n/**\n * Sanitizes a string for use as a js property name.\n * @param {string} name The unsanitized string\n * @returns {string} The camelCased name\n */\nexport function toCamelCase(name) {\n  return toClassName(name).replace(/-([a-z])/g, (g) => g[1].toUpperCase());\n}\n\n/**\n * Gets all the metadata elements that are in the given scope.\n * @param {String} scope The scope/prefix for the metadata\n * @returns an array of HTMLElement nodes that match the given scope\n */\nexport function getAllMetadata(scope) {\n  return [...document.head.querySelectorAll(`meta[property^=\"${scope}:\"],meta[name^=\"${scope}-\"]`)]\n    .reduce((res, meta) => {\n      const id = toClassName(meta.name\n        ? meta.name.substring(scope.length + 1)\n        : meta.getAttribute('property').split(':')[1]);\n      res[id] = meta.getAttribute('content');\n      return res;\n    }, {});\n}\n\nconst ICONS_CACHE = {};\n/**\n * Replace icons with inline SVG and prefix with codeBasePath.\n * @param {Element} [element] Element containing icons\n */\nasync function internalDecorateIcons(element) {\n  // Download all new icons\n  const icons = [...element.querySelectorAll('span.icon')];\n  await Promise.all(icons.map(async (span) => {\n    const iconName = Array.from(span.classList).find((c) => c.startsWith('icon-')).substring(5);\n    if (!ICONS_CACHE[iconName]) {\n      ICONS_CACHE[iconName] = true;\n      try {\n        const dynamicIconsSharepointPath = '/common/icons/';\n        const response = await fetch(`${dynamicIconsSharepointPath}${iconName}.svg`);\n        if (!response.ok) {\n          ICONS_CACHE[iconName] = false;\n          return;\n        }\n\n        const svg = await response.text();\n        ICONS_CACHE[iconName] = { html: svg };\n      } catch (error) {\n        ICONS_CACHE[iconName] = false;\n        // eslint-disable-next-line no-console\n        console.error(error);\n      }\n    }\n  }));\n\n  icons.forEach((span) => {\n    const iconName = Array.from(span.classList).find((c) => c.startsWith('icon-')).substring(5);\n    const parent = span.firstElementChild?.tagName === 'A' ? span.firstElementChild : span;\n\n    // Set aria-label if the parent is an anchor tag\n    try {\n      const spanParent = span.parentElement;\n      if (spanParent?.tagName === 'A' && !spanParent?.hasAttribute('aria-label')) {\n        spanParent.setAttribute('aria-label', iconName);\n      }\n    } catch (error) {\n      // eslint-disable-next-line no-console\n      console.error(`Error setting aria-label for icon ${iconName}:`, error);\n    }\n\n    parent.innerHTML = ICONS_CACHE[iconName].html;\n  });\n}\n\nlet previousDecoration = Promise.resolve();\n\n/**\n * Replace icons with inline SVG and prefix with codeBasePath.\n * @param {Element} [element] Element containing icons\n */\nexport async function decorateIcons(element) {\n  previousDecoration = previousDecoration.then(() => internalDecorateIcons(element));\n  await previousDecoration;\n}\n\nexport async function decorateTags(element) {\n  const tagTypes = [\n    { regex: /\\[#(.*?)#\\]/g, className: 'dark-blue' },\n    { regex: /\\[{(.*?)}\\]/g, className: 'light-blue' },\n    { regex: /\\[blue-round(.*?)blue-round\\]/g, className: 'light-blue-round' },\n    { regex: /\\[\\$(.*?)\\$\\]/g, className: 'green' },\n  ];\n\n  function replaceTags(inputValue) {\n    let nodeValue = inputValue; // Create a local copy to work on\n    let replaced = false;\n\n    tagTypes.forEach((tagType) => {\n      let match = tagType.regex.exec(nodeValue);\n      while (match !== null) {\n        nodeValue = nodeValue.replace(match[0], `<span class=\"tag tag-${tagType.className}\">${match[1]}</span>`);\n        replaced = true;\n        tagType.regex.lastIndex = 0; // Reset regex index\n        match = tagType.regex.exec(nodeValue);\n      }\n    });\n\n    return { nodeValue, replaced };\n  }\n\n  function replaceTagsInNode(node) {\n    if (node.nodeType === Node.TEXT_NODE) {\n      const originalValue = node.nodeValue;\n      const { nodeValue } = replaceTags(originalValue);\n      if (nodeValue !== originalValue) { // This checks if the nodeValue has been modified.\n        const newNode = document.createElement('span');\n        newNode.innerHTML = nodeValue;\n        node.parentNode.replaceChild(newNode, node);\n      }\n    } else if (node.nodeType === Node.ELEMENT_NODE) {\n      node.childNodes.forEach(replaceTagsInNode);\n    }\n  }\n\n  replaceTagsInNode(element);\n}\n\n/**\n * Decorates a block.\n * @param {Element} block The block element\n */\nexport function decorateBlock(block) {\n  const shortBlockName = block.classList[0];\n  if (shortBlockName) {\n    block.classList.add('block');\n    block.dataset.blockName = shortBlockName;\n    block.dataset.blockStatus = 'initialized';\n    const blockWrapper = block.parentElement;\n    blockWrapper.classList.add(`${shortBlockName}-wrapper`);\n    const section = block.closest('.section');\n    if (section) section.classList.add(`${shortBlockName}-container`);\n  }\n}\n\n/**\n * Extracts the config from a block.\n * @param {Element} block The block element\n * @returns {object} The block config\n */\nexport function readBlockConfig(block) {\n  const config = {};\n  block.querySelectorAll(':scope > div').forEach((row) => {\n    if (row.children) {\n      const cols = [...row.children];\n      if (cols[1]) {\n        const col = cols[1];\n        const name = toClassName(cols[0].textContent);\n        let value = '';\n        if (col.querySelector('a')) {\n          const as = [...col.querySelectorAll('a')];\n          if (as.length === 1) {\n            value = as[0].href;\n          } else {\n            value = as.map((a) => a.href);\n          }\n        } else if (col.querySelector('img')) {\n          const imgs = [...col.querySelectorAll('img')];\n          if (imgs.length === 1) {\n            value = imgs[0].src;\n          } else {\n            value = imgs.map((img) => img.src);\n          }\n        } else if (col.querySelector('p')) {\n          const ps = [...col.querySelectorAll('p')];\n          if (ps.length === 1) {\n            value = ps[0].textContent;\n          } else {\n            value = ps.map((p) => p.textContent);\n          }\n        } else value = row.children[1].textContent;\n        config[name] = value;\n      }\n    }\n  });\n  return config;\n}\n\n/**\n * Decorates all sections in a container element.\n * @param {Element} main The container element\n */\nexport function decorateSections(main) {\n  main.querySelectorAll(':scope > div').forEach((section) => {\n    const wrappers = [];\n    let defaultContent = false;\n    [...section.children].forEach((e) => {\n      if (e.tagName === 'DIV' || !defaultContent) {\n        const wrapper = document.createElement('div');\n        wrappers.push(wrapper);\n        defaultContent = e.tagName !== 'DIV';\n        if (defaultContent) wrapper.classList.add('default-content-wrapper');\n      }\n      wrappers[wrappers.length - 1].append(e);\n    });\n    wrappers.forEach((wrapper) => section.append(wrapper));\n    section.classList.add('section');\n    section.dataset.sectionStatus = 'initialized';\n    section.style.display = 'none';\n\n    /* process section metadata */\n    const sectionMeta = section.querySelector('div.section-metadata');\n    if (sectionMeta) {\n      const meta = readBlockConfig(sectionMeta);\n      Object.keys(meta).forEach((key) => {\n        if (key === 'style') {\n          const styles = meta.style.split(',').map((style) => toClassName(style.trim()));\n          styles.forEach((style) => section.classList.add(style));\n        } else if (key === STICKY_NAVIGATION_SECTION_METADATA_KEY) {\n          section.id = `section-${toClassName(meta[key])}`;\n          section.dataset[STICKY_NAVIGATION_DATASET_KEY] = meta[key];\n        } else if (key === 'id') {\n          section.id = meta[key];\n        } else {\n          section.dataset[toCamelCase(key)] = meta[key];\n        }\n      });\n      sectionMeta.parentNode.remove();\n    }\n  });\n}\n\n/**\n * Updates all section status in a container element.\n * @param {Element} main The container element\n */\nexport function updateSectionsStatus(main) {\n  const sections = [...main.querySelectorAll(':scope > div.section')];\n  for (let i = 0; i < sections.length; i += 1) {\n    const section = sections[i];\n    const status = section.dataset.sectionStatus;\n    if (status !== 'loaded') {\n      const loadingBlock = section.querySelector('.block[data-block-status=\"initialized\"], .block[data-block-status=\"loading\"]');\n      if (loadingBlock) {\n        section.dataset.sectionStatus = 'loading';\n        break;\n      } else {\n        section.dataset.sectionStatus = 'loaded';\n        section.style.display = null;\n      }\n    }\n  }\n}\n\n/**\n * Decorates all blocks in a container element.\n * @param {Element} main The container element\n */\nexport function decorateBlocks(main) {\n  main\n    .querySelectorAll('div.section > div > div')\n    .forEach(decorateBlock);\n}\n\n/**\n * Builds a block DOM Element from a two dimensional array, string, or object\n * @param {string} blockName name of the block\n * @param {*} content two dimensional array or string or object of content\n */\nexport function buildBlock(blockName, content) {\n  const table = Array.isArray(content) ? content : [[content]];\n  const blockEl = document.createElement('div');\n  // build image block nested div structure\n  blockEl.classList.add(blockName);\n  table.forEach((row) => {\n    const rowEl = document.createElement('div');\n    row.forEach((col) => {\n      const colEl = document.createElement('div');\n      const vals = col.elems ? col.elems : [col];\n      vals.forEach((val) => {\n        if (val) {\n          if (typeof val === 'string') {\n            colEl.innerHTML += val;\n          } else {\n            colEl.appendChild(val);\n          }\n        }\n      });\n      rowEl.appendChild(colEl);\n    });\n    blockEl.appendChild(rowEl);\n  });\n  return (blockEl);\n}\n\n/**\n * Gets the configuration for the given block, and also passes\n * the config through all custom patching helpers added to the project.\n *\n * @param {Element} block The block element\n * @returns {Object} The block config (blockName, cssPath and jsPath)\n */\nfunction getBlockConfig(block) {\n  const { blockName } = block.dataset;\n  const cssPath = `${window.hlx.codeBasePath}/blocks/${blockName}/${blockName}.css`;\n  const jsPath = `${window.hlx.codeBasePath}/blocks/${blockName}/${blockName}.js`;\n  const original = { blockName, cssPath, jsPath };\n  return (window.hlx.patchBlockConfig || [])\n    .filter((fn) => typeof fn === 'function')\n    .reduce((config, fn) => fn(config, original), { blockName, cssPath, jsPath });\n}\n\n/**\n * Loads JS and CSS for a module and executes it's default export.\n * @param {string} name The module name\n * @param {string} jsPath The JS file to load\n * @param {string} [cssPath] An optional CSS file to load\n * @param {object[]} [args] Parameters to be passed to the default export when it is called\n */\nasync function loadModule(name, jsPath, cssPath, ...args) {\n  const cssLoaded = cssPath ? loadCSS(cssPath) : Promise.resolve();\n  const decorationComplete = jsPath\n    ? new Promise((resolve) => {\n      (async () => {\n        let mod;\n        try {\n          mod = await import(jsPath);\n          if (mod.default) {\n            await mod.default.apply(null, args);\n          }\n        } catch (error) {\n          // eslint-disable-next-line no-console\n          console.log(`failed to load module for ${name}`, error);\n        }\n        resolve(mod);\n      })();\n    })\n    : Promise.resolve();\n  return Promise.all([cssLoaded, decorationComplete])\n    .then(([, api]) => api);\n}\n\n/**\n * Loads JS and CSS for a block.\n * @param {Element} block The block element\n */\nexport async function loadBlock(block) {\n  const status = block.dataset.blockStatus;\n  if (status !== 'loading' && status !== 'loaded') {\n    block.dataset.blockStatus = 'loading';\n    const { blockName, cssPath, jsPath } = getBlockConfig(block);\n    try {\n      await loadModule(blockName, jsPath, cssPath, block);\n    } catch (error) {\n      // eslint-disable-next-line no-console\n      console.log(`failed to load block ${blockName}`, error);\n    }\n    block.dataset.blockStatus = 'loaded';\n  }\n}\n\n/**\n * Loads JS and CSS for all blocks in a container element.\n * @param {Element} main The container element\n */\nexport async function loadBlocks(main) {\n  updateSectionsStatus(main);\n  const blocks = [...main.querySelectorAll('div.block')];\n  for (let i = 0; i < blocks.length; i += 1) {\n    // eslint-disable-next-line no-await-in-loop\n    await loadBlock(blocks[i]);\n    updateSectionsStatus(main);\n  }\n}\n\n/**\n * Returns a picture element with webp and fallbacks\n * @param {string} src The image URL\n * @param {string} [alt] The image alternative text\n * @param {boolean} [eager] Set loading attribute to eager\n * @param {Array} [breakpoints] Breakpoints and corresponding params (eg. width)\n * @returns {Element} The picture element\n */\nexport function createOptimizedPicture(src, alt = '', eager = false, breakpoints = [{ media: '(min-width: 600px)', width: '2000' }, { width: '750' }]) {\n  const url = new URL(src, window.location.href);\n  const picture = document.createElement('picture');\n  const { pathname } = url;\n  const ext = pathname.substring(pathname.lastIndexOf('.') + 1);\n\n  // webp\n  breakpoints.forEach((br) => {\n    const source = document.createElement('source');\n    if (br.media) source.setAttribute('media', br.media);\n    source.setAttribute('type', 'image/webp');\n    source.setAttribute('srcset', `${pathname}?width=${br.width}&format=webply&optimize=medium`);\n    picture.appendChild(source);\n  });\n\n  // fallback\n  breakpoints.forEach((br, i) => {\n    if (i < breakpoints.length - 1) {\n      const source = document.createElement('source');\n      if (br.media) source.setAttribute('media', br.media);\n      source.setAttribute('srcset', `${pathname}?width=${br.width}&format=${ext}&optimize=medium`);\n      picture.appendChild(source);\n    } else {\n      const img = document.createElement('img');\n      img.setAttribute('loading', eager ? 'eager' : 'lazy');\n      img.setAttribute('alt', alt);\n      picture.appendChild(img);\n      img.setAttribute('src', `${pathname}?width=${br.width}&format=${ext}&optimize=medium`);\n    }\n  });\n\n  return picture;\n}\n\nexport function setImageDimensions(pictureElement, width, height) {\n  const imgTag = pictureElement.querySelector('img');\n  if (imgTag) {\n    imgTag.setAttribute('width', width);\n    imgTag.setAttribute('height', height);\n  }\n}\n\n/**\n * Normalizes all headings within a container element.\n * @param {Element} el The container element\n * @param {string} allowedHeadings The list of allowed headings (h1 ... h6)\n */\nexport function normalizeHeadings(el, allowedHeadings) {\n  const allowed = allowedHeadings.map((h) => h.toLowerCase());\n  el.querySelectorAll('h1, h2, h3, h4, h5, h6').forEach((tag) => {\n    const h = tag.tagName.toLowerCase();\n    if (allowed.indexOf(h) === -1) {\n      // current heading is not in the allowed list -> try first to \"promote\" the heading\n      let level = parseInt(h.charAt(1), 10) - 1;\n      while (allowed.indexOf(`h${level}`) === -1 && level > 0) {\n        level -= 1;\n      }\n      if (level === 0) {\n        // did not find a match -> try to \"downgrade\" the heading\n        while (allowed.indexOf(`h${level}`) === -1 && level < 7) {\n          level += 1;\n        }\n      }\n      if (level !== 7) {\n        tag.outerHTML = `<h${level} id=\"${tag.id}\">${tag.textContent}</h${level}>`;\n      }\n    }\n  });\n}\n\n/**\n * Set template (page structure) and theme (page styles).\n */\nexport function decorateTemplateAndTheme() {\n  const addClasses = (element, classes) => {\n    classes.split(',').forEach((c) => {\n      element.classList.add(toClassName(c.trim()));\n    });\n  };\n  const darkMode = page.getParamValue('theme');\n  if (darkMode && darkMode === 'dark') addClasses(document.body, 'dark-mode');\n  const template = getMetadata('template');\n  if (template) addClasses(document.body, template);\n  const theme = getMetadata('theme');\n  if (theme) addClasses(document.body, theme);\n}\n\n/**\n * Decorates paragraphs containing a single link as buttons.\n * @param {Element} element container element\n */\nexport function decorateButtons(element) {\n  const wrapButtonText = (a) => ((a.innerHTML.startsWith('<'))\n    ? `${a.querySelector('span.icon')?.outerHTML || ''}<span class=\"button-text\">${a.textContent}</span>`\n    : `<span class=\"button-text\">${a.textContent}</span>${a.querySelector('span.icon')?.outerHTML || ''}`\n  );\n  element.querySelectorAll('a').forEach((a) => {\n    if (a.closest('.nav-brand') || a.closest('.nav-sections')) {\n      return;\n    }\n\n    a.title = a.title || a.textContent;\n    if (a.href !== a.textContent) {\n      const up = a.parentElement;\n      const twoup = a.parentElement.parentElement;\n      const threeup = a.parentElement.parentElement?.parentElement;\n\n      if (!a.querySelector('img')) {\n        if (a.innerText?.includes('[hide-mobile]')) {\n          if (UserAgent.os === 'ios' || UserAgent.os === 'android') {\n            a.remove();\n            return;\n          }\n          const buttonText = a.innerText;\n          a.innerText = buttonText.replace('[hide-mobile]', '');\n        }\n\n        // Example: <p><strong><a href=\"example.com\">Text</a></strong></p>\n        if (up.childNodes.length === 1 && up.tagName === 'STRONG'\n          && twoup.childNodes.length === 1 && twoup.tagName === 'P') {\n          a.className = 'button primary';\n          twoup.classList.add('button-container');\n          up.replaceWith(a);\n          a.innerHTML = wrapButtonText(a);\n          return;\n        }\n\n        if (up.childNodes.length === 1 && up.tagName === 'EM'\n            && twoup.childNodes.length === 1 && twoup.tagName === 'STRONG'\n            && threeup?.childNodes.length === 1 && threeup?.tagName === 'P') {\n          a.className = 'button secondary';\n          threeup.classList.add('button-container');\n          up.replaceWith(a);\n          a.innerHTML = wrapButtonText(a);\n          return;\n        }\n        // Example: <p><a href=\"example.com\">Text</a> (example.com)</p>\n        if (up.childNodes.length === 1 && up.tagName === 'P' && a.href.includes('/fragments/')) {\n          a.className = 'button modal';\n          up.classList.add('button-container');\n          return;\n        }\n\n        // Example: <p><a href=\"https://central.bitdefender.com\">Text</a> (example text)</p>\n        if (up.childNodes.length === 1 && up.tagName === 'P' && a.href.includes('central.bitdefender')) {\n          a.className = 'button central';\n          up.classList.add('button-container');\n          return;\n        }\n\n        // Example: <p><a href=\"example.com\">Text</a> <em>50% Discount</em></p>\n        if (up.childNodes.length === 3 && up.tagName === 'P' && a.nextElementSibling?.tagName === 'EM') {\n          a.className = 'button';\n          up.classList.add('button-container');\n          a.innerHTML = wrapButtonText(a);\n          a.dataset.modal = a.nextSibling.textContent.trim().slice(1, -1);\n          a.nextSibling.remove();\n          return;\n        }\n        // Example: <p><a href=\"example.com\">? Text</a></p>\n        if (up.childNodes.length === 1 && up.tagName === 'P' && up.innerText.startsWith('?')) {\n          a.className = 'info-button modal';\n          up.classList.add('info-button-container');\n          a.textContent = a.textContent.slice(1).trim();\n          a.title = a.title.slice(1).trim();\n          return;\n        }\n\n        if (up.childNodes.length === 1 && up.tagName === 'P' && up.innerText.startsWith('->')) {\n          a.className = 'button link-arrow-right';\n          up.classList.add('button-container');\n          a.textContent = a.textContent.slice(2).trim();\n          a.title = a.title.slice(2).trim();\n          return;\n        }\n\n        // Example: <p><a href=\"example.com\">Text</a></p>\n        if (up.childNodes.length === 1 && (up.tagName === 'P' || up.tagName === 'DIV')) {\n          a.className = 'button'; // default\n          up.classList.add('button-container');\n          a.innerHTML = wrapButtonText(a);\n        }\n\n        if (up.tagName === 'TD' && up.closest('table.ratings')) {\n          a.className = 'button';\n          up.classList.add('button-container');\n          a.innerHTML = wrapButtonText(a);\n        }\n      }\n    }\n  });\n}\n\n/**\n * Load LCP block and/or wait for LCP in default content.\n */\nexport async function waitForLCP(lcpBlocks) {\n  const block = document.querySelector('.block');\n  const hasLCPBlock = (block && lcpBlocks.includes(block.dataset.blockName));\n  if (hasLCPBlock) await loadBlock(block);\n\n  document.body.style.display = null;\n  const lcpCandidate = document.querySelector('main img');\n  await new Promise((resolve) => {\n    if (lcpCandidate && !lcpCandidate.complete) {\n      lcpCandidate.setAttribute('loading', 'eager');\n      lcpCandidate.addEventListener('load', resolve);\n      lcpCandidate.addEventListener('error', resolve);\n    } else {\n      resolve();\n    }\n  });\n}\n\n/**\n * Loads a block named 'header' into header\n * @param {Element} header header element\n * @returns {Promise}\n */\nexport function loadHeader(header) {\n  const headerBlock = buildBlock('header', '');\n  header.append(headerBlock);\n  decorateBlock(headerBlock);\n  return loadBlock(headerBlock);\n}\n\n/**\n * Loads a block named 'footer' into footer\n * @param footer footer element\n * @returns {Promise}\n */\nexport function loadFooter(footer) {\n  const footerBlock = buildBlock('footer', '');\n  footer.append(footerBlock);\n  decorateBlock(footerBlock);\n  return loadBlock(footerBlock);\n}\n\nfunction parsePluginParams(id, config) {\n  const pluginId = !config\n    ? id.split('/').splice(id.endsWith('/') ? -2 : -1, 1)[0].replace(/\\.js/, '')\n    : id;\n  const pluginConfig = {\n    load: 'eager',\n    ...(typeof config === 'string' || !config\n      ? { url: (config || id).replace(/\\/$/, '') }\n      : config),\n  };\n  pluginConfig.options ||= {};\n  return { id: pluginId, config: pluginConfig };\n}\n\n// Define an execution context for plugins\nexport const executionContext = {\n  createOptimizedPicture,\n  getAllMetadata,\n  getMetadata,\n  decorateBlock,\n  decorateButtons,\n  decorateIcons,\n  loadBlock,\n  loadCSS,\n  sampleRUM,\n  toCamelCase,\n  toClassName,\n};\n\nclass PluginsRegistry {\n  #plugins;\n\n  constructor() {\n    this.#plugins = new Map();\n  }\n\n  // Register a new plugin\n  add(id, config) {\n    const { id: pluginId, config: pluginConfig } = parsePluginParams(id, config);\n    this.#plugins.set(pluginId, pluginConfig);\n  }\n\n  // Get the plugin\n  get(id) { return this.#plugins.get(id); }\n\n  // Check if the plugin exists\n  includes(id) { return !!this.#plugins.has(id); }\n\n  // Load all plugins that are referenced by URL, and updated their configuration with the\n  // actual API they expose\n  async load(phase) {\n    [...this.#plugins.entries()]\n      .filter(([, plugin]) => plugin.condition\n      && !plugin.condition(document, plugin.options, executionContext))\n      .map(([id]) => this.#plugins.delete(id));\n    return Promise.all([...this.#plugins.entries()]\n      // Filter plugins that don't match the execution conditions\n      .filter(([, plugin]) => (\n        (!plugin.condition || plugin.condition(document, plugin.options, executionContext))\n        && phase === plugin.load && plugin.url\n      ))\n      .map(async ([key, plugin]) => {\n        try {\n          // If the plugin has a default export, it will be executed immediately\n          const pluginApi = (await loadModule(\n            key,\n            !plugin.url.endsWith('.js') ? `${plugin.url}/${key}.js` : plugin.url,\n            !plugin.url.endsWith('.js') ? `${plugin.url}/${key}.css` : null,\n            document,\n            plugin.options,\n            executionContext,\n          )) || {};\n          this.#plugins.set(key, { ...plugin, ...pluginApi });\n        } catch (err) {\n          // eslint-disable-next-line no-console\n          console.error('Could not load specified plugin', key);\n        }\n      }));\n  }\n\n  // Run a specific phase in the plugin\n  async run(phase) {\n    return [...this.#plugins.values()]\n      .reduce((promise, plugin) => ( // Using reduce to execute plugins sequencially\n        plugin[phase] && (!plugin.condition\n            || plugin.condition(document, plugin.options, executionContext))\n          ? promise.then(() => plugin[phase](document, plugin.options, executionContext))\n          : promise\n      ), Promise.resolve());\n  }\n}\n\nclass TemplatesRegistry {\n  // Register a new template\n  // eslint-disable-next-line class-methods-use-this\n  add(id, url) {\n    if (Array.isArray(id)) {\n      id.forEach((i) => window.hlx.templates.add(i));\n      return;\n    }\n    const { id: templateId, config: templateConfig } = parsePluginParams(id, url);\n    templateConfig.condition = () => toClassName(getMetadata('template')) === templateId;\n    window.hlx.plugins.add(templateId, templateConfig);\n  }\n\n  // Get the template\n  // eslint-disable-next-line class-methods-use-this\n  get(id) { return window.hlx.plugins.get(id); }\n\n  // Check if the template exists\n  // eslint-disable-next-line class-methods-use-this\n  includes(id) { return window.hlx.plugins.includes(id); }\n}\n\n/**\n * Setup block utils.\n */\nexport function setup() {\n  window.hlx = window.hlx || {};\n  window.hlx.RUM_MASK_URL = 'full';\n  window.hlx.codeBasePath = '';\n  window.hlx.lighthouse = new URLSearchParams(window.location.search).get('lighthouse') === 'on';\n  window.hlx.patchBlockConfig = [];\n  window.hlx.plugins = new PluginsRegistry();\n  window.hlx.templates = new TemplatesRegistry();\n\n  const scriptEl = document.querySelector('script[src$=\"/_src/scripts/scripts.js\"]');\n  if (scriptEl) {\n    try {\n      [window.hlx.codeBasePath] = new URL(scriptEl.src).pathname.split('/scripts/scripts.js');\n    } catch (error) {\n      // eslint-disable-next-line no-console\n      console.log(error);\n    }\n  }\n}\n\nfunction initialiseSentry() {\n  window.sentryOnLoad = () => {\n    window.Sentry.init({\n      // Alternatively, use `process.env.npm_package_version` for a dynamic release version\n      // if your build tool supports it.\n      release: 'www-websites@1.0.0',\n      // Set tracesSampleRate to 1.0 to capture 100%\n      // of transactions for tracing.\n      // We recommend adjusting this value in production\n      // Learn more at\n      // https://docs.sentry.io/platforms/javascript/configuration/options/#traces-sample-rate\n      tracesSampleRate: 0.05,\n      // Capture Replay for 10% of all sessions,\n      // plus for 100% of sessions with an error\n      // Learn more at\n      // https://docs.sentry.io/platforms/javascript/session-replay/configuration/#general-integration-configuration\n      replaysSessionSampleRate: 0.1,\n      replaysOnErrorSampleRate: 1.0,\n\n      allowUrls: ['www.bitdefender.com'],\n    });\n  };\n}\n\n/**\n * Auto initializiation.\n */\nfunction init() {\n  initialiseSentry();\n  setup();\n  sampleRUM('top');\n\n  window.addEventListener('load', () => sampleRUM('load'));\n\n  window.addEventListener('unhandledrejection', (event) => {\n    sampleRUM('error', { source: event.reason.sourceURL, target: event.reason.line });\n  });\n\n  window.addEventListener('error', (event) => {\n    sampleRUM('error', { source: event.filename, target: event.lineno });\n  });\n}\n\ninit();\n"],"names":["weight","id","firstReadTime"],"mappings":"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"}