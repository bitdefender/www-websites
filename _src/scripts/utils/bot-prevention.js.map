{"version":3,"file":"bot-prevention.js","sources":["../../../src/scripts/utils/bot-prevention.js"],"sourcesContent":["// eslint-disable-next-line import/prefer-default-export\nexport class BotPrevention {\n  static MAX_EXECUTION_TIME = 2 * 60 * 1000;\n\n  static EXECUTION_TIME_LIMIT = 0.5 * 1000;\n\n  static MIN_DIFFICULTY = 2;\n\n  static MIN_COMPLEXITY = 100;\n\n  static POW_CONFIG = {};\n\n  static async solveChallange({pow_challenge, difficulty, complexity, allow_inc}) {\n    try {\n      const nonces = [];\n      let powPrefix = pow_challenge;\n      let executionTime = 0;\n      const startExecution = Date.now();\n      for (let i = 0; i < complexity; i++) {\n        const solution = await this.findNonce(powPrefix, difficulty);\n        powPrefix += solution.nonce;\n        nonces.push(solution.nonce);\n\n        executionTime = Date.now() - startExecution;\n        if (allow_inc === true && executionTime >= this.EXECUTION_TIME_LIMIT) {\n          break;\n        }\n        if (this.MAX_EXECUTION_TIME > 0 && executionTime > this.MAX_EXECUTION_TIME) {\n          throw new Error('Max execution time exceceded!');\n        }\n      }\n      return { nonces, executionTime };\n    } catch (err) {\n      return {};\n    }\n  }\n\n  static generateStringOfZeroes(charNo) {\n    let string = '';\n    for (let i = 0; i < charNo; i++) {\n      string += '0';\n    }\n    return string;\n  }\n\n  static convertHexCharToBinaryString(char) {\n    switch (char.toUpperCase()) {\n      case '0': return '0000';\n      case '1': return '0001';\n      case '2': return '0010';\n      case '3': return '0011';\n      case '4': return '0100';\n      case '5': return '0101';\n      case '6': return '0110';\n      case '7': return '0111';\n      case '8': return '1000';\n      case '9': return '1001';\n      case 'A': return '1010';\n      case 'B': return '1011';\n      case 'C': return '1100';\n      case 'D': return '1101';\n      case 'E': return '1110';\n      case 'F': return '1111';\n      default: return '0000';\n    }\n  }\n\n  static extractLeadingBitsFromHexString(hexString, numBits) {\n    let bitString = '';\n    const numChars = Math.ceil(numBits / 4);\n    for (let i = 0; i < numChars; i++) {\n      bitString = `${bitString}${this.convertHexCharToBinaryString(hexString.charAt(i))}`;\n    }\n    bitString = bitString.substr(0, numBits);\n    return bitString;\n  }\n\n  static async findNonce(challenge, difficulty) {\n    try {\n      const startExecution = Date.now();\n      let nonce = 1;\n      let executionTime = 1;\n      let hashedValue = await this.sha256(challenge + nonce);\n      const solutionPrefix = this.generateStringOfZeroes(difficulty);\n\n      while (this.extractLeadingBitsFromHexString(hashedValue, difficulty) !== solutionPrefix) {\n        nonce++;\n        hashedValue = await this.sha256(challenge + nonce);\n        executionTime = Date.now() - startExecution;\n        if (this.MAX_EXECUTION_TIME > 0 && executionTime > this.MAX_EXECUTION_TIME) {\n          throw new Error('Max execution time exceceded!');\n        }\n      }\n      return { nonce, executionTime };\n    } catch (err) {\n      return {};\n    }\n  }\n\n  static async sha256(message) {\n    // Encode the message as UTF-8\n    const msgBuffer = new TextEncoder().encode(message);\n\n    // Compute the hash\n    const hashBuffer = await crypto.subtle.digest('SHA-256', msgBuffer);\n\n    // Convert ArrayBuffer to byte array\n    const hashArray = Array.from(new Uint8Array(hashBuffer));\n\n    // Convert bytes to hex string\n    const hashHex = hashArray.map((b) => b.toString(16).padStart(2, '0')).join('');\n\n    return hashHex;\n  }\n}\n"],"names":[],"mappings":"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"}