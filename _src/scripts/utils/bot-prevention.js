class E{static MAX_EXECUTION_TIME=2*60*1e3;static EXECUTION_TIME_LIMIT=.5*1e3;static MIN_DIFFICULTY=2;static MIN_COMPLEXITY=100;static POW_CONFIG={};static async solveChallange({pow_challenge:e,difficulty:r,complexity:t,allow_inc:a}){try{const n=[];let s=e,c=0;const u=Date.now();for(let i=0;i<t;i++){const o=await this.findNonce(s,r);if(s+=o.nonce,n.push(o.nonce),c=Date.now()-u,a===!0&&c>=this.EXECUTION_TIME_LIMIT)break;if(this.MAX_EXECUTION_TIME>0&&c>this.MAX_EXECUTION_TIME)throw new Error("Max execution time exceceded!")}return{nonces:n,executionTime:c}}catch{return{}}}static generateStringOfZeroes(e){let r="";for(let t=0;t<e;t++)r+="0";return r}static convertHexCharToBinaryString(e){switch(e.toUpperCase()){case"0":return"0000";case"1":return"0001";case"2":return"0010";case"3":return"0011";case"4":return"0100";case"5":return"0101";case"6":return"0110";case"7":return"0111";case"8":return"1000";case"9":return"1001";case"A":return"1010";case"B":return"1011";case"C":return"1100";case"D":return"1101";case"E":return"1110";case"F":return"1111";default:return"0000"}}static extractLeadingBitsFromHexString(e,r){let t="";const a=Math.ceil(r/4);for(let n=0;n<a;n++)t=`${t}${this.convertHexCharToBinaryString(e.charAt(n))}`;return t=t.substr(0,r),t}static async findNonce(e,r){try{const t=Date.now();let a=1,n=1,s=await this.sha256(e+a);const c=this.generateStringOfZeroes(r);for(;this.extractLeadingBitsFromHexString(s,r)!==c;)if(a++,s=await this.sha256(e+a),n=Date.now()-t,this.MAX_EXECUTION_TIME>0&&n>this.MAX_EXECUTION_TIME)throw new Error("Max execution time exceceded!");return{nonce:a,executionTime:n}}catch{return{}}}static async sha256(e){const r=new TextEncoder().encode(e),t=await crypto.subtle.digest("SHA-256",r);return Array.from(new Uint8Array(t)).map(s=>s.toString(16).padStart(2,"0")).join("")}}export{E as BotPrevention};
//# sourceMappingURL=bot-prevention.js.map
