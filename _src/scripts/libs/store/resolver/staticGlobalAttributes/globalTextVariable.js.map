{"version":3,"file":"globalTextVariable.js","sources":["../../../../../../src/scripts/libs/store/resolver/staticGlobalAttributes/globalTextVariable.js"],"sourcesContent":["import { GlobalContext } from \"../resolver.js\";\nimport { Constants } from \"../../../constants.js\";\n\n/**\n * @param {string} hideCondition\n * @returns {boolean} if the hiding condition is true, the text will be hidden otherwise it will still be displayed\n */\nconst checkHidingCondition = (hideCondition) => {\n\n    if (!hideCondition) {\n        return false;\n    }\n\n    switch (hideCondition) {\n        case ('no-price'):\n            return !GlobalContext.variations.some(option => option.getPrice(\"value\"));\n        case ('no-price-discounted'):\n            return !GlobalContext.variations.some(option => option.getDiscountedPrice(\"value\"));\n        default:\n            return true;\n    }\n};\n\n/**\n *  @param {\"min\"|\"max\"} value\n *  @param {import(\"../../index.js\").ProductOption[]} options\n *  @param {function} fn\n *  @returns {import(\"../../index.js\").ProductOption}\n */\nconst getMinOrMax = (value, options, fn) => {\n    let minOrMax = value === \"max\" ? Number.MIN_SAFE_INTEGER : Number.MAX_SAFE_INTEGER;\n    let productValue = null;\n\n    for (const option of options) {\n        let localValue = fn(option);\n        localValue = Constants.PRODUCT_ID_MAPPINGS[option.getId()].isMonthlyProduct ? localValue * 12 : localValue;\n        if (localValue && (value === \"min\" && localValue < minOrMax) || (value === \"max\" && localValue > minOrMax)) {\n            minOrMax = localValue;\n            productValue = option;\n        }\n    }\n\n    return productValue;\n}\n\n/**\n *\n * @param {string} text\n * @param {string[]} variableParameters\n * @param {string} textVariable\n * @returns {string} returns the initial text with the replaced variable or the actual initial text when the variable cannot be replaced\n */\nconst replaceVariable = (text, variableParameters, textVariable) => {\n\n    /**\n     * @type {import(\"../../index.js\").ProductOption[]}\n     */\n    const options = GlobalContext.variations;\n    let stopVariableSearch = false;\n    let option = null;\n\n    if (options.length === 0) {\n        return;\n    }\n\n    for (const variableParameter of variableParameters) {\n        switch (variableParameter) {\n            case \"GLOBAL_SMALLEST_PRICE_FULL\":\n                option = getMinOrMax(\"min\", options, option => option.getPrice(\"value\"));\n                if (!option) {\n                    break;\n                }\n\n                text = text.replaceAll(textVariable, option.getPrice(\"valueWithCurrency\"));\n                stopVariableSearch = true;\n                break;\n            case \"GLOBAL_BIGGEST_PRICE_FULL\":\n                option = getMinOrMax(\"max\", options, option => option.getPrice(\"value\"));\n                if (!option) {\n                    break;\n                }\n\n                text = text.replaceAll(textVariable, option.getPrice(\"valueWithCurrency\"));\n                stopVariableSearch = true;\n                break;\n            case \"GLOBAL_SMALLEST_PRICE_DISCOUNTED\":\n                option = getMinOrMax(\"min\", options, option => option.getDiscountedPrice(\"value\"));\n                if (!option) {\n                    break;\n                }\n\n                text = text.replaceAll(textVariable, option.getDiscountedPrice(\"valueWithCurrency\"));\n                stopVariableSearch = true;\n                break;\n            case \"GLOBAL_BIGGEST_PRICE_DISCOUNTED\":\n                option = getMinOrMax(\"max\", options, option => option.getDiscountedPrice(\"value\"));\n                if (!option) {\n                    break;\n                }\n\n                text = text.replaceAll(textVariable, option.getDiscountedPrice(\"valueWithCurrency\"));\n                stopVariableSearch = true;\n                break;\n            case \"GLOBAL_SMALLEST_DISCOUNT_PERCENTAGE\":\n                option = getMinOrMax(\"min\", options, option => option.getDiscount(\"percentage\"))\n                if (!option) {\n                    break;\n                }\n\n                text = text.replaceAll(textVariable, option.getDiscount(\"percentageWithProcent\"));\n                stopVariableSearch = true;\n                break;\n            case \"GLOBAL_BIGGEST_DISCOUNT_PERCENTAGE\":\n                option = getMinOrMax(\"max\", options, option => option.getDiscount(\"percentage\"));\n                if (!option) {\n                    break;\n                }\n\n                text = text.replaceAll(textVariable, option.getDiscount(\"percentageWithProcent\"));\n                stopVariableSearch = true;\n                break;\n            case \"GLOBAL_SMALLEST_DISCOUNT_VALUE\":\n                option = getMinOrMax(\"min\", options, option => option.getDiscount(\"value\"))\n                if (!option) {\n                    break;\n                }\n\n                text = text.replaceAll(textVariable, option.getDiscount(\"valueWithCurrency\"));\n                stopVariableSearch = true;\n                break;\n            case \"GLOBAL_BIGGEST_DISCOUNT_VALUE\":\n                option = getMinOrMax(\"max\", options, option => option.getDiscount(\"value\"));\n                if (!option) {\n                    break;\n                }\n\n                text = text.replaceAll(textVariable, option.getDiscount(\"valueWithCurrency\"));\n                stopVariableSearch = true;\n                break;\n            case \"GLOBAL_SMALLEST_PRICE_PER_MONTH\":\n                option = getMinOrMax(\"min\", options, option => option.getPrice(\"monthly\"))\n                if (!option) {\n                    break;\n                }\n\n                text = text.replaceAll(textVariable, option.getPrice(\"monthlyWithCurrency\"));\n                stopVariableSearch = true;\n                break;\n            case \"GLOBAL_BIGGEST_PRICE_PER_MONTH\":\n                option = getMinOrMax(\"max\", options, option => option.getPrice(\"monthly\"));\n                if (!option) {\n                    break;\n                }\n\n                text = text.replaceAll(textVariable, option.getPrice(\"monthlyWithCurrency\"));\n                stopVariableSearch = true;\n                break;\n            case \"GLOBAL_SMALLEST_PRICE_DISCOUNTED_PER_MONTH\":\n                option = getMinOrMax(\"min\", options, option => option.getDiscountedPrice(\"monthly\"))\n                if (!option) {\n                    break;\n                }\n\n                text = text.replaceAll(textVariable, option.getDiscountedPrice(\"monthlyWithCurrency\"));\n                stopVariableSearch = true;\n                break;\n            case \"GLOBAL_BIGGEST_PRICE_DISCOUNTED_PER_MONTH\":\n                option = getMinOrMax(\"max\", options, option => option.getDiscountedPrice(\"monthly\"));\n                if (!option) {\n                    break;\n                }\n\n                text = text.replaceAll(textVariable, option.getDiscountedPrice(\"monthlyWithCurrency\"));\n                stopVariableSearch = true;\n                break;\n            default:\n                break;\n        }\n\n        if (stopVariableSearch) {\n            break;\n        }\n    }\n\n    return text;\n};\n\n/**\n *\n * @param {string} text\n * @returns {string} return the initial text with all variables inside of it resolved. If some cannot be resoled, they will retain their variable form\n */\nconst replaceTextVariables = (text) => {\n    //get all the textVariables defined using brackets\n    const allTextVariables = [...new Set(text.match(/{.*?}/ig))];\n    for (const textVariable of allTextVariables) {\n        const variableParameters = textVariable.split(/{|}|\\|\\||;/);\n\n        // get the hidingCondition and test it. If it is true remove the variable from the text\n        const hideCondition = variableParameters.find(variableParameter => variableParameter.includes(\"hide=\"))?.split(\"=\")[1];\n        if (checkHidingCondition(hideCondition)) {\n            text = text.replaceAll(textVariable, \"\");\n            continue;\n        }\n\n        // replace the variable inside the text\n        text = replaceVariable(text, variableParameters, textVariable);\n    }\n\n    return text;\n};\n\n/**\n *\n * @param {object} parent\n * parse the data-cmp-data-layer object and for each string resolve every variable. This is for the data layer component\n */\nconst recursiveDataLayerParse = (parent) => {\n    for (const key of Object.keys(parent)) {\n        if (typeof parent[key] === 'string') {\n            parent[key] = replaceTextVariables(parent[key]);\n        }\n\n        if (typeof parent[key] === 'object') {\n            recursiveDataLayerParse(parent[key]);\n        }\n    }\n};\n\n/**\n * @param {HTMLElement} element\n */\nexport const resolve = (element) => {\n\n    const children = [...element.childNodes];\n    for (const child of children) {\n\n        //resolve all text variables in the data layer attribute\n        if (child.dataset && child.dataset.cmpDataLayer && !child.dataset.parsedDataLayer) {\n            const dataLayerObject = JSON.parse(child.dataset.cmpDataLayer);\n            recursiveDataLayerParse(dataLayerObject);\n            child.setAttribute(\"data-cmp-data-layer\", JSON.stringify(dataLayerObject));\n            child.setAttribute(\"data-parsed-data-layer\", true);\n        }\n\n        // resolve all text variables in text nodes\n        if (child.nodeType === Node.TEXT_NODE) {\n            child.textContent = replaceTextVariables(child.textContent);\n        }\n\n        children.push(...child.childNodes);\n    }\n}"],"names":[],"mappings":"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"}