import{GlobalContext as s}from"../resolver.js";import{Constants as L}from"../../../constants.js";const E=e=>{if(!e)return!1;switch(e){case"no-price":return!s.variations.some(t=>t.getPrice("value"));case"no-price-discounted":return!s.variations.some(t=>t.getDiscountedPrice("value"));default:return!0}},o=(e,t,a)=>{let c=e==="max"?Number.MIN_SAFE_INTEGER:Number.MAX_SAFE_INTEGER,n=null;for(const r of t){let l=a(r);l=L.PRODUCT_ID_MAPPINGS[r.getId()].isMonthlyProduct?l*12:l,(l&&e==="min"&&l<c||e==="max"&&l>c)&&(c=l,n=r)}return n},A=(e,t,a)=>{const c=s.variations;let n=!1,r=null;if(c.length!==0){for(const l of t){switch(l){case"GLOBAL_SMALLEST_PRICE_FULL":if(r=o("min",c,i=>i.getPrice("value")),!r)break;e=e.replaceAll(a,r.getPrice("valueWithCurrency")),n=!0;break;case"GLOBAL_BIGGEST_PRICE_FULL":if(r=o("max",c,i=>i.getPrice("value")),!r)break;e=e.replaceAll(a,r.getPrice("valueWithCurrency")),n=!0;break;case"GLOBAL_SMALLEST_PRICE_DISCOUNTED":if(r=o("min",c,i=>i.getDiscountedPrice("value")),!r)break;e=e.replaceAll(a,r.getDiscountedPrice("valueWithCurrency")),n=!0;break;case"GLOBAL_BIGGEST_PRICE_DISCOUNTED":if(r=o("max",c,i=>i.getDiscountedPrice("value")),!r)break;e=e.replaceAll(a,r.getDiscountedPrice("valueWithCurrency")),n=!0;break;case"GLOBAL_SMALLEST_DISCOUNT_PERCENTAGE":if(r=o("min",c,i=>i.getDiscount("percentage")),!r)break;e=e.replaceAll(a,r.getDiscount("percentageWithProcent")),n=!0;break;case"GLOBAL_BIGGEST_DISCOUNT_PERCENTAGE":if(r=o("max",c,i=>i.getDiscount("percentage")),!r)break;e=e.replaceAll(a,r.getDiscount("percentageWithProcent")),n=!0;break;case"GLOBAL_SMALLEST_DISCOUNT_VALUE":if(r=o("min",c,i=>i.getDiscount("value")),!r)break;e=e.replaceAll(a,r.getDiscount("valueWithCurrency")),n=!0;break;case"GLOBAL_BIGGEST_DISCOUNT_VALUE":if(r=o("max",c,i=>i.getDiscount("value")),!r)break;e=e.replaceAll(a,r.getDiscount("valueWithCurrency")),n=!0;break;case"GLOBAL_SMALLEST_PRICE_PER_MONTH":if(r=o("min",c,i=>i.getPrice("monthly")),!r)break;e=e.replaceAll(a,r.getPrice("monthlyWithCurrency")),n=!0;break;case"GLOBAL_BIGGEST_PRICE_PER_MONTH":if(r=o("max",c,i=>i.getPrice("monthly")),!r)break;e=e.replaceAll(a,r.getPrice("monthlyWithCurrency")),n=!0;break;case"GLOBAL_SMALLEST_PRICE_DISCOUNTED_PER_MONTH":if(r=o("min",c,i=>i.getDiscountedPrice("monthly")),!r)break;e=e.replaceAll(a,r.getDiscountedPrice("monthlyWithCurrency")),n=!0;break;case"GLOBAL_BIGGEST_PRICE_DISCOUNTED_PER_MONTH":if(r=o("max",c,i=>i.getDiscountedPrice("monthly")),!r)break;e=e.replaceAll(a,r.getDiscountedPrice("monthlyWithCurrency")),n=!0;break}if(n)break}return e}},u=e=>{const t=[...new Set(e.match(/{.*?}/ig))];for(const a of t){const c=a.split(/{|}|\|\||;/),n=c.find(r=>r.includes("hide="))?.split("=")[1];if(E(n)){e=e.replaceAll(a,"");continue}e=A(e,c,a)}return e},_=e=>{for(const t of Object.keys(e))typeof e[t]=="string"&&(e[t]=u(e[t])),typeof e[t]=="object"&&_(e[t])},d=e=>{const t=[...e.childNodes];for(const a of t){if(a.dataset&&a.dataset.cmpDataLayer&&!a.dataset.parsedDataLayer){const c=JSON.parse(a.dataset.cmpDataLayer);_(c),a.setAttribute("data-cmp-data-layer",JSON.stringify(c)),a.setAttribute("data-parsed-data-layer",!0)}a.nodeType===Node.TEXT_NODE&&(a.textContent=u(a.textContent)),t.push(...a.childNodes)}};export{d as resolve};
//# sourceMappingURL=globalTextVariable.js.map
