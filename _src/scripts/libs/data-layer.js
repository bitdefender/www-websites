import{getTargetExperimentDetails as i,target as o}from"../target.js";import"../../packages/repobit/dex-utils/dist/src/index.js";import r from"../page.js";import{AdobeDataLayerService as a}from"../../packages/repobit/dex-data-layer/dist/src/adobe-data-layer-service/index.js";import{ButtonClickEvent as c}from"../../packages/repobit/dex-data-layer/dist/src/events/button-click-event/index.js";import{PageErrorEvent as s}from"../../packages/repobit/dex-data-layer/dist/src/events/page-error-event/index.js";import{PageLoadStartedEvent as g}from"../../packages/repobit/dex-data-layer/dist/src/events/page-load-started-event/index.js";import{ProductLoadedEvent as m}from"../../packages/repobit/dex-data-layer/dist/src/events/product-loaded-event/index.js";import{UserDetectedEvent as d}from"../../packages/repobit/dex-data-layer/dist/src/events/user-detected-event/index.js";import{getExperimentDetails as l,generatePageLoadStartedName as u,getUrlPromotion as v,getMetadata as p,getCampaignBasedOnLocale as E,getProductFinding as P}from"../utils/utils.js";import n from"../../packages/repobit/dex-utils/dist/src/user.js";class f extends m{getOptionInfo(e){return{ID:e.getAvangateId(),name:e.getName(),devices:e.getId()==="psm"?10:e.getDevices(),subscription:e.getSubscription("months"),version:e.getSubscription("months")===1?"monthly":"yearly",basePrice:e.getPrice("value"),discountValue:e.getDiscount("value"),discountRate:e.getDiscount("percentage"),currency:e.getCurrency(),priceWithTax:e.getDiscountedPrice("value")||e.getPrice("value")}}}const D=()=>{window.errorCode==="404"&&a.push(new s)},w=()=>{if(localStorage.getItem("clickEvent")!==null){const t=JSON.parse(localStorage.getItem("clickEvent"));t?.clickEvent&&a.push(new c(t.clickEvent,t.productId)),localStorage.removeItem("clickEvent")}},I=()=>{r.name==="free-antivirus"&&a.push(new f({ID:"8430"},"info"))},h=async()=>{a.push(new g(r,{name:u(),experimentDetails:await i()??l(),geoRegion:await n.country,serverName:"hlx.live"},{promotionID:(await o.configMbox)?.promotion||v()||p("pid")||E()||"",internalPromotionID:r.getParamValue("icid")||"",trackingID:r.getParamValue("cid")||""}))},k=async()=>{a.push(new d(r,{ID:await n.fingerprint,productFinding:P()}))},R=async()=>{await h(),D(),await k(),w(),I()};export{f as FranklinProductsLoadedEvent,R as resolveNonProductsDataLayer};
//# sourceMappingURL=data-layer.js.map
